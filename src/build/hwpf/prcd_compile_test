#!/bin/bash
#  IBM_PROLOG_BEGIN_TAG
#  This is an automatically generated prolog.
#
#  $Source: src/build/hwpf/prcd_compile_test $
#
#  IBM CONFIDENTIAL
#
#  COPYRIGHT International Business Machines Corp. 2011
#
#  p1
#
#  Object Code Only (OCO) source materials
#  Licensed Internal Code Source Materials
#  IBM HostBoot Licensed Internal Code
#
#  The source code for this program is not published or other-
#  wise divested of its trade secrets, irrespective of what has
#  been deposited with the U.S. Copyright Office.
#
#  Origin: 30
#
#  IBM_PROLOG_END

#Note that this test case assumes 3 files present in the PWD (along with prcd_compile.tcl)
# - fapiTestHwp.C fapiTestHwp.H proc_cen_framelock.C
# and 1 file in a subdirectory
#  dmi_training/proc_cen_framelock/proc_cen_framelock.H

BUILD="b0218a_2012_Sprint9"

###############################################################
# Validate return code, exit on failure
###############################################################
function check_good_rc {

    if [ $1 -eq 0 ]; then
        echo SUCCESS
        echo
    else
        echo FAIL: Bad RC Returned:$1; exit -1
    fi
}

###############################################################
# Validate return code and that binary was generated, exit on failure
###############################################################
function check_good_rc_and_bin {

    if [ -f $2/hbicore.bin ] && [ -f $2/hbicore_extended.bin ] && [ -f $2/hbotStringFile ]; then
        check_good_rc $1        
        rm -f $2/hbicore*    
        rm -f $2/*.bin
        rm -f $2/hbotStringFile
    else
        echo FAIL: Missing File; exit -1
    fi
}

###############################################################
# Validate return code is non-zero, exit on failure
###############################################################
function check_bad_rc {

    if [ $1 -ne 0 ]; then
        echo SUCCESS
        echo
    else
        echo FAIL; exit -1
    fi
}

###############################################################
# Main
###############################################################

# Check if the needed files exist, if not try and copy them in
if [ ! -f "./fapiTestHwp.H" ]; then
    cp ../../include/usr/hwpf/hwp/fapiTestHwp.H ./
    check_good_rc $?
fi

if [ ! -f "./fapiTestHwp.C" ]; then
    cp ../../usr/hwpf/hwp/fapiTestHwp.C ./
    check_good_rc $?
fi

if [ ! -f "./sample.initfile" ]; then
    cp ../../usr/hwpf/hwp/initfiles/sample.initfile ./
    check_good_rc $?
fi

if [ ! -f "./proc_cen_framelock.C" ]; then
    cp ../../usr/hwpf/hwp/dmi_training/proc_cen_framelock/proc_cen_framelock.H ./
    check_good_rc $?
fi

if [ ! -f "./dmi_training/proc_cen_framelock/proc_cen_framelock.H" ]; then
    mkdir -p dmi_training/proc_cen_framelock
    cp ../../usr/hwpf/hwp/dmi_training/proc_cen_framelock/proc_cen_framelock.H ./dmi_training/proc_cen_framelock
    check_good_rc $?
fi

echo 

echo "TEST - Good Path - Multi Process"
{ ./prcd_compile.tcl -d $BUILD -o out1 ./fapiTestHwp.H; check_good_rc_and_bin $? ./out1; } &
sleep 2
{ ./prcd_compile.tcl -d $BUILD -o out2 ./fapiTestHwp.C; check_good_rc_and_bin $? ./out2; } &
sleep 2
{ ./prcd_compile.tcl -d $BUILD -o out3 ./fapiTestHwp.H ./fapiTestHwp.C; check_good_rc_and_bin $? ./out3; } &
wait

echo
echo "TEST - Good Path - 1 C File"
./prcd_compile.tcl -d $BUILD ./fapiTestHwp.C
check_good_rc_and_bin $? ./

echo
echo "TEST - Good Path - 1 H File with -o Param"
./prcd_compile.tcl -d $BUILD -o ./ ./fapiTestHwp.H
check_good_rc_and_bin $? ./

echo
echo "TEST - Good Path - 2 Files"
./prcd_compile.tcl -d $BUILD ./proc_cen_framelock.C ./fapiTestHwp.C
check_good_rc_and_bin $? ./

echo
echo "TEST - Good Path - buried File"
./prcd_compile.tcl -d $BUILD ./dmi_training/proc_cen_framelock/proc_cen_framelock.H
check_good_rc_and_bin $? ./

echo
echo "TEST - Good Path - No Files"
./prcd_compile.tcl -d $BUILD
check_good_rc_and_bin $? ./

echo
echo "TEST - Good Path - Initfile"
./prcd_compile.tcl -o ./output/ sample.initfile
check_good_rc_and_bin $? ./output/

echo
echo "TEST - Good Path - All Files"
./prcd_compile.tcl -o ./output/ sample.initfile fapiTestHwp.H ./fapiTestHwp.C
check_good_rc_and_bin $? ./output/

echo
echo "TEST - Good Path - Compile Failure" 
echo COMPILE_FAIL >> fapiTestHwp.H
./prcd_compile.tcl -d $BUILD fapiTestHwp.H fapiTestHwp.C
check_bad_rc $?
