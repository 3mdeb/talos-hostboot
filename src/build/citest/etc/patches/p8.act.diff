*** /esw/fips810/Builds/b0621a_1225.810/src/simu/data/cec-chip/p8.act	2012-06-20 13:51:48.000000000 -0500
--- /afs/rchland.ibm.com/usr8/dsanner/public/sbox/p8.test/src/simu/data/cec-chip/p8.act	2012-07-12 15:49:49.000000000 -0500
***************
*** 1,14 ****
  # IBM_PROLOG_BEGIN_TAG 
  # This is an automatically generated prolog. 
  #  
! # fips810 src/simu/data/cec-chip/p8.act 1.12 
  #  
  # Licensed Materials - Property of IBM 
  #  
  # Restricted Materials of IBM 
  #  
  # COPYRIGHT International Business Machines Corp. 2005,2012 
  # All Rights Reserved 
  #  
  # US Government Users Restricted Rights - Use, duplication or 
  # disclosure restricted by GSA ADP Schedule Contract with IBM Corp. 
--- 1,14 ----
  # IBM_PROLOG_BEGIN_TAG 
  # This is an automatically generated prolog. 
  #  
! # fips810 src/simu/data/cec-chip/p8.act 1.15 
  #  
  # Licensed Materials - Property of IBM 
  #  
  # Restricted Materials of IBM 
  #  
  # COPYRIGHT International Business Machines Corp. 2005,2012 
  # All Rights Reserved 
  #  
  # US Government Users Restricted Rights - Use, duplication or 
  # disclosure restricted by GSA ADP Schedule Contract with IBM Corp. 
***************
*** 25,44 ****
--- 25,47 ----
  #        SW134334  vanlee    04/09/12  startclocks and chipID actions
  #  ch110 F831734   ched      04/12/12  New action to start instructions
  #        SW132710  othayoth  05/02/12  SBE Start related actions
  #        D835995   andrewg   05/15/12  Update SBE action file per emails
  #        D834168   vanlee    05/22/12  New action for Fabric io_run_training
  #        F836287   dcrowell  05/23/12  Update centaur aliases (mycentaur->mymcPort)
  #        D835987   dsanner   05/17/12  PSI Init Work
  #        F835987   dsanner   05/24/12  PHYP memory map actions
  #        D839763   dsanner   06/12/12  Adapt to PSIHB changes
  #        D840980   dsanner   06/18/12  Add SBE re-ipl support
+ #  ch128 F841800   ched      07/02/12  Add Hostboot offset to sbeStart action
+ #        F841622   opiet     07/10/12  Core 5, thread 2 scratch reg action
+ #        F843251   dsanner   07/12/12  Pay attention to memory map enable bit
  
  # ch110 send instruction start signal to phyp model for core 5, thread 0
  CAUSE_EFFECT {
    LABEL=[Start Instructions - c5t0]
    WATCH=[FSIMBOX(0x1C)] # Watch SBE_VITAL_CFAM_0x281C
    CAUSE: TARGET=[FSIMBOX(0x1C)] OP=[BIT,ON] BIT=[0] # if SBE_VITAL_CFAM_0x281C[0] is set.
    EFFECT: TARGET=[MODULE(startInstructions, 5, 0)] OP=[MODULECALL] # Start Hostboot
    EFFECT: TARGET=[MODULE(startInstructions, 5, 1)] OP=[MODULECALL] # Start Hostboot
    EFFECT: TARGET=[MODULE(startInstructions, 5, 2)] OP=[MODULECALL] # Start Hostboot
    EFFECT: TARGET=[MODULE(startInstructions, 5, 3)] OP=[MODULECALL] # Start Hostboot
***************
*** 76,100 ****
    EFFECT: TARGET=[PROCREG(nia, 5, 3)] OP=[EQUALTO,BUF] DATA=[LITERAL(64,00000000 00000100)]# NIA to default
    EFFECT: TARGET=[PROCREG(msr, 5, 3)] OP=[EQUALTO,BUF] DATA=[LITERAL(64,D0000000 00000000)]# MSR to default
    EFFECT: TARGET=[PROCREG(nia, 5, 4)] OP=[EQUALTO,BUF] DATA=[LITERAL(64,00000000 00000100)]# NIA to default
    EFFECT: TARGET=[PROCREG(msr, 5, 4)] OP=[EQUALTO,BUF] DATA=[LITERAL(64,D0000000 00000000)]# MSR to default
    EFFECT: TARGET=[PROCREG(nia, 5, 5)] OP=[EQUALTO,BUF] DATA=[LITERAL(64,00000000 00000100)]# NIA to default
    EFFECT: TARGET=[PROCREG(msr, 5, 5)] OP=[EQUALTO,BUF] DATA=[LITERAL(64,D0000000 00000000)]# MSR to default
    EFFECT: TARGET=[PROCREG(nia, 5, 6)] OP=[EQUALTO,BUF] DATA=[LITERAL(64,00000000 00000100)]# NIA to default
    EFFECT: TARGET=[PROCREG(msr, 5, 6)] OP=[EQUALTO,BUF] DATA=[LITERAL(64,D0000000 00000000)]# MSR to default
    EFFECT: TARGET=[PROCREG(nia, 5, 7)] OP=[EQUALTO,BUF] DATA=[LITERAL(64,00000000 00000100)]# NIA to default
    EFFECT: TARGET=[PROCREG(msr, 5, 7)] OP=[EQUALTO,BUF] DATA=[LITERAL(64,D0000000 00000000)]# MSR to default
!   
!   EFFECT: TARGET=[MODULE(sbeStart)] OP=[MODULECALL]
  
  }
  
  
  
  CAUSE_EFFECT {
    LABEL=[Framelock MCI0]
    WATCH=[REG(0x0201184A)]  # MCI0_CFG_REG
    CAUSE: TARGET=[REG(0x0201184A)] OP=[BIT,ON] BIT=[7] # MCI0_CFG_REG[7] - Start Frame Lock
    EFFECT: TARGET=[REG(0x0201184B)] OP=[BIT,ON] BIT=[0] # MCI_STAT_REG  - Frame Lock Pass
    EFFECT: TARGET=[ALIAS(mymcPort0)REG(0x0201080B)] OP=[BIT,ON] BIT=[0] # MBI_STAT_REG  - Frame Lock Pass
  }
  
--- 79,108 ----
    EFFECT: TARGET=[PROCREG(nia, 5, 3)] OP=[EQUALTO,BUF] DATA=[LITERAL(64,00000000 00000100)]# NIA to default
    EFFECT: TARGET=[PROCREG(msr, 5, 3)] OP=[EQUALTO,BUF] DATA=[LITERAL(64,D0000000 00000000)]# MSR to default
    EFFECT: TARGET=[PROCREG(nia, 5, 4)] OP=[EQUALTO,BUF] DATA=[LITERAL(64,00000000 00000100)]# NIA to default
    EFFECT: TARGET=[PROCREG(msr, 5, 4)] OP=[EQUALTO,BUF] DATA=[LITERAL(64,D0000000 00000000)]# MSR to default
    EFFECT: TARGET=[PROCREG(nia, 5, 5)] OP=[EQUALTO,BUF] DATA=[LITERAL(64,00000000 00000100)]# NIA to default
    EFFECT: TARGET=[PROCREG(msr, 5, 5)] OP=[EQUALTO,BUF] DATA=[LITERAL(64,D0000000 00000000)]# MSR to default
    EFFECT: TARGET=[PROCREG(nia, 5, 6)] OP=[EQUALTO,BUF] DATA=[LITERAL(64,00000000 00000100)]# NIA to default
    EFFECT: TARGET=[PROCREG(msr, 5, 6)] OP=[EQUALTO,BUF] DATA=[LITERAL(64,D0000000 00000000)]# MSR to default
    EFFECT: TARGET=[PROCREG(nia, 5, 7)] OP=[EQUALTO,BUF] DATA=[LITERAL(64,00000000 00000100)]# NIA to default
    EFFECT: TARGET=[PROCREG(msr, 5, 7)] OP=[EQUALTO,BUF] DATA=[LITERAL(64,D0000000 00000000)]# MSR to default
!   # ch128 Load Hostboot base image from offset in MBOX SCRATCH3 reg (0xEC)
!   EFFECT: TARGET=[MODULE(sbeStart, FSIMBOX(0xEC))] OP=[MODULECALL]  
  
  }
  
+ CAUSE_EFFECT {
+   LABEL=[scratch stuff]
+   WATCH=[REG(0x15013285)]
+   EFFECT: TARGET=[PROCREG(scratch, 5,2)] OP=[EQUALTO,BUF] DATA=[REG(0x15013285)] # Core 5, thread 2
+ }
  
  
  CAUSE_EFFECT {
    LABEL=[Framelock MCI0]
    WATCH=[REG(0x0201184A)]  # MCI0_CFG_REG
    CAUSE: TARGET=[REG(0x0201184A)] OP=[BIT,ON] BIT=[7] # MCI0_CFG_REG[7] - Start Frame Lock
    EFFECT: TARGET=[REG(0x0201184B)] OP=[BIT,ON] BIT=[0] # MCI_STAT_REG  - Frame Lock Pass
    EFFECT: TARGET=[ALIAS(mymcPort0)REG(0x0201080B)] OP=[BIT,ON] BIT=[0] # MBI_STAT_REG  - Frame Lock Pass
  }
  
***************
*** 351,441 ****
    EFFECT: TARGET=[INDSCOM_0x08010C3F(0x00088800)] OP=[EQUALTO,BUFSTRING] DATA=[LITERAL(64,00000000 0000F800)]
  }
  
  
  ##################################
  ### Establish PHYP Memory Maps ###
  ##################################
  CAUSE_EFFECT {
    LABEL=[MCS0 Memory Map]
    WATCH=[REG(0x02011800)]
    EFFECT: TARGET=[LOGIC(0xFF0CC001)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011800)] MASK=[LITERAL(64,0003FFFF 00000000)] SHIFT=[-12] #base
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011800)] MASK=[LITERAL(64,00001FFF 00000000)] SHIFT=[8] #size
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[INCREMENT,MASK] INCVAL=[1] MASK=[LITERAL(64,00001FFF 00000000)]
    EFFECT: TARGET=[LOGIC(0xFF0CC003)] OP=[EQUALTO,BUF,MASK] DATA=[REG(0x02011800)] MASK=[LITERAL(64,80000000 00000000)] #valid
    EFFECT: TARGET=[MODULE(sendMemToPhyp, LOGIC(0xFF0CC001), LOGIC(0xFF0CC002), LOGIC(0xFF0CC003), 99, 0)] OP=[MODULECALL]
  }
  
  CAUSE_EFFECT {
    LABEL=[MCS1 Memory Map]
    WATCH=[REG(0x02011880)]
    EFFECT: TARGET=[LOGIC(0xFF0CC001)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011880)] MASK=[LITERAL(64,0003FFFF 00000000)] SHIFT=[-12] #base
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011880)] MASK=[LITERAL(64,00001FFF 00000000)] SHIFT=[8] #size
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[INCREMENT,MASK] INCVAL=[1] MASK=[LITERAL(64,00001FFF 00000000)]
    EFFECT: TARGET=[LOGIC(0xFF0CC003)] OP=[EQUALTO,BUF,MASK] DATA=[REG(0x02011880)] MASK=[LITERAL(64,80000000 00000000)] #valid
    EFFECT: TARGET=[MODULE(sendMemToPhyp, LOGIC(0xFF0CC001), LOGIC(0xFF0CC002), LOGIC(0xFF0CC003), 99, 1)] OP=[MODULECALL]
  }
  
  CAUSE_EFFECT {
    LABEL=[MCS2 Memory Map]
    WATCH=[REG(0x02011900)]
    EFFECT: TARGET=[LOGIC(0xFF0CC001)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011900)] MASK=[LITERAL(64,0003FFFF 00000000)] SHIFT=[-12] #base
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011900)] MASK=[LITERAL(64,00001FFF 00000000)] SHIFT=[8] #size
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[INCREMENT,MASK] INCVAL=[1] MASK=[LITERAL(64,00001FFF 00000000)]
    EFFECT: TARGET=[LOGIC(0xFF0CC003)] OP=[EQUALTO,BUF,MASK] DATA=[REG(0x02011900)] MASK=[LITERAL(64,80000000 00000000)] #valid
    EFFECT: TARGET=[MODULE(sendMemToPhyp, LOGIC(0xFF0CC001), LOGIC(0xFF0CC002), LOGIC(0xFF0CC003), 99, 2)] OP=[MODULECALL]
  }
  
  CAUSE_EFFECT {
    LABEL=[MCS3 Memory Map]
    WATCH=[REG(0x02011980)]
    EFFECT: TARGET=[LOGIC(0xFF0CC001)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011980)] MASK=[LITERAL(64,0003FFFF 00000000)] SHIFT=[-12] #base
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011980)] MASK=[LITERAL(64,00001FFF 00000000)] SHIFT=[8] #size
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[INCREMENT,MASK] INCVAL=[1] MASK=[LITERAL(64,00001FFF 00000000)]
    EFFECT: TARGET=[LOGIC(0xFF0CC003)] OP=[EQUALTO,BUF,MASK] DATA=[REG(0x02011980)] MASK=[LITERAL(64,80000000 00000000)] #valid
    EFFECT: TARGET=[MODULE(sendMemToPhyp, LOGIC(0xFF0CC001), LOGIC(0xFF0CC002), LOGIC(0xFF0CC003), 99, 3)] OP=[MODULECALL]
  }
  
  CAUSE_EFFECT {
    LABEL=[MCS4 Memory Map]
    WATCH=[REG(0x02011C00)]
    EFFECT: TARGET=[LOGIC(0xFF0CC001)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011C00)] MASK=[LITERAL(64,0003FFFF 00000000)] SHIFT=[-12] #base
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011C00)] MASK=[LITERAL(64,00001FFF 00000000)] SHIFT=[8] #size
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[INCREMENT,MASK] INCVAL=[1] MASK=[LITERAL(64,00001FFF 00000000)]
    EFFECT: TARGET=[LOGIC(0xFF0CC003)] OP=[EQUALTO,BUF,MASK] DATA=[REG(0x02011C00)] MASK=[LITERAL(64,80000000 00000000)] #valid
    EFFECT: TARGET=[MODULE(sendMemToPhyp, LOGIC(0xFF0CC001), LOGIC(0xFF0CC002), LOGIC(0xFF0CC003), 99, 4)] OP=[MODULECALL]
  }
  
  CAUSE_EFFECT {
!   LABEL=[MCS4 Memory Map]
    WATCH=[REG(0x02011C80)]
    EFFECT: TARGET=[LOGIC(0xFF0CC001)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011C80)] MASK=[LITERAL(64,0003FFFF 00000000)] SHIFT=[-12] #base
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011C80)] MASK=[LITERAL(64,00001FFF 00000000)] SHIFT=[8] #size
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[INCREMENT,MASK] INCVAL=[1] MASK=[LITERAL(64,00001FFF 00000000)]
    EFFECT: TARGET=[LOGIC(0xFF0CC003)] OP=[EQUALTO,BUF,MASK] DATA=[REG(0x02011C80)] MASK=[LITERAL(64,80000000 00000000)] #valid
    EFFECT: TARGET=[MODULE(sendMemToPhyp, LOGIC(0xFF0CC001), LOGIC(0xFF0CC002), LOGIC(0xFF0CC003), 99, 5)] OP=[MODULECALL]
  }
  
  
  CAUSE_EFFECT {
    LABEL=[MCS6 Memory Map]
    WATCH=[REG(0x02011D00)]
    EFFECT: TARGET=[LOGIC(0xFF0CC001)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011D00)] MASK=[LITERAL(64,0003FFFF 00000000)] SHIFT=[-12] #base
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011D00)] MASK=[LITERAL(64,00001FFF 00000000)] SHIFT=[8] #size
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[INCREMENT,MASK] INCVAL=[1] MASK=[LITERAL(64,00001FFF 00000000)]
    EFFECT: TARGET=[LOGIC(0xFF0CC003)] OP=[EQUALTO,BUF,MASK] DATA=[REG(0x02011D00)] MASK=[LITERAL(64,80000000 00000000)] #valid
    EFFECT: TARGET=[MODULE(sendMemToPhyp, LOGIC(0xFF0CC001), LOGIC(0xFF0CC002), LOGIC(0xFF0CC003), 99, 6)] OP=[MODULECALL]
  }
  
  CAUSE_EFFECT {
    LABEL=[MCS7 Memory Map]
    WATCH=[REG(0x02011D80)]
    EFFECT: TARGET=[LOGIC(0xFF0CC001)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011D80)] MASK=[LITERAL(64,0003FFFF 00000000)] SHIFT=[-12] #base
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011D80)] MASK=[LITERAL(64,00001FFF 00000000)] SHIFT=[8] #size
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[INCREMENT,MASK] INCVAL=[1] MASK=[LITERAL(64,00001FFF 00000000)]
    EFFECT: TARGET=[LOGIC(0xFF0CC003)] OP=[EQUALTO,BUF,MASK] DATA=[REG(0x02011D80)] MASK=[LITERAL(64,80000000 00000000)] #valid
    EFFECT: TARGET=[MODULE(sendMemToPhyp, LOGIC(0xFF0CC001), LOGIC(0xFF0CC002), LOGIC(0xFF0CC003), 99, 7)] OP=[MODULECALL]
  }
  
  #################################
  ### Exit cache contained mode ###
  #################################
--- 359,457 ----
    EFFECT: TARGET=[INDSCOM_0x08010C3F(0x00088800)] OP=[EQUALTO,BUFSTRING] DATA=[LITERAL(64,00000000 0000F800)]
  }
  
  
  ##################################
  ### Establish PHYP Memory Maps ###
  ##################################
  CAUSE_EFFECT {
    LABEL=[MCS0 Memory Map]
    WATCH=[REG(0x02011800)]
+   CAUSE: TARGET=[REG(0x02011800)] OP=[BIT,ON] BIT=[0] # Enable bit
    EFFECT: TARGET=[LOGIC(0xFF0CC001)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011800)] MASK=[LITERAL(64,0003FFFF 00000000)] SHIFT=[-12] #base
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011800)] MASK=[LITERAL(64,00001FFF 00000000)] SHIFT=[8] #size
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[INCREMENT,MASK] INCVAL=[1] MASK=[LITERAL(64,00001FFF 00000000)]
    EFFECT: TARGET=[LOGIC(0xFF0CC003)] OP=[EQUALTO,BUF,MASK] DATA=[REG(0x02011800)] MASK=[LITERAL(64,80000000 00000000)] #valid
    EFFECT: TARGET=[MODULE(sendMemToPhyp, LOGIC(0xFF0CC001), LOGIC(0xFF0CC002), LOGIC(0xFF0CC003), 99, 0)] OP=[MODULECALL]
  }
  
  CAUSE_EFFECT {
    LABEL=[MCS1 Memory Map]
    WATCH=[REG(0x02011880)]
+   CAUSE: TARGET=[REG(0x02011880)] OP=[BIT,ON] BIT=[0] # Enable bit
    EFFECT: TARGET=[LOGIC(0xFF0CC001)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011880)] MASK=[LITERAL(64,0003FFFF 00000000)] SHIFT=[-12] #base
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011880)] MASK=[LITERAL(64,00001FFF 00000000)] SHIFT=[8] #size
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[INCREMENT,MASK] INCVAL=[1] MASK=[LITERAL(64,00001FFF 00000000)]
    EFFECT: TARGET=[LOGIC(0xFF0CC003)] OP=[EQUALTO,BUF,MASK] DATA=[REG(0x02011880)] MASK=[LITERAL(64,80000000 00000000)] #valid
    EFFECT: TARGET=[MODULE(sendMemToPhyp, LOGIC(0xFF0CC001), LOGIC(0xFF0CC002), LOGIC(0xFF0CC003), 99, 1)] OP=[MODULECALL]
  }
  
  CAUSE_EFFECT {
    LABEL=[MCS2 Memory Map]
    WATCH=[REG(0x02011900)]
+   CAUSE: TARGET=[REG(0x02011900)] OP=[BIT,ON] BIT=[0] # Enable bit
    EFFECT: TARGET=[LOGIC(0xFF0CC001)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011900)] MASK=[LITERAL(64,0003FFFF 00000000)] SHIFT=[-12] #base
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011900)] MASK=[LITERAL(64,00001FFF 00000000)] SHIFT=[8] #size
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[INCREMENT,MASK] INCVAL=[1] MASK=[LITERAL(64,00001FFF 00000000)]
    EFFECT: TARGET=[LOGIC(0xFF0CC003)] OP=[EQUALTO,BUF,MASK] DATA=[REG(0x02011900)] MASK=[LITERAL(64,80000000 00000000)] #valid
    EFFECT: TARGET=[MODULE(sendMemToPhyp, LOGIC(0xFF0CC001), LOGIC(0xFF0CC002), LOGIC(0xFF0CC003), 99, 2)] OP=[MODULECALL]
  }
  
  CAUSE_EFFECT {
    LABEL=[MCS3 Memory Map]
    WATCH=[REG(0x02011980)]
+   CAUSE: TARGET=[REG(0x02011980)] OP=[BIT,ON] BIT=[0] # Enable bit
    EFFECT: TARGET=[LOGIC(0xFF0CC001)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011980)] MASK=[LITERAL(64,0003FFFF 00000000)] SHIFT=[-12] #base
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011980)] MASK=[LITERAL(64,00001FFF 00000000)] SHIFT=[8] #size
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[INCREMENT,MASK] INCVAL=[1] MASK=[LITERAL(64,00001FFF 00000000)]
    EFFECT: TARGET=[LOGIC(0xFF0CC003)] OP=[EQUALTO,BUF,MASK] DATA=[REG(0x02011980)] MASK=[LITERAL(64,80000000 00000000)] #valid
    EFFECT: TARGET=[MODULE(sendMemToPhyp, LOGIC(0xFF0CC001), LOGIC(0xFF0CC002), LOGIC(0xFF0CC003), 99, 3)] OP=[MODULECALL]
  }
  
  CAUSE_EFFECT {
    LABEL=[MCS4 Memory Map]
    WATCH=[REG(0x02011C00)]
+   CAUSE: TARGET=[REG(0x02011C00)] OP=[BIT,ON] BIT=[0] # Enable bit
    EFFECT: TARGET=[LOGIC(0xFF0CC001)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011C00)] MASK=[LITERAL(64,0003FFFF 00000000)] SHIFT=[-12] #base
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011C00)] MASK=[LITERAL(64,00001FFF 00000000)] SHIFT=[8] #size
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[INCREMENT,MASK] INCVAL=[1] MASK=[LITERAL(64,00001FFF 00000000)]
    EFFECT: TARGET=[LOGIC(0xFF0CC003)] OP=[EQUALTO,BUF,MASK] DATA=[REG(0x02011C00)] MASK=[LITERAL(64,80000000 00000000)] #valid
    EFFECT: TARGET=[MODULE(sendMemToPhyp, LOGIC(0xFF0CC001), LOGIC(0xFF0CC002), LOGIC(0xFF0CC003), 99, 4)] OP=[MODULECALL]
  }
  
  CAUSE_EFFECT {
!   LABEL=[MCS5 Memory Map]
    WATCH=[REG(0x02011C80)]
+   CAUSE: TARGET=[REG(0x02011C80)] OP=[BIT,ON] BIT=[0] # Enable bit
    EFFECT: TARGET=[LOGIC(0xFF0CC001)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011C80)] MASK=[LITERAL(64,0003FFFF 00000000)] SHIFT=[-12] #base
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011C80)] MASK=[LITERAL(64,00001FFF 00000000)] SHIFT=[8] #size
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[INCREMENT,MASK] INCVAL=[1] MASK=[LITERAL(64,00001FFF 00000000)]
    EFFECT: TARGET=[LOGIC(0xFF0CC003)] OP=[EQUALTO,BUF,MASK] DATA=[REG(0x02011C80)] MASK=[LITERAL(64,80000000 00000000)] #valid
    EFFECT: TARGET=[MODULE(sendMemToPhyp, LOGIC(0xFF0CC001), LOGIC(0xFF0CC002), LOGIC(0xFF0CC003), 99, 5)] OP=[MODULECALL]
  }
  
  
  CAUSE_EFFECT {
    LABEL=[MCS6 Memory Map]
    WATCH=[REG(0x02011D00)]
+   CAUSE: TARGET=[REG(0x02011D00)] OP=[BIT,ON] BIT=[0] # Enable bit
    EFFECT: TARGET=[LOGIC(0xFF0CC001)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011D00)] MASK=[LITERAL(64,0003FFFF 00000000)] SHIFT=[-12] #base
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011D00)] MASK=[LITERAL(64,00001FFF 00000000)] SHIFT=[8] #size
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[INCREMENT,MASK] INCVAL=[1] MASK=[LITERAL(64,00001FFF 00000000)]
    EFFECT: TARGET=[LOGIC(0xFF0CC003)] OP=[EQUALTO,BUF,MASK] DATA=[REG(0x02011D00)] MASK=[LITERAL(64,80000000 00000000)] #valid
    EFFECT: TARGET=[MODULE(sendMemToPhyp, LOGIC(0xFF0CC001), LOGIC(0xFF0CC002), LOGIC(0xFF0CC003), 99, 6)] OP=[MODULECALL]
  }
  
  CAUSE_EFFECT {
    LABEL=[MCS7 Memory Map]
    WATCH=[REG(0x02011D80)]
+   CAUSE: TARGET=[REG(0x02011D80)] OP=[BIT,ON] BIT=[0] # Enable bit
    EFFECT: TARGET=[LOGIC(0xFF0CC001)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011D80)] MASK=[LITERAL(64,0003FFFF 00000000)] SHIFT=[-12] #base
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[EQUALTO,BUF,MASK,SHIFT] DATA=[REG(0x02011D80)] MASK=[LITERAL(64,00001FFF 00000000)] SHIFT=[8] #size
    EFFECT: TARGET=[LOGIC(0xFF0CC002)] OP=[INCREMENT,MASK] INCVAL=[1] MASK=[LITERAL(64,00001FFF 00000000)]
    EFFECT: TARGET=[LOGIC(0xFF0CC003)] OP=[EQUALTO,BUF,MASK] DATA=[REG(0x02011D80)] MASK=[LITERAL(64,80000000 00000000)] #valid
    EFFECT: TARGET=[MODULE(sendMemToPhyp, LOGIC(0xFF0CC001), LOGIC(0xFF0CC002), LOGIC(0xFF0CC003), 99, 7)] OP=[MODULECALL]
  }
  
  #################################
  ### Exit cache contained mode ###
  #################################
