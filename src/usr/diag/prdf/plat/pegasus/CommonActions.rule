# IBM_PROLOG_BEGIN_TAG
# This is an automatically generated prolog.
# 
# $Source: src/usr/diag/prdf/plat/pegasus/CommonActions.rule $
# 
# IBM CONFIDENTIAL
# 
# COPYRIGHT International Business Machines Corp. 2012
# 
# p1
# 
# Object Code Only (OCO) source materials
# Licensed Internal Code Source Materials
# IBM HostBoot Licensed Internal Code
# 
# The source code for this program is not published or otherwise
# divested of its trade secrets, irrespective of what has been
# deposited with the U.S. Copyright Office.
# 
# Origin: 30
# 
# IBM_PROLOG_END_TAG 

################################################################################
# This file is intended to create a common set of actionclasses for all rule
# files. Simply add the following line at the top the actionclass section of
# each rule file.
#
# .include "CommonActions.rule"
#
# Note that no indentation can be used for the .include keyword.
################################################################################

################################################################################
#                           Thresholds and Flags                               #
################################################################################
# FIXME These thresholds are just for demo purpose.
# Its new format. Once team is comfortable with new format we can remove them
# The syntax for new format is
# threshold ( field (errorFrequency[ time_units, time_base ] ), mfg|mfg_file (errorFrequency[........]))
# time_base can have sec|min|hour|day
# NOTE : Time finally will be changed the seconds.Maximum value supported is 0xffffffff (around 49710 days)
#        If more then this value is specified, it will be truncated
/** Threshold of 1 */
actionclass threshold1
{
# Field threshold 1
    threshold( field(1 / 0xffffffff sec) );
};

/** Threshold of 2 per month */
actionclass threshold2pmonth
{
# Field threshold 2 per  30 days
    threshold( field(2 / 30 day) );
};

/** Threshold of 1 , mfg 2 per min*/
actionclass threshold1mfg2pmin
{
# Field threshold 1, mfg 2 per min
# if in time base ( sec|min|hour|day) nothing is specified , by defaut it is sec
    threshold( field(1), mfg (2/min) );
};

#FIXME: comment out so I can compile in Hostboot
##/** Threshold of 1 per second , mfg threshold P7CORE_L2_CACHE_CES (from mnfg file) */
#actionclass threshold1per1SecwithField
#{
# Field threshold 1 per second, mfg threshold will be taken from file
#    threshold( field(1 / sec), mfg_file(P7CORE_L2_CACHE_CES) );
#};

################################################################################
#                               Simple Callouts                                #
################################################################################

/** Callout 2nd Level Support, priority medium */
actionclass callout2ndLvlMed
{
    callout(procedure(NextLevelSupport_ENUM), MRU_MED);
};

################################################################################
#                               Dump Types                                     #
################################################################################

/** Dump SH */
actionclass dumpSH
{
    dump(DUMP_CONTENT_SH);
};

################################################################################
#                               Default callouts                               #
################################################################################

/** Default action for an unexpected unmasked bit */
actionclass defaultMaskedError
{
    dumpSH;
    callout2ndLvlMed;
    threshold1;
};

/** Default TBD action */
actionclass TBDDefaultCallout
{
    defaultMaskedError;
};

