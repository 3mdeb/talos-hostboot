# IBM_PROLOG_BEGIN_TAG
# This is an automatically generated prolog.
#
# $Source: src/usr/diag/prdf/common/plat/pegasus/Membuf_regs_TP.rule $
#
# OpenPOWER HostBoot Project
#
# COPYRIGHT International Business Machines Corp. 2012,2014
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied. See the License for the specific language governing
# permissions and limitations under the License.
#
# IBM_PROLOG_END_TAG

    ############################################################################
    # TP Chiplet Registers
    ############################################################################

    register TP_CHIPLET_CS_FIR
    {
        name        "TPTOP.TPC.XFIR";
        scomaddr    0x01040000;
        capture     group default;
        capture     group FirRegs;
    };

    register TP_CHIPLET_RE_FIR
    {
        name        "TPTOP.TPC.RFIR";
        scomaddr    0x01040001;
        capture     group default;
        capture     group FirRegs;
    };

    register TP_CHIPLET_FIR_MASK
    {
        name        "TPTOP.TPC.FIR_MASK";
        scomaddr    0x01040002;
        capture     group default;
        capture     group FirRegs;
    };

    ############################################################################
    # TP Chiplet LFIR
    ############################################################################

    register TP_LFIR
    {
        name        "TPTOP.TPC.LOCAL_FIR";
        scomaddr    0x0104000a;
        reset       (&, 0x0104000b);
        mask        (|, 0x0104000f);
        capture     group default;
        capture     group FirRegs;
    };

    register TP_LFIR_AND
    {
        name        "TPTOP.TPC.LOCAL_FIR_AND";
        scomaddr    0x0104000b;
        capture     group never;
        access      write_only;
    };

    register TP_LFIR_MASK
    {
        name        "TPTOP.TPC.EPS.FIR.LOCAL_FIR_MASK";
        scomaddr    0x0104000d;
        capture     group default;
        capture     group FirRegs;
    };

    register TP_LFIR_MASK_OR
    {
        name        "TPTOP.TPC.EPS.FIR.LOCAL_FIR_MASK_OR";
        scomaddr    0x0104000f;
        capture     group never;
        access      write_only;
    };

    register TP_LFIR_ACT0
    {
        name        "TPTOP.TPC.EPS.FIR.LOCAL_FIR_ACTION0";
        scomaddr    0x01040010;
        capture     type secondary;
        capture     group default;
        capture     group FirRegs;
        capture     req nonzero("TP_LFIR");
    };

    register TP_LFIR_ACT1
    {
        name        "TPTOP.TPC.EPS.FIR.LOCAL_FIR_ACTION1";
        scomaddr    0x01040011;
        capture     type secondary;
        capture     group default;
        capture     group FirRegs;
        capture     req nonzero("TP_LFIR");
    };

    ############################################################################
    # Error Report Registers
    ############################################################################

    register TP_ERROR_STATUS
    {
        name        "TPTOP.TPC.ERROR_STATUS";
        scomaddr    0x01030009;
        capture     group default;
        capture     group CerrRegs;
    };

