# IBM_PROLOG_BEGIN_TAG
# This is an automatically generated prolog.
#
# $Source: src/usr/diag/prdf/common/plat/pegasus/Membuf_acts_NEST.rule $
#
# OpenPOWER HostBoot Project
#
# Contributors Listed Below - COPYRIGHT 2012,2018
# [+] International Business Machines Corp.
#
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied. See the License for the specific language governing
# permissions and limitations under the License.
#
# IBM_PROLOG_END_TAG

################################################################################
# Actions specific to NEST chiplet
################################################################################

/** Callout the DMI bus */
actionclass calloutDmiBus
{
    calloutSelfMedA;
    callout(connected(TYPE_MCS), MRU_MEDA);
    funccall("calloutInterface_dmi");
};

/** Handles MBACAL parity err if present, else handles MBA0 MBSECC Memory UE */
actionclass mba0MemoryUe
{
    try ( funccall("analyzeMbaRcdParityError0"), analyzeFetchUe0 );
};

/** Handles MBACAL parity err if present, else handles MBA1 MBSECC Memory UE */
actionclass mba1MemoryUe
{
    try ( funccall("analyzeMbaRcdParityError1"), analyzeFetchUe1 );
};

/** Callout the DMI bus, threshold 1 */
actionclass calloutDmiBusTh1 { calloutDmiBus; threshold1; };

/** Callout the DMI bus, threshold 2 per day */
actionclass calloutDmiBusTh2pday { calloutDmiBus; threshold2pday; };

