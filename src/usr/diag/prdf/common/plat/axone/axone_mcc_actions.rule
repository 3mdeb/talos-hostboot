# IBM_PROLOG_BEGIN_TAG
# This is an automatically generated prolog.
#
# $Source: src/usr/diag/prdf/common/plat/axone/axone_mcc_actions.rule $
#
# OpenPOWER HostBoot Project
#
# Contributors Listed Below - COPYRIGHT 2018,2019
# [+] International Business Machines Corp.
#
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied. See the License for the specific language governing
# permissions and limitations under the License.
#
# IBM_PROLOG_END_TAG

actionclass omi_0_and_explorer_0_th_1_UERE
{
    SueSource;
    callout(connected(TYPE_OMI,       0), MRU_MEDA);
    callout(connected(TYPE_OCMB_CHIP, 0), MRU_MEDA);
    threshold1;
};

actionclass omi_0_and_explorer_0_th_32_perDay
{
    callout(connected(TYPE_OMI,       0), MRU_MEDA);
    callout(connected(TYPE_OCMB_CHIP, 0), MRU_MEDA);
    threshold32pday;
};

actionclass explorer_0_th_1_UERE
{
    SueSource;
    callout(connected(TYPE_OCMB_CHIP, 0), MRU_MED);
    threshold1;
};

actionclass omi_1_and_explorer_1_th_1_UERE
{
    SueSource;
    callout(connected(TYPE_OMI,       1), MRU_MEDA);
    callout(connected(TYPE_OCMB_CHIP, 1), MRU_MEDA);
    threshold1;
};

actionclass omi_1_and_explorer_1_th_32_perDay
{
    callout(connected(TYPE_OMI,       1), MRU_MEDA);
    callout(connected(TYPE_OCMB_CHIP, 1), MRU_MEDA);
    threshold32pday;
};

actionclass explorer_1_th_1_UERE
{
    SueSource;
    callout(connected(TYPE_OCMB_CHIP, 1), MRU_MED);
    threshold1;
};

################################################################################
# Analyze groups
################################################################################

actionclass analyzeDSTLFIR { analyze(gDSTLFIR); };
actionclass analyzeUSTLFIR { analyze(gUSTLFIR); };

################################################################################
# Analyze connected
################################################################################

actionclass analyzeConnectedExplorer_0
{
    analyze(connected(TYPE_OCMB_CHIP, 0));
};

actionclass analyzeConnectedExplorer_1
{
    analyze(connected(TYPE_OCMB_CHIP, 1));
};

actionclass analyzeConnectedExplorer_0_UERE
{
    SueSource;
    analyzeConnectedExplorer_0;
};

actionclass analyzeConnectedExplorer_1_UERE
{
    SueSource;
    analyzeConnectedExplorer_1;
};

