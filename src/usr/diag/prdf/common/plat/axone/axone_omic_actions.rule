# IBM_PROLOG_BEGIN_TAG
# This is an automatically generated prolog.
#
# $Source: src/usr/diag/prdf/common/plat/axone/axone_omic_actions.rule $
#
# OpenPOWER HostBoot Project
#
# Contributors Listed Below - COPYRIGHT 2018,2019
# [+] International Business Machines Corp.
#
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied. See the License for the specific language governing
# permissions and limitations under the License.
#
# IBM_PROLOG_END_TAG

################################################################################
#                                 OMIC Actions                                 #
################################################################################

actionclass dl0_omi
{
    callout(connected(TYPE_OMI,0), MRU_HIGH);
};

actionclass dl1_omi
{
    callout(connected(TYPE_OMI,1), MRU_HIGH);
};

actionclass dl2_omi
{
    callout(connected(TYPE_OMI,2), MRU_HIGH);
};

actionclass dl0_omi_bus
{
    funccall("omicCalloutBusInterfacePlugin_0");
};

actionclass dl1_omi_bus
{
    funccall("omicCalloutBusInterfacePlugin_1");
};

actionclass dl2_omi_bus
{
    funccall("omicCalloutBusInterfacePlugin_2");
};

/** OMI-DL0 Fatal Error */
actionclass dl0_fatal_error
{
    try( funccall("DlFatalError_0"), dl0_omi_bus );
    threshold1;
};

/** OMI-DL1 Fatal Error */
actionclass dl1_fatal_error
{
    try( funccall("DlFatalError_1"), dl1_omi_bus );
    threshold1;
};

/** OMI-DL2 Fatal Error */
actionclass dl2_fatal_error
{
    try( funccall("DlFatalError_2"), dl2_omi_bus );
    threshold1;
};

################################################################################
# Analyze groups
################################################################################

actionclass analyzeIOOMIFIR { analyze(gIOOMIFIR); };
actionclass analyzeMCPPEFIR { analyze(gMCPPEFIR); };
actionclass analyzeOMIDLFIR { analyze(gOMIDLFIR); };

