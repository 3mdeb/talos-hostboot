# IBM_PROLOG_BEGIN_TAG
# This is an automatically generated prolog.
#
# $Source: src/usr/diag/prdf/common/plat/p9/p9_obus_actions.rule $
#
# OpenPOWER HostBoot Project
#
# Contributors Listed Below - COPYRIGHT 2018
# [+] International Business Machines Corp.
#
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied. See the License for the specific language governing
# permissions and limitations under the License.
#
# IBM_PROLOG_END_TAG

/** Callout the OBUS interface */
actionclass calloutObusInterface
{
#    funccall("calloutInterface_obus"); RTC 174485
};

/** Callout the OBUS interface, threshold 32 per day */
actionclass calloutBusInterface_th_32perDay
{
    calloutObusInterface;
    threshold32pday;
};

/** Lane Repair: spare deployed */
actionclass spareDeployed
{
    calloutObusInterface;
#    funccall("spareDeployed"); RTC 174485
};

/** Lane Repair: max spares exceeded */
actionclass maxSparesExceeded
{
    calloutObusInterface;
    threshold1;
#    funccall("maxSparesExceeded"); RTC 174485
};

/** Lane Repair: too many bus errors */
actionclass tooManyBusErrors
{
    calloutObusInterface;
    threshold1;
#    funccall("tooManyBusErrors"); RTC 174485
};

# Currently handling each OBUS clock group with the same plugins. May optimize
# this later when we add in the DMI Lane Repair support.
actionclass spareDeployed_obus_clkgrp0 { spareDeployed; };
actionclass spareDeployed_obus_clkgrp1 { spareDeployed; };
actionclass maxSparesExceeded_obus_clkgrp0 { maxSparesExceeded; };
actionclass maxSparesExceeded_obus_clkgrp1 { maxSparesExceeded; };
actionclass tooManyBusErrors_obus_clkgrp0 { tooManyBusErrors; };
actionclass tooManyBusErrors_obus_clkgrp1 { tooManyBusErrors; };

