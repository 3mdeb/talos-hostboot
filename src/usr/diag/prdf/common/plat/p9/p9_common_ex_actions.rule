# IBM_PROLOG_BEGIN_TAG
# This is an automatically generated prolog.
#
# $Source: src/usr/diag/prdf/common/plat/p9/p9_common_ex_actions.rule $
#
# OpenPOWER HostBoot Project
#
# Contributors Listed Below - COPYRIGHT 2016,2018
# [+] International Business Machines Corp.
#
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied. See the License for the specific language governing
# permissions and limitations under the License.
#
# IBM_PROLOG_END_TAG

actionclass l3_cache_ce
{
    calloutSelfMed;
    threshold( field(128 / day), mfg_file(ATTR_MNFG_TH_P8EX_L3_CACHE_CES) );
    funccall("L3CE");
    funccall("cacheCeWorkaround");
};

actionclass l3_cache_ue_UERE
{
    SueSource;
    self_th_1;
    funccall("L3UE");
};

actionclass l3_dir_ce
{
    calloutSelfMed;
    threshold( field(32 / day), mfg_file(ATTR_MNFG_TH_P8EX_L3_DIR_CES) );
    funccall("cacheCeWorkaround");
};

actionclass l3_lru_parity_error
{
    threshold32pday;
    funccall("cacheCeWorkaround");
};

actionclass l2_cache_ce
{
    calloutSelfMed;
    threshold( field(128 / day), mfg_file(ATTR_MNFG_TH_P8EX_L2_CACHE_CES) );
    funccall("L2CE");
    funccall("cacheCeWorkaround");
};

actionclass l2_cache_ue_UERE
{
    SueSource;
    self_th_1;
    funccall("L2UE");
};

actionclass l2_dir_ce
{
    calloutSelfMed;
    threshold( field(32 / day), mfg_file(ATTR_MNFG_TH_P8EX_L2_DIR_CES) );
};

actionclass l2_power_bus_ce
{
    TBDDefaultCallout;
};

actionclass core_recovery_workaround
{
    try( analyze(connected(TYPE_CORE, 0)),
         analyze(connected(TYPE_CORE, 1)) );
};

################################################################################
# Analyze groups
################################################################################

actionclass analyzeCMEFIR { analyze(gCMEFIR); };
actionclass analyzeL2FIR  { analyze(gL2FIR);  };
actionclass analyzeL3FIR  { analyze(gL3FIR);  };
actionclass analyzeNCUFIR { analyze(gNCUFIR); };

