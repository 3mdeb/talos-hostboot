<!-- IBM_PROLOG_BEGIN_TAG                                                   -->
<!-- This is an automatically generated prolog.                             -->
<!--                                                                        -->
<!-- $Source: src/usr/targeting/common/xmltohb/attribute_types.xml $        -->
<!--                                                                        -->
<!-- IBM CONFIDENTIAL                                                       -->
<!--                                                                        -->
<!-- COPYRIGHT International Business Machines Corp. 2011,2013              -->
<!--                                                                        -->
<!-- p1                                                                     -->
<!--                                                                        -->
<!-- Object Code Only (OCO) source materials                                -->
<!-- Licensed Internal Code Source Materials                                -->
<!-- IBM HostBoot Licensed Internal Code                                    -->
<!--                                                                        -->
<!-- The source code for this program is not published or otherwise         -->
<!-- divested of its trade secrets, irrespective of what has been           -->
<!-- deposited with the U.S. Copyright Office.                              -->
<!--                                                                        -->
<!-- Origin: 30                                                             -->
<!--                                                                        -->
<!-- IBM_PROLOG_END_TAG                                                     -->

<attributes>

<!-- =====================================================================
     HOST BOOT ATTRIBUTE TYPES
     Contains the definition of all hostboot attributes which can be synced
     to/from FSP
     ================================================================= -->

<enumerationType>
    <id>CLASS</id>
    <description>Enumeration indicating the target's class</description>
    <enumerator>
        <name>NA</name>
        <value>0</value>
    </enumerator>
    <enumerator>
        <name>CARD</name>
        <value>1</value>
    </enumerator>
    <enumerator>
        <name>ENC</name>
        <value>2</value>
    </enumerator>
    <enumerator>
        <name>CHIP</name>
        <value>3</value>
    </enumerator>
    <enumerator>
        <name>UNIT</name>
        <value>4</value>
    </enumerator>
    <enumerator>
        <name>DEV</name>
        <value>5</value>
    </enumerator>
    <enumerator>
        <name>SYS</name>
        <value>6</value>
    </enumerator>
    <enumerator>
        <name>LOGICAL_CARD</name>
        <value>7</value>
    </enumerator>
    <enumerator>
        <name>MAX</name>
        <value>8</value>
    </enumerator>
    <default>NA</default>
</enumerationType>

<enumerationType>
    <id>TYPE</id>
    <description>Enumeration indicating the target's type</description>
    <enumerator>
        <name>NA</name>
        <value>0</value>
    </enumerator>
    <enumerator>
        <name>SYS</name>
    </enumerator>
    <enumerator>
        <name>NODE</name>
    </enumerator>
    <enumerator>
        <name>DIMM</name>
    </enumerator>
    <enumerator>
        <name>MEMBUF</name>
    </enumerator>
    <enumerator>
        <name>PROC</name>
    </enumerator>
    <enumerator>
        <name>EX</name>
    </enumerator>
    <enumerator>
        <name>CORE</name>
    </enumerator>
    <enumerator>
        <name>L2</name>
    </enumerator>
    <enumerator>
        <name>L3</name>
    </enumerator>
    <enumerator>
        <name>L4</name>
    </enumerator>
    <enumerator>
        <name>MCS</name>
    </enumerator>
    <enumerator>
        <name>MBS</name>
    </enumerator>
    <enumerator>
        <name>MBA</name>
    </enumerator>
    <enumerator>
        <name>XBUS</name>
    </enumerator>
    <enumerator>
        <name>ABUS</name>
    </enumerator>
    <enumerator>
        <name>PCI</name>
    </enumerator>
    <enumerator>
        <name>DPSS</name>
    </enumerator>
    <enumerator>
        <name>APSS</name>
    </enumerator>
    <enumerator>
        <name>OCC</name>
    </enumerator>
    <enumerator>
        <name>PSI</name>
    </enumerator>
    <enumerator>
        <name>FSP</name>
    </enumerator>
    <enumerator>
        <name>PNOR</name>
    </enumerator>
    <enumerator>
        <name>LAST_IN_RANGE</name>
    </enumerator>
    <default>NA</default>
</enumerationType>

<enumerationType>
    <id>MODEL</id>
    <description>Enumeration indicating the target's model</description>
    <enumerator>
        <name>NA</name>
        <value>0</value>
    </enumerator>
    <enumerator>
        <name>RESERVED</name><!-- Left here to keep later values the same -->
        <value>16</value>
    </enumerator>
    <enumerator>
        <name>VENICE</name>
    </enumerator>
    <enumerator>
        <name>MURANO</name>
    </enumerator>
    <enumerator>
        <name>CENTAUR</name>
        <value>48</value>
    </enumerator>
    <enumerator>
        <name>JEDEC</name>
        <value>80</value>
    </enumerator>
    <enumerator>
        <name>CDIMM</name>
    </enumerator>
    <enumerator>
        <name>POWER8</name>
        <value>112</value>
    </enumerator>
    <default>NA</default>
</enumerationType>

<enumerationType>
    <id>ENGINE_TYPE</id>
    <description>Enumeration indicating the target's engine type</description>
    <enumerator>
        <name>NA</name>
        <value>0</value>
    </enumerator>
    <enumerator>
        <name>ENGINE_IIC</name>
        <value>1</value>
    </enumerator>
    <enumerator>
        <name>ENGINE_SCOM</name>
        <value>2</value>
    </enumerator>
    <default>NA</default>
</enumerationType>

<enumerationType>
    <id>FSI_MASTER_TYPE</id>
    <description>Enumeration indicating the master's FSI type</description>
    <enumerator>
        <name>MFSI</name>
        <value>0</value>
    </enumerator>
    <enumerator>
        <name>CMFSI</name>
        <value>1</value>
    </enumerator>
    <enumerator>
        <name>NO_MASTER</name>
        <value>2</value>
    </enumerator>
    <default>NO_MASTER</default>
</enumerationType>

<attribute>
    <id>CLASS</id>
    <description>Attribute indicating the target's class</description>
    <simpleType>
        <enumeration>
            <id>CLASS</id>
        </enumeration>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hasStringConversion/>
</attribute>

<attribute>
    <id>TYPE</id>
    <description>Attribute indicating the target's type</description>
    <simpleType>
        <enumeration>
            <id>TYPE</id>
        </enumeration>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hasStringConversion/>
</attribute>

<attribute>
    <id>MODEL</id>
    <description>Attribute indicating the target's model</description>
    <simpleType>
        <enumeration>
            <id>MODEL</id>
        </enumeration>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hasStringConversion/>
</attribute>

<attribute>
    <id>ENGINE_TYPE</id>
    <description>Attribute indicating the target's engine type</description>
    <simpleType>
        <enumeration>
            <id>ENGINE_TYPE</id>
        </enumeration>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hasStringConversion/>
</attribute>

<attribute>
    <id>SCRATCH_UINT8_1</id>
    <description>Scratch attribute that can be used for dev/test</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_SCRATCH_UINT8_1</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>SCRATCH_UINT8_2</id>
    <description>Scratch attribute that can be used for dev/test</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_SCRATCH_UINT8_2</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>SCRATCH_UINT32_1</id>
    <description>Scratch attribute that can be used for dev/test</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_SCRATCH_UINT32_1</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>SCRATCH_UINT32_2</id>
    <description>Scratch attribute that can be used for dev/test</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_SCRATCH_UINT32_2</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>SCRATCH_UINT64_1</id>
    <description>Scratch attribute that can be used for dev/test</description>
    <simpleType>
        <uint64_t>
            <default>0</default>
        </uint64_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_SCRATCH_UINT64_1</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>SCRATCH_UINT64_2</id>
    <description>Scratch attribute that can be used for dev/test</description>
    <simpleType>
        <uint64_t>
            <default>0</default>
        </uint64_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_SCRATCH_UINT64_2</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>SCRATCH_UINT8_ARRAY_1</id>
    <description>Scratch attribute that can be used for dev/test</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>32</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_SCRATCH_UINT8_ARRAY_1</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>SCRATCH_UINT8_ARRAY_2</id>
    <description>Scratch attribute that can be used for dev/test</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2, 3, 4</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_SCRATCH_UINT8_ARRAY_2</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>SCRATCH_UINT32_ARRAY_1</id>
    <description>Scratch attribute that can be used for dev/test</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
        <array>8</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_SCRATCH_UINT32_ARRAY_1</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>SCRATCH_UINT32_ARRAY_2</id>
    <description>Scratch attribute that can be used for dev/test</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
        <array>2,3</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_SCRATCH_UINT32_ARRAY_2</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>SCRATCH_UINT64_ARRAY_1</id>
    <description>Scratch attribute that can be used for dev/test</description>
    <simpleType>
        <uint64_t>
            <default>0</default>
        </uint64_t>
        <array>4</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_SCRATCH_UINT64_ARRAY_1</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>SCRATCH_UINT64_ARRAY_2</id>
    <description>Scratch attribute that can be used for dev/test</description>
    <simpleType>
        <uint64_t>
            <default>0</default>
        </uint64_t>
        <array>2,2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_SCRATCH_UINT64_ARRAY_2</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>DUMMY_RW</id>
    <description>Dummy attribute with read/write permissions</description>
    <simpleType>
        <uint8_t>
            <default>5</default>
        </uint8_t>
        <array>1,3,5</array>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_DUMMY_SCRATCH_PLAT_INIT_UINT8</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>DUMMY_WO</id>
    <description>Dummy attribute with write-only permissions</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <writeable/>
</attribute>

<attribute>
    <id>DUMMY_RO</id>
    <description>Dummy attribute with read-only permissions</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>

<attribute>
    <id>DUMMY_HEAP_ZERO_DEFAULT</id>
    <description>Dummy attribute on the heap with zero initialization</description>
    <simpleType>
        <uint8_t>
            <default>5</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
</attribute>

<attribute>
    <id>PHYS_PATH</id>
    <description>Physical hierarchical path to the target</description>
    <nativeType>
        <name>EntityPath</name>
    </nativeType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>

<attribute>
    <id>AFFINITY_PATH</id>
    <description>Hierarchical path to the target with respect to logical affinity</description>
    <nativeType>
        <name>EntityPath</name>
    </nativeType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>

<attribute>
    <id>POWER_PATH</id>
    <description>Hierarchical path to the target with respect to power</description>
    <nativeType>
        <name>EntityPath</name>
    </nativeType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>

<attribute>
    <id>PRIMARY_CAPABILITIES</id>
    <description>Attribute which describes capabilities of a target</description>
    <complexType>
        <description>Structure which defines a target's primary capabilities.
        A target can only support at most FSI SCOM and one of the other two SCOM
        types.  Applicable for all targets.  Structure is read-only.
        </description>
        <field>
            <name>supportsFsiScom</name>
            <description>0b0: Target does not support FSI SCOM;
            0b1: Target supports FSI SCOM
            </description>
            <type>uint8_t</type>
            <bits>1</bits>
            <default>0</default>
        </field>
        <field>
            <name>supportsXscom</name>
            <description>0b0: Target does not support XSCOM;
            0b1: Target supports FSI XSCOM</description>
            <type>uint8_t</type>
            <bits>1</bits>
            <default>0</default>
        </field>
        <field>
            <name>supportsInbandScom</name>
            <description>0b0: Target does not support inband SCOM</description>
            <type>uint8_t</type>
            <bits>1</bits>
            <default>0</default>
        </field>
        <field>
            <name>reserved</name>
            <description>Reserved for future use</description>
            <type>uint8_t</type>
            <bits>5</bits>
            <default>0</default>
        </field>
        </complexType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>

<attribute>
    <id>SCOM_SWITCHES</id>
    <description>Attribute storing information about which SCOM path to use</description>
    <complexType>
        <description>Structure which defines which SCOM to use at a point in
        time.  Only applicable if target supports one or more SCOM types.  Only
        one bit (of the first three) can ever be set at any one time.
        </description>
        <field>
            <name>useFsiScom</name>
            <description>0b0: Do not use FSI SCOM at this time.  0b1: Use FSI
            SCOM at this time</description>
            <type>uint8_t</type>
            <bits>1</bits>
            <default>0</default>
        </field>
        <field>
            <name>useXscom</name>
            <description>0b0: Do not use XSCOM at this time.  0b1: Use XSCOM at
            this time</description>
            <type>uint8_t</type>
            <bits>1</bits>
            <default>0</default>
        </field>
        <field>
            <name>useInbandScom</name>
            <description>0b0: Do not use inband SCOM at this time.  0b1: Use
            inband SCOM at this time</description>
            <type>uint8_t</type>
            <bits>1</bits>
            <default>0</default>
        </field>
        <field>
            <name>reserved</name>
            <description>Reserved for future expansion</description>
            <type>uint8_t</type>
            <bits>5</bits>
            <default>0</default>
        </field>
    </complexType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
</attribute>

<attribute>
    <id>FSI_MASTER_CHIP</id>
    <description>Chip which contains the FSI master logic that drives this slave</description>
    <nativeType>
        <name>EntityPath</name>
    </nativeType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>

<attribute>
    <id>FSI_MASTER_TYPE</id>
    <description>Type of Master FSI connection to this slave (MFSI or cMFSI)</description>
    <simpleType>
        <enumeration>
            <id>FSI_MASTER_TYPE</id>
        </enumeration>
    </simpleType>
    <persistency>non-volatile</persistency>
    <hasStringConversion/>
    <readable/>
</attribute>

<attribute>
    <id>FSI_MASTER_PORT</id>
    <description>Which port is this chip hanging off of</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>

<attribute>
    <id>FSI_SLAVE_CASCADE</id>
    <description>Slave cascade position</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>

<attribute>
    <id>FSI_OPTION_FLAGS</id>
    <description>Reserved for any special flags we might need to access FSI</description>
    <simpleType>
        <uint16_t>
            <default>0</default>
        </uint16_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>

<attribute>
    <id>EXECUTION_PLATFORM</id>
    <description>
        Which execution platform the HW Procedure is running on
        Some HWPs (e.g. special wakeup) use different registers for different
          platforms to avoid arbitration problems when multiple platforms do
          the same thing concurrently
        HOST = 0x01, FSP = 0x02, OCC = 0x03
    </description>
    <simpleType><uint8_t></uint8_t></simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EXECUTION_PLATFORM</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>IS_SIMULATION</id>
    <description>env: 1 = Awan/HWSimulator. 0 = Simics/RealHW.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_IS_SIMULATION</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>HWAS_STATE</id>
    <description>HardWare Availability Service State Attribute.
        Keeps track of Target values poweredOn, present, functional,
        and changedSinceLastIPL</description>
    <complexType>
        <description>struct - so far contains 5 booleans</description>
        <field>
            <name>poweredOn</name>
            <description>boolean: Target is powered on, or Not.
                comes up as powered off.</description>
            <type>uint8_t</type>
            <bits>1</bits>
            <default>0</default>
        </field>
        <field>
            <name>present</name>
            <description>Target is present in the system.
                comes up as Not PRESENT.    </description>
            <type>uint8_t</type>
            <bits>1</bits>
            <default>0</default>
        </field>
        <field>
            <name>functional</name>
            <description>Target is Functional.
                comes up as Not FUNCTIONAL  </description>
            <type>uint8_t</type>
            <bits>1</bits>
            <default>0</default>
        </field>
        <field>
            <name>changedSinceLastIPL</name>
            <description>Target has changed since last IPL.
                comes up as FALSE.    </description>
            <type>uint8_t</type>
            <bits>1</bits>
            <default>0</default>
        </field>
        <field>
            <name>dumpfunctional</name>
            <description>FSP Only, used by DUMP applet to indicate targets dump capability.
                Comes up as  0 which indicates the target is not dump capable</description>
            <type>uint8_t</type>
            <bits>1</bits>
            <default>0</default>
        </field>
    </complexType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
</attribute>

<!-- For POD Testing -->
<attribute>
    <id>NUMERIC_POD_TYPE_TEST</id>
    <description>Attribute which tests numeric POD types</description>
    <complexType>
        <description>Numeric POD type test structure</description>
        <field>
            <name>fsiPath</name>
            <description>Entity path for testing purposes</description>
            <type>EntityPath</type>
            <default>physical:sys-0</default>
        </field>
        <field>
            <name>className</name>
            <description>Class for testing purposes</description>
            <type>CLASS</type>
            <default>CHIP</default>
        </field>
        <field>
            <name>uint8</name>
            <description>Test uint8</description>
            <type>uint8_t</type>
            <default>0xAB</default>
        </field>
        <field>
            <name>uint16</name>
            <description>Test uint16</description>
            <type>uint16_t</type>
            <default>0xABCD</default>
        </field>
        <field>
            <name>uint32</name>
            <description>Test uint32</description>
            <type>uint32_t</type>
            <default>0xABCDEF01</default>
        </field>
        <field>
            <name>uint64</name>
            <description>Test uint64</description>
            <type>uint64_t</type>
            <default>0xABCDEF0123456789</default>
        </field>
        <field>
            <name>int8</name>
            <description>Test int8</description>
            <type>int8_t</type>
            <default>-124</default>
        </field>
        <field>
            <name>int16</name>
            <description>Test int16</description>
            <type>int16_t</type>
            <default>-32764</default>
        </field>
        <field>
            <name>int32</name>
            <description>Test int32</description>
            <type>int32_t</type>
            <default>-2147483644</default>
        </field>
        <field>
            <name>int64</name>
            <description>Test int64</description>
            <type>int64_t</type>
            <default>-9223372036854775804</default>
        </field>
        </complexType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>

<attribute>
    <id>DECONFIG_GARDABLE</id>
    <description>If the Target is Deconfigurable and GARDable</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>

<attribute>
    <id>ISTEP_MODE</id>
    <description>If True, puts HostBoot into SPLess SingleStep mode.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <writeable/>
</attribute>

<attribute>
    <id>EEPROM_ADDR_INFO0</id>
    <description>Information needed to address the EEPROM slaves</description>
    <complexType>
        <description>Structure to define the addressing for an I2C slave device.</description>
        <field>
            <name>i2cMasterPath</name>
            <description>Entity path to the processor containing the I2C master (FOR DIMMS
                ONLY)</description>
            <type>EntityPath</type>
            <default>physical:sys-0</default>
        </field>
        <field>
            <name>port</name>
            <description>Port from the I2C Master device.  This is a 6-bit value.</description>
            <type>uint8_t</type>
            <default>0x80</default>
        </field>
        <field>
            <name>devAddr</name>
            <description>Device address on the I2C bus. This is a 7-bit value.</description>
            <type>uint8_t</type>
            <default>0x80</default>
        </field>
        <field>
            <name>engine</name>
            <description>I2C master engine.  This is a 2-bit value.</description>
            <type>uint8_t</type>
            <default>0x80</default>
        </field>
    </complexType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>

<attribute>
    <id>EEPROM_ADDR_INFO1</id>
    <description>Information needed to address the EERPROM slaves</description>
    <complexType>
        <description>Structure to define the addressing for an I2C slave device.</description>
        <field>
            <name>i2cMasterPath</name>
            <description>Entity path to the processor containing the I2C master (FOR DIMMS
                ONLY)</description>
            <type>EntityPath</type>
            <default>physical:sys-0</default>
        </field>
        <field>
            <name>port</name>
            <description>Port from the I2C Master device.  This is a 6-bit value.</description>
            <type>uint8_t</type>
            <default>0x80</default>
        </field>
        <field>
            <name>devAddr</name>
            <description>Device address on the I2C bus. This is a 7-bit value.</description>
            <type>uint8_t</type>
            <default>0x80</default>
        </field>
        <field>
            <name>engine</name>
            <description>I2C master engine.  This is a 2-bit value.</description>
            <type>uint8_t</type>
            <default>0x80</default>
        </field>
    </complexType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>

<attribute>
    <id>EC</id>
    <description>attribute indicating the chip target's EC level</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
       <id>ATTR_EC</id>
       <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>CHIP_ID</id>
    <description>attribute indicating the chip's ID</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
       <id>ATTR_CHIP_ID</id>
       <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>FSI_GP_REG_SCOM_ACCESS</id>
    <description>attribute indicating if the chip's FSI GP regs have scom access</description>
    <simpleType><uint8_t></uint8_t></simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
       <id>ATTR_FSI_GP_REG_SCOM_ACCESS</id>
       <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>L2_R_T0_EPS</id>
    <description>L2 tier0 read epsilon register value.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_L2_R_T0_EPS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>L2_R_T1_EPS</id>
    <description>L2 tier1 read epsilon register value.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_L2_R_T1_EPS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>L2_R_T2_EPS</id>
    <description>L2 tier2 read epsilon register value.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_L2_R_T2_EPS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>L2_FORCE_R_T2_EPS</id>
    <description>L2 force tier2 read epsilon protect (all tiers).</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_L2_FORCE_R_T2_EPS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>L2_W_EPS</id>
    <description>L2 write epsilon register value.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_L2_W_EPS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>L3_R_T0_EPS</id>
    <description>L3 tier0 read epsilon register value.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_L3_R_T0_EPS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>L3_R_T1_EPS</id>
    <description>L3 tier1 read epsilon register value.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_L3_R_T1_EPS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>L3_R_T2_EPS</id>
    <description>L3 tier2 read epsilon register value.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_L3_R_T2_EPS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>L3_FORCE_R_T2_EPS</id>
    <description>L3 force tier2 read epsilon protect (all tiers).</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_L3_FORCE_R_T2_EPS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>L3_W_EPS</id>
    <description>L3 write epsilon register value.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_L3_W_EPS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>CHIP_UNIT</id>
    <description>A unit (chiplet) 's  offset number within the chip. </description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_CHIP_UNIT_POS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>POSITION</id>
    <description>Position of target relative to node</description>
    <simpleType>
        <uint16_t>
            <default>0</default>
        </uint16_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>

<attribute>
    <id>MBA_PORT</id>
    <description>MBA port this DIMM is connected to</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MBA_PORT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MBA_DIMM</id>
    <description>MBA port DIMM number of this DIMM</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MBA_DIMM</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>CEN_DQ_TO_DIMM_CONN_DQ</id>
    <description>
        Centaur DQ to DIMM connector DQ mapping for a JEDEC DIMM.
        Uint8 value for each Centaur DQ (0-79).
        The value is the corresponding DIMM Connector DQ.
    </description>
    <simpleType>
        <uint8_t>
            <!-- Default is 1:1 mapping, DQ0-DQ0, DQ1-DQ1 etc -->
            <!-- Data will eventually come from MRW -->
            <default>
                0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,
                20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,
                40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,
                60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79
            </default>
        </uint8_t>
        <array>80</array>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>

<enumerationType>
    <id>PROC_EPS_TABLE_TYPE</id>
    <description>Enumeration indicating the PROC_EPS_TABLE_TYPE</description>
    <enumerator>
        <name>EPS_TYPE_LE</name>
        <value>1</value>
    </enumerator>
    <enumerator>
        <name>EPS_TYPE_HE</name>
        <value>2</value>
    </enumerator>
</enumerationType>

<attribute>
    <id>PROC_EPS_TABLE_TYPE</id>
    <description>
        System attribute.
        Processor epsilon table type. Used to calculate the processor nest
        epsilon register values.
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <hasStringConversion/>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_EPS_TABLE_TYPE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<enumerationType>
    <id>PROC_FABRIC_PUMP_MODE</id>
    <description>Enumeration indicating the PROC_FABRIC_PUMP_MODE</description>
    <enumerator>
        <name>MODE1</name>
        <value>1</value>
    </enumerator>
    <enumerator>
        <name>MODE2</name>
        <value>2</value>
    </enumerator>
</enumerationType>

<attribute>
    <id>PROC_FABRIC_PUMP_MODE</id>
    <description>
        System attribute.
        Processor SMP Fabric broadcast scope configuration.
        MODE1 = default = chip/group/system/remote group/foreign.
        MODE2 = group/system/remote group/foreign.
        Provided by the Machine Readable Workbook.
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <hasStringConversion/>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_FABRIC_PUMP_MODE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<enumerationType>
    <id>PROC_X_BUS_WIDTH</id>
    <description>Enumeration indicating the PROC_X_BUS_WIDTH</description>
    <enumerator>
        <name>W4BYTE</name>
        <value>1</value>
    </enumerator>
    <enumerator>
        <name>W8BYTE</name>
        <value>2</value>
    </enumerator>
</enumerationType>

<attribute>
    <id>PROC_X_BUS_WIDTH</id>
    <description>
        System attribute.
        Processor SMP X bus width.
        Provided by the Machine Readable Workbook.
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <hasStringConversion/>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_X_BUS_WIDTH</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>ALL_MCS_IN_INTERLEAVING_GROUP</id>
    <description>
        System attribute.
        If all MCS chiplets are in an interleaving group (1=true, 0=false).
        If true the SMP fabric is setup in normal mode.
        If false the SMP fabric is setup in checkerboard mode.
        Provided by the Machine Readable Workbook.
    </description>
    <simpleType><uint8_t></uint8_t></simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_ALL_MCS_IN_INTERLEAVING_GROUP</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>FABRIC_NODE_ID</id>
    <description>
        Chip attribute.
        Logical fabric node the chip belongs to.
        Provided by the Machine Readable Workbook.
        Can vary across drawers.
    </description>
    <simpleType><uint8_t></uint8_t></simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_FABRIC_NODE_ID</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>FABRIC_CHIP_ID</id>
    <description>
        Chip attribute.
        Logical fabric chip id for this chip (position within the fabric).
        Provided by the Machine Readable Workbook.
        Can vary across drawers.
    </description>
    <simpleType><uint8_t></uint8_t></simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_FABRIC_CHIP_ID</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>CHIP_HAS_SBE</id>
    <description>
        Chip attribute.
        If true, the chip has an SBE and the associated registers.
        Provided by the Machine Readable Workbook.
    </description>
    <simpleType><uint8_t></uint8_t></simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_CHIP_HAS_SBE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>FREQ_PROC_REFCLOCK</id>
    <description>
        System attribute.
        The frequency of the processor refclock in MHz.
        Provided by the Machine Readable Workbook.
        The corresponding HWPF attribute:
        - Is read by the set_ref_clock HWP to find out the desired frequency.
        - Can be overridden to adjust the refclock frequency.
    </description>
    <simpleType><uint32_t></uint32_t></simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_FREQ_PROC_REFCLOCK</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>FREQ_MEM_REFCLOCK</id>
    <description>
        System attribute.
        The frequency of the memory refclock in MHz.
        Provided by the Machine Readable Workbook.
        The corresponding HWPF attribute:
        - Is read by the set_ref_clock HWP to find out the desired frequency.
        - Can be overridden to adjust the refclock frequency.
    </description>
    <simpleType><uint32_t></uint32_t></simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_FREQ_MEM_REFCLOCK</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>FREQ_CORE_FLOOR</id>
    <description>
        System attribute.
        The lowest frequency that a core can be set to in MHz.
        This is the same for all cores in the system.
        TODO Provided by TBD. Current thinking is MRW or MVPD.
          If MRW then this attribute will stay here.
          If MVPD then this attribute will be deleted.
    </description>
    <simpleType><uint32_t></uint32_t></simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_FREQ_CORE_FLOOR</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>FREQ_PB</id>
    <description>
        System attribute.
        The frequency of a processor's PB chiplet in MHz.
        This is the same for all PB chiplets in the system.
        The corresponding HWPF attribute:
        - Is set by a HWP that runs after SBE HWPs setup the PB PLL. It
          reads ATTR_FREQ_PROC_REFCLOCK and the PB PLL settings.
    </description>
    <simpleType><uint32_t></uint32_t></simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_FREQ_PB</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>FREQ_A</id>
    <description>
        System attribute.
        The frequency of a processor's A-bus chiplet in MHz.
        This is the same for all A-bus chiplets in the system.
        The corresponding HWPF attribute:
        - Is set by the HWP that sets up the A-bus PLL.
    </description>
    <simpleType><uint32_t></uint32_t></simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_FREQ_A</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>FREQ_X</id>
    <description>
        System attribute.
        The frequency of a processor's X-bus chiplet in MHz.
        This is the same for all X-bus chiplets in the system.
        The corresponding HWPF attribute:
        - Is set by the HWP that sets up the X-bus PLL.
    </description>
    <simpleType><uint32_t></uint32_t></simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_FREQ_X</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MVPD_FREQ_CORE_NOMINAL</id>
    <description>
        Chip attribute.
        The nominal frequency of the processor cores in MHz.
        TODO This attribute should be from MVPD.
             When MVPD function is present, this attribute should be deleted.
             The corresponding HWPF attribute request should map to a function
             that calls the MVPD driver (in the same way as DIMM SPD).
             For now, just default to 3GHz
    </description>
    <simpleType><uint32_t><default>3000</default></uint32_t></simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MVPD_FREQ_CORE_NOMINAL</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<!-- @TOOD: Attribute is writable until MRW generates HUIDs for FSP -->
<attribute>
    <id>HUID</id>
    <description>
        Hardware Unit ID
        SSSSNNNNTTTTTTTTiiiiiiiiiiiiiiii
        S=System
        N=Node Number
        T=Target Type (matches TYPE attribute)
        i=Instance/Sequence number of target, relative to node
    </description>
    <simpleType>
        <uint32_t></uint32_t>
        <default>0xFFFFFFFF</default>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <writeable/>
</attribute>

<attribute>
    <id>SP_FUNCTIONS</id>
    <description>
      Attribute which describes what the SP is or is not doing in this system
    </description>
    <complexType>
        <description>Structure which defines a system's SP functions.
         Applicable for System target only.  Structure is read-only.
        </description>
        <field>
            <name>fsiSlaveInit</name>
            <description>
             0b0: SP does not initialize FSI slave logic, Hostboot must;
             0b1: SP does initialize FSI slave logic so Hostboot should not
            </description>
            <type>uint8_t</type>
            <bits>1</bits>
            <default>1</default>
        </field>
        <field>
            <name>mailboxEnabled</name>
            <description>
             0b0: There is no SP mailbox support;
             0b1: There is SP mailbox support
            </description>
            <type>uint8_t</type>
            <bits>1</bits>
            <default>0</default>
        </field>
        <field>
            <name>fsiMasterInit</name>
            <description>
             0b0: SP does not initialize FSI master logic, Hostboot must;
             0b1: SP does initialize FSI master logic so Hostboot should not
            </description>
            <type>uint8_t</type>
            <bits>1</bits>
            <default>1</default>
        </field>
        <field>
            <name>reserved</name>
            <description>Reserved for future use</description>
            <type>uint8_t</type>
            <bits>5</bits>
            <default>0</default>
        </field>
        </complexType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>

<attribute>
    <id>HB_SETTINGS</id>
    <description>
      Attribute which describes how the SP has configured features in
      Hostboot.
    </description>
    <complexType>
        <description>Structure which defines a system's HB settings.
         Applicable for System target only.
        </description>
        <field>
            <name>traceContinuous</name>
            <description>
            Enable / Disable continuous trace.
                0b0: Continuous trace is disabled.
                0b1: Continuous trace is enabled.
            </description>
            <type>uint8_t</type>
            <bits>1</bits>
            <default>0</default>
        </field>
        <field>
            <name>traceScanDebug</name>
            <description>
            Override trace debug selection for SCAN component.
                0b0: TRACS entries for SCAN have default behavior.
                0b1: TRACS entries for SCAN are enabled.
            </description>
            <type>uint8_t</type>
            <bits>1</bits>
            <default>0</default>
        </field>
        <field>
            <name>reserved</name>
            <description>Reserved for future use</description>
            <type>uint8_t</type>
            <bits>6</bits>
            <default>0</default>
        </field>
        </complexType>
    <persistency>non-volatile</persistency>
    <readable/>
    <writeable/>
</attribute>


<!-- Begin attributes (4) to test string support -->

<attribute>
    <id>TEST_NULL_STRING</id>
    <description>Test attribute; string with empty default value</description>
    <simpleType>
        <string>
            <default></default>
            <sizeInclNull>10</sizeInclNull>
        </string>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
</attribute>

<attribute>
    <id>TEST_MIN_STRING</id>
    <description>Test attribute; smallest string possible given size</description>
    <simpleType>
        <string>
            <default>a</default>
            <sizeInclNull>10</sizeInclNull>
        </string>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
</attribute>

<attribute>
    <id>TEST_MAX_STRING</id>
    <description>Test attribute; largest string possible given size</description>
    <simpleType>
        <string>
            <default>abc</default>
            <sizeInclNull>4</sizeInclNull>
        </string>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
</attribute>

<attribute>
    <id>TEST_NO_DEFAULT_STRING</id>
    <description>Test attribute; string with no default supplied</description>
    <simpleType>
        <string>
            <sizeInclNull>10</sizeInclNull>
        </string>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
</attribute>

<!-- End attributes (4) to test string support -->

<attribute>
    <id>VPD_REC_NUM</id>
    <description>Record offset for this target's VPD</description>
    <simpleType>
        <uint16_t>
            <default>0xFFFF</default>
        </uint16_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>

<attribute>
    <id>PEER_TARGET</id>
    <description>Peer target's address of a A/X-bus connection.
                 NULL means address 0 for no peer target. If a
                 target instance overrides the default with the
                 peer target's PHYS_PATH. The target compiler will
                 convert the valid PHYS_PATH string into the runtime
                 virtual address of the peer target instance.
    </description>
    <simpleType>
        <Target_t>
            <default>NULL</default>
        </Target_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>

<attribute>
    <id>PAYLOAD_BASE</id>
    <description>Base address (target HRMOR) of the payload.  Value is in MB.</description>
    <simpleType>
        <uint64_t>
            <default>256</default>
        </uint64_t>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
</attribute>

<attribute>
    <id>PAYLOAD_ENTRY</id>
    <description>The offset from base address of the payload entry-point.
        Current default is 0x180</description>
    <simpleType>
        <uint64_t>
            <default>0x180</default>
        </uint64_t>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
</attribute>

<enumerationType>
    <id>PAYLOAD_KIND</id>
    <description>
        Enumeration indicating what kind of payload is to be started
    </description>
    <enumerator>
        <name>UNKNOWN</name>
        <value>0</value>
    </enumerator>
    <enumerator>
        <name>PHYP</name>
        <value>1</value>
    </enumerator>
    <enumerator>
        <name>AVP</name>
        <value>2</value>
    </enumerator>
    <enumerator>
        <name>NONE</name>
        <value>3</value>
    </enumerator>
    <default>UNKNOWN</default>
</enumerationType>

<attribute>
    <id>PAYLOAD_KIND</id>
    <description>
        Attribute indicating what kind of payload is to be started.
    </description>
    <simpleType>
        <enumeration>
            <id>PAYLOAD_KIND</id>
        </enumeration>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hasStringConversion/>
</attribute>

<attribute>
    <id>EI_BUS_RX_MSB_LSB_SWAP</id>
    <description>PRBS scramble pattern per lane on DMI bus for p8 and centaur.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EI_BUS_RX_MSB_LSB_SWAP</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EI_BUS_TX_MSB_LSB_SWAP</id>
    <description>PRBS scramble pattern per lane on DMI bus for p8 and centaur.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EI_BUS_TX_MSB_LSB_SWAP</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<!--    TARGETING attributes to support mss_setup_bars and proc_setup_bars  -->

<attribute>
  <id>PROC_MEM_BASES</id>
  <description>
    read/write HWP attribute mapped to TARGETING
    Non-mirrored memory base addresses
    creator: mss_setup_bars
    consumer: proc_setup_bars, platform
    firmware notes:
        64-bit RA
        eight independent non-mirrored segments are supported
        (max number based on Venice design)
  </description>
  <simpleType>
      <uint64_t></uint64_t>
      <array>8</array><!--per group-->
  </simpleType>
  <persistency>volatile-zeroed</persistency>
  <readable/>
  <writeable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_MEM_BASES</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
  <id>PROC_MEM_SIZES</id>
  <description>
    read/write HWP attribute mapped to TARGETING
    Size of non-mirrored memory regions
    creator: mss_setup_bars
    consumer: proc_setup_bars, platform
    firmware notes:
        for given index value, address space assumed to be contiguous
        from ATTR_PROC_MEM_BASES value at matching index
        eight independent non-mirrored segments are supported
        (max number based on Venice design)
  </description>
  <simpleType>
      <uint64_t></uint64_t>
      <array>8</array><!--per group-->
  </simpleType>
  <persistency>volatile-zeroed</persistency>
  <readable/>
  <writeable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_MEM_SIZES</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
  <id>PROC_MIRROR_BASES</id>
  <description>Mirrored memory base addresses
    creator: mss_setup_bars
    consumer: proc_setup_bars, platform
    firmware notes:
      64-bit RA
      four independent mirrored segments are supported
      (max number based on Venice design)
  </description>
  <simpleType>
      <uint64_t></uint64_t>
      <array>4</array><!--per group-->
  </simpleType>
  <persistency>volatile-zeroed</persistency>
  <readable/>
  <writeable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_MIRROR_BASES</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
  <id>PROC_MIRROR_SIZES</id>
  <description>Size of mirrored memory region
    creator: mss_setup_bars
    consumer: proc_setup_bars, platform
    firmware notes:
      for given index value, address space assumed to be contiguous
      from ATTR_PROC_MIRROR_BASES value at matching index
      four independent mirrored segments are supported
      (max number based on Venice design)
  </description>
  <simpleType>
      <uint64_t></uint64_t>
      <array>4</array><!--per group-->
  </simpleType>
  <persistency>volatile-zeroed</persistency>
  <readable/>
  <writeable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_MIRROR_SIZES</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
  <id>PROC_L3_BAR1_REG</id>
  <description>
    read/write HWP attribute mapped to TARGETING
    L3 BAR1 register value
    creator: proc_setup_bars
    consumer: winkle image setup procedures
    notes:
          64-bit register value
          SCOM address: 0x1001080B
  </description>
  <simpleType>
      <uint64_t></uint64_t>
  </simpleType>
  <persistency>volatile-zeroed</persistency>
  <readable/>
  <writeable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_L3_BAR1_REG</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
  <id>PROC_L3_BAR2_REG</id>
  <description>
    read/write HWP attribute mapped to TARGETING
    L3 BAR2 register value
    creator: proc_setup_bars
    consumer: winkle image setup procedures
    notes:
      64-bit register value
      SCOM address: 0x10010813
  </description>
  <simpleType>
      <uint64_t></uint64_t>
  </simpleType>
  <persistency>volatile-zeroed</persistency>
  <readable/>
  <writeable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_L3_BAR2_REG</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
  <id>PROC_L3_BAR_GROUP_MASK_REG</id>
  <description>
    read/write HWP attribute mapped to TARGETING
    L3 BAR Group Mask register value
    creator: proc_setup_bars
    consumer: winkle image setup procedures
    notes:
      64-bit register value
      SCOM address: 0x10010816
  </description>
  <simpleType>
      <uint64_t></uint64_t>
  </simpleType>
  <persistency>volatile-zeroed</persistency>
  <readable/>
  <writeable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_L3_BAR_GROUP_MASK_REG</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>


<attribute>
  <id>FREQ_CORE</id>
  <description>
    firmware notes:
      Nominal processor's core DPLL frequency (MHz).
      Default value provided by Machine Readable Workbook.
      This attribute is the current value.
      @note this should be initialized by istep 7.1 proc_a_x_pci_dmi_pll_setup
  </description>
  <simpleType>
      <uint32_t></uint32_t>
  </simpleType>
  <persistency>volatile-zeroed</persistency>
  <readable/>
  <writeable/>
  <hwpfToHbAttrMap>
      <id>ATTR_FREQ_CORE</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
  <id>PROC_PCIE_NOT_F_LINK</id>
  <description>
    firmware notes:
      Set IPL time mux/switch between PCIE PHB/F link function
      (one per foreign link)
  </description>
  <simpleType>
      <uint8_t>
          <default>1,1</default>
      </uint8_t>
      <array>2</array>
  </simpleType>
  <persistency>volatile</persistency>
  <readable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_PCIE_NOT_F_LINK</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_MCS_GROUPS</id>
    <description>
        Per MCS group number
        Value is index for PROC_MEM_BASES and PROC_MEM_SIZES arrays
        creator: mss_eff_grouping.C
        consumer: HDAT
    </description>
    <simpleType>
        <uint8_t>
            <default>0,0,0,0,0,0,0,0</default>
        </uint8_t>
    <array>8</array><!--per MCS-->
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_MCS_GROUPS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<!-- ===== ===== ===== ===== ===== ===== ===== ===== ===== =====
     Memory Map
     The attributes below are defined by the PHYP Memory Map
     documentation owned by Shawn Lambeth

     @todo: RTC:44128 will be used to automatically create this data
     ===== ===== ===== ===== ===== ===== ===== ===== ===== ===== -->

<!-- ===== System Attributes ===== -->

<attribute>
    <id>XSCOM_BASE_ADDRESS</id>
    <description>System XSCOM base address</description>
    <simpleType>
        <uint64_t>
            <!-- 1020TB, 32GB per proc -->
            <default>0x0003FC0000000000</default>
        </uint64_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>

<attribute>
    <id>IBSCOM_MCS_BASE_ADDR</id>
    <description>MCS Inband Scom base address</description>
    <simpleType>
        <uint64_t>
            <default>0x0003E00000000000</default>
        </uint64_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MCS_INBAND_BASE_ADDRESS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MIRROR_BASE_ADDRESS</id>
    <description>System Mirrorable base address</description>
    <simpleType>
        <uint64_t>
            <default>0x0002000000000000</default><!-- 512 TB -->
        </uint64_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>


<!-- ===== Processor Chip Attributes ===== -->

<attribute>
    <id>FSP_BASE_ADDR</id>
    <description>Base Address of FSP IO Region</description>
    <simpleType>
        <uint64_t>
            <!-- Starts at 1024TB - 128GB, 4GB per proc -->
            <default>0x0003FFE000000000</default>
        </uint64_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_FSP_BAR_BASE_ADDR</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>FSP_BAR_SIZE</id>
    <description>Size of FSP IO Region</description>
    <simpleType>
        <uint64_t>
            <!-- 4GB per Proc -->
            <default>0x0000000100000000</default>
        </uint64_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_FSP_BAR_SIZE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>FSP_MMIO_MASK_SIZE</id>
    <description>MMIO Mask for FSP IO Region</description>
    <simpleType>
        <uint64_t>
            <!-- @fixme : what is this value? -->
            <default>0x0000000100000000</default>
        </uint64_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_FSP_MMIO_MASK_SIZE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PSI_BRIDGE_BASE_ADDR</id>
    <description>Base Address of PSI Bridge Logic</description>
    <simpleType>
        <uint64_t>
            <!-- Starts at 1024TB - 6GB, 1MB per link -->
            <!-- 0x0003FFFE80000000 + 0x100000*procnum -->
            <default>0xFFFFFFFFFFFFFFFF</default>
        </uint64_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_PSI_BRIDGE_BAR_BASE_ADDR</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>INTP_BASE_ADDR</id>
    <description>Base Address of Interrupt Presenter</description>
    <simpleType>
        <uint64_t>
            <!-- Starts at 1024TB - 2GB, 1MB per proc -->
            <!-- 0x0003FFFF80000000 + 0x100000*procnum -->
            <default>0xFFFFFFFFFFFFFFFF</default>
        </uint64_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_INTP_BAR_BASE_ADDR</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PHB_BASE_ADDRS</id>
    <description>Base Address of PHB Register Space</description>
    <simpleType>
        <uint64_t>
            <!-- Starts at 1024TB - 7GB -->
            <!-- 0x0003FFFE40000000 + 0x400000*procnum + 0x100000*phbnum -->
            <default>
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF,
                0xFFFFFFFFFFFFFFFF
            </default>
        </uint64_t>
        <array>4</array><!-- per PHB -->
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>

<attribute>
    <id>PCI_BASE_ADDRS</id>
    <description>Base Address of PCI Memory Space</description>
    <simpleType>
        <uint64_t>
            <!-- Starts at 976TB, 64GB per PHB (=256GB per proc) -->
            <!-- 0x0003D00000000000 + 0x4000000000*procnum + 0x1000000000*phbnum -->
            <default>
                0x0003D00000000000,
                0x0003FFFE40100000,
                0x0003FFFE40200000,
                0x0003FFFE40300000
            </default>
        </uint64_t>
        <array>4</array><!-- per PHB -->
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>


<attribute>
    <id>MEM_BASE</id>
    <description>Base Address for all mainstore behind this processor</description>
    <simpleType>
        <uint64_t>
            <default>0</default>
        </uint64_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_MEM_BASE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MIRROR_BASE</id>
    <description>Base Address for all mirrored mainstore behind this processor</description>
    <simpleType>
        <uint64_t>
            <default>0</default>
        </uint64_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_MIRROR_BASE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>RNG_BASE_ADDR</id>
    <description>Base Address of RNG IO Region</description>
    <simpleType>
        <uint64_t>
            <!-- Starts at 1024TB - 3GB -->
            <!-- 0x0003FFFF40000000 + 0x1000*procnum -->
            <default>0xFFFFFFFFFFFFFFFF</default>
        </uint64_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_NX_MMIO_BAR_BASE_ADDR</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>RNG_BAR_SIZE</id>
    <description>Size of RNG IO Region</description>
    <simpleType>
        <uint64_t>
            <!-- 4 KB per processor -->
            <default>0x000000000001000</default>
        </uint64_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>

<attribute>
    <id>IMT_BASE_ADDR</id>
    <description>Base Address of In-Memory Trace Region
        Set by FSP-based tooling
    </description>
    <simpleType>
        <uint64_t>
            <default>0xFFFFFFFFFFFFFFFF</default>
        </uint64_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>

<attribute>
    <id>IMT_BAR_SIZE</id>
    <description>Size of IMT IO Region
        Set by FSP-based tooling
    </description>
    <simpleType>
        <uint64_t>
            <default>0x0000000000000000</default>
        </uint64_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>

<!-- ===== ===== End Memory Map ===== ===== ===== ===== ===== ===== -->

<attribute>
  <id>PROC_EPS_GB_PERCENTAGE</id>
  <description>
     firmware notes:
        Guardband percentage to apply to baseline epsilon values
  </description>
  <simpleType>
      <uint8_t></uint8_t>
  </simpleType>
  <persistency>volatile-zeroed</persistency>
  <readable/>
  <writeable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_EPS_GB_PERCENTAGE</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
  <id>PROC_EPS_GB_DIRECTION</id>
  <description>
    firmware notes:
      Direction to apply guardband margin (positive/negative)
  </description>
  <simpleType>
      <uint8_t></uint8_t>
  </simpleType>
  <persistency>volatile-zeroed</persistency>
  <readable/>
  <writeable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_EPS_GB_DIRECTION</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
  <id>PROC_FABRIC_ASYNC_SAFE_MODE</id>
  <description>
    firmware notes:
      Set to force all asynchronous boundary crossings into safe mode.
  </description>
  <simpleType>
      <uint8_t></uint8_t>
  </simpleType>
  <persistency>volatile-zeroed</persistency>
  <readable/>
  <writeable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_FABRIC_ASYNC_SAFE_MODE</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
  <id>FREQ_PCIE</id>
  <description>
    The frequency of a processor's PCI-e bus in MHz.
    This is the same for all PCI-e busses in the system.
    This is set by the HWP that sets up the PCI-e PLL.
  </description>
  <simpleType><uint32_t></uint32_t></simpleType>
  <persistency>non-volatile</persistency>
  <readable/>
  <writeable/>
  <hwpfToHbAttrMap>
      <id>ATTR_FREQ_PCIE</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>NOMINAL_FREQ_MHZ</id>
    <description>Nominal frequency in mhz for all processors in the system based on module VPD processing.</description>
    <simpleType>
        <uint16_t>
            <default>0</default>
        </uint16_t>
    </simpleType>
    <!-- @TODO via RTC: 35451 - This really should be p1, not p3 -->
    <persistency>non-volatile</persistency>
    <readable/>
    <writeable/>
</attribute>

<attribute>
    <id>MNFG_FLAGS</id>
    <description> Provides the mnfg flags
        in a single value.  The bits are
        masked together so the single value
        will have data on several mnfg flags.
        Should note that the MNFG_FLAG_BIT enum
        is used to provide the value of the
        different mnfg flags.  A user can bitwise
        'OR' several of the MNFG_FLAG_BIT values
        together to indicate that multiple mnfg
        flags are set.
        @TODO via RTC: 35451
        The HostBoot side can only read the mnfg
        flag attribute. However the FSP side will
        need to read and write the mnfg flag
        attributes.  For now making it so both sides
        are read and writeable but will need to revisit
        to find a better way to handle persistency when
        the hostboot and FSP differ.
    </description>
    <simpleType>
        <uint64_t>
            <default>0x0000000000000000</default>
        </uint64_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MNFG_FLAGS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<enumerationType>
    <id>MNFG_FLAG_BIT</id>
    <description>Enumeration indicating the mnfg flags
        that are set by the user.  The values can be
        combined using a bitwise 'OR'.  The values will
        need to be kept in sync with the FAPI
        enumerator values.  Also the enumeration type
        is used by the ATTR_MNFG_FLAGS attribute.  Should
        note that the MNFG_FLAG_BIT values are of type uint32_t
    </description>
    <enumerator>
        <name>MNFG_THRESHOLDS</name>
        <value>0x00000001</value>
    </enumerator>
    <enumerator>
        <name>MNFG_AVP_ENABLE</name>
        <value>0x00000002</value>
    </enumerator>
    <enumerator>
        <name>MNFG_HDAT_AVP_ENABLE</name>
        <value>0x00000004</value>
    </enumerator>
    <enumerator>
        <name>MNFG_SRC_TERM</name>
        <value>0x00000008</value>
    </enumerator>
    <enumerator>
        <name>MNFG_IPL_MEMORY_CE_CHECKINGE</name>
        <value>0x00000010</value>
    </enumerator>
    <enumerator>
        <name>MNFG_FAST_BACKGROUND_SCRUB</name>
        <value>0x00000020</value>
    </enumerator>
    <enumerator>
        <name>MNFG_TEST_DRAM_REPAIRS</name>
        <value>0x00000040</value>
    </enumerator>
    <enumerator>
        <name>MNFG_DISABLE_DRAM_REPAIRS</name>
        <value>0x00000080</value>
    </enumerator>
    <enumerator>
        <name>MNFG_ENABLE_EXHAUSTIVE_PATTERN_TEST</name>
        <value>0x00000100</value>
    </enumerator>
    <enumerator>
        <name>MNFG_ENABLE_STANDARD_PATTERN_TEST</name>
        <value>0x00000200</value>
    </enumerator>
    <enumerator>
        <name>MNFG_ENABLE_MINIMUM_PATTERN_TEST</name>
        <value>0x00000400</value>
    </enumerator>
</enumerationType>

<!-- Support for pm_attributes_all_hwp.xml -->

<attribute>
    <id>PM_POWER_PROXY_TRACE_TIMER</id>
    <description>
      PROC_CHIP Attribute
        The  Power Proxy Trace timer (binary in microseconds) defines the time between Power Proxy Trace records when no other event that would otherwise produce a record has occured.  Values must be within a range of 32us to 64ms.
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_POWER_PROXY_TRACE_TIMER</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PPT_TIMER_MATCH_VALUE</id>
    <description>
      PROC_CHIP Attribute
        The delay is 32us * ATTR_PM_PPT_TIMER_MATCH_VALUE
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PPT_TIMER_MATCH_VALUE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PPT_TIMER_TICK</id>
    <description>
      PROC_CHIP Attribute
        Defines the Power Proxy Trace interval timer tick (0=25us, 1=0.5us, 2=1us, and 3=2us)
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PPT_TIMER_TICK</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_AISS_TIMEOUT</id>
    <description>
      PROC_CHIP Attribute
        Defines the timeout value for the Architected Idle State Sequencer (AISS).
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_AISS_TIMEOUT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PSTATE_STEPSIZE</id>
    <description>
      PROC_CHIP Attribute
        Unsigned 7 bit (baby-) stepsize for Pstate transitions between the Global Pstate Actual and the Global Pstate Target. Only non-zero values are supported for this dial.

Used to setup the PMC voltage controller

Producer: proc_build_pstate_tables.C

Consumer: OCC pstate_init()
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PSTATE_STEPSIZE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_EXTERNAL_VRM_STEPDELAY_RANGE</id>
    <description>
      PROC_CHIP Attribute
        Selects the resolution for the step delay count after a voltage change (decimal value N for this field divides the prv clock by 2^(N+3))

A 4 bit field  selects one of the the upper 16bit of a 19bit counter (16+3) incremented in the nest/4 domain

Consumer: proc_pm.scominit
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_EXTERNAL_VRM_STEPDELAY_RANGE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_EXTERNAL_VRM_STEPDELAY_VALUE</id>
    <description>
      PROC_CHIP Attribute
        Step delay after a voltage change in increments of vrm_stepdelay_range.  Setting this dial to a value N causes a delay of N cycles of the divided nest clk (see dial vrm_stepdelay_range). The closed formula is as follows: Delay_seconds = vrm_stepdelay_value * ( 2^(3 + vrm_stepdelay_range) / (Nest_frequency_Hz/4))

Consumer: proc_pm.scominit
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_EXTERNAL_VRM_STEPDELAY_VALUE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PMC_HANGPULSE_DIVIDER</id>
    <description>
      PROC_CHIP Attribute
        Divides the hang pulse to PMC to achieve XXXX. Note that this needs to be set according to the description of dial pmc_occ_heartbeat_time

Producer:  prc_pm_effective

Consumer: proc_pm.scominit
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PMC_HANGPULSE_DIVIDER</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PVSAFE_PSTATE</id>
    <description>
      PROC_CHIP Attribute

Pstate that is invoked in the PMC voltage controller upon the loss of the OCC Heartbeat..

Producer:  proc_pm_effective.C

Consumer: proc_pm.scominit
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PVSAFE_PSTATE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIVID_FRAME_SIZE</id>
    <description>
      PROC_CHIP Attribute
        Number of data bits per individual SPIVID transaction (also referred to as frame) during chip select assertion

Supported values: 0x20 (32d)

Chip Select assertion duration is spi_frame_size + 2
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIVID_FRAME_SIZE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIVID_IN_DELAY_FRAME1</id>
    <description>
      PROC_CHIP Attribute
        Number of SPIVID clocks after chip select to wait before capturing MISO input in frame 1

Supported values: 0x00 to spi_frame_size.  Values beyond spi_frame_size result in the input never being captured
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIVID_IN_DELAY_FRAME1</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIVID_IN_DELAY_FRAME2</id>
    <description>
      PROC_CHIP Attribute
        Number of SPI clocks after chip select to wait before capturing MISO input in frame 2

Supported values: 0x00 to spi_frame_size.  Values beyond spi_frame_size result in the input never being captured
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIVID_IN_DELAY_FRAME2</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIVID_CLOCK_POLARITY</id>
    <description>
      PROC_CHIP Attribute
        SPVID Clock Polarity  (CPOL=0 means that clk idle is deasserted, CPOL=1 means that clk idle is asserted)
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIVID_CLOCK_POLARITY</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIVID_CLOCK_PHASE</id>
    <description>
      PROC_CHIP Attribute
        SPI clock phase (CPHA=0 means to change/sample values of data signals on first edge, otherwise on 2nd)
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIVID_CLOCK_PHASE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIVID_CLOCK_DIVIDER</id>
    <description>
      PROC_CHIP Attribute
        SPIVID clock speed divider to divide the nest_nclk/4 mesh clock, which results in a divider = (nest_freq/ (SPI_freq*8))-1
For a 2.4GHz nest clock, this means that the SPI clk can be theoretically adjusted between 600MHz and 0.29MHz (cycle time 1.66ns...3.41us, in 1.66ns steps). However, a practical range is 0.5...25MHz.
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIVID_CLOCK_DIVIDER</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIVID_INTERFRAME_DELAY_WRITE_STATUS</id>
    <description>
      PROC_CHIP Attribute
        Delay between command and status frames of a SPIVID 'WRITE' operation (binary in nanoseconds)
Consumer: proc_pmc_init
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIVID_INTERFRAME_DELAY_WRITE_STATUS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIVID_INTERFRAME_DELAY_WRITE_STATUS_VALUE</id>
    <description>
      PROC_CHIP Attribute
        Delay between two frames of a Write command as measured from the end of the last bit of the first frame until the chip select of the second frame, which contains the status, is asserted.  This delay allows for the checking and status data production in the SPIVID chip.

Delay is computed as:  (value * ~100ns_hang_pulse)  +0/-~100ns_hang_pulse time

0x00000: Wait 1 SPI Clock
0x00001 - 0x1FFFF: value = number of ~100ns_hang_pulses

For values greater than 0x00000, the actual delay is 1 SPI Clock + the time delay designated by the value defined. Max. delay at 0x1FFFF: 13.1ms + 1 SPI clock cycle.
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIVID_INTERFRAME_DELAY_WRITE_STATUS_VALUE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIVID_INTER_RETRY_DELAY_VALUE</id>
    <description>
      PROC_CHIP Attribute
        Delay between command retry attempts.

Delay is computed as:  (value * ~100ns_hang_pulse)  +0/-~100ns_hang_pulse time

0x0000: Wait 1 SPI Clock
0x0001 - 0xFFFF: value = number of ~100ns_hang_pulses

For values greater than 0x00000, the actual delay is 1 SPI Clock + the time delay designated by the value defined. Max. delay at 0x1FFFF: 13.1ms + 1 SPI clock cycle.
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIVID_INTER_RETRY_DELAY_VALUE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIVID_INTER_RETRY_DELAY</id>
    <description>
      PROC_CHIP Attribute
        Delay between SPIVID reture attempts when WRITE command status indicates an error (binary in nanoseconds)
Consumer: proc_pmc_init
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIVID_INTER_RETRY_DELAY</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIVID_CRC_GEN_ENABLE</id>
    <description>
      PROC_CHIP Attribute
        EnableS CRC generation from processor to VRM device. This will produce an 8b CRC per the enabled polynomial. If CRC generation is disabled, the full 32 bits at the data input of the SPI master are transmitted.
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIVID_CRC_GEN_ENABLE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIVID_CRC_CHECK_ENABLE</id>
    <description>
      PROC_CHIP Attribute
        Enables CRC checking in the processor of frames from the VRM device.
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIVID_CRC_CHECK_ENABLE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIVID_MAJORITY_VOTE_ENABLE</id>
    <description>
      PROC_CHIP Attribute
        enables the a majority vote on the 3B of status payload on a frame received by the master as each of these have a 1 byte status field replicated three (3) times by the slave.
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIVID_MAJORITY_VOTE_ENABLE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIVID_MAX_RETRIES</id>
    <description>
      PROC_CHIP Attribute
        Number retries upon detected errors.

0x00: No retry
0x01 to 0x1F: 1 to 31 respectively
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIVID_MAX_RETRIES</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIVID_CRC_POLYNOMIAL_ENABLES</id>
    <description>
      PROC_CHIP Attribute
        CRC8 Polynomial Enables

An 8 bit mask vector to enable XORs in the CRC generation and checking LFSRs at the respective bit position. MSB (x^8) is omitted since it is always enabled, so the mask layout is (x^7,x^6,x^5,x^4,x^3,x^2,x^1,1)

Planned CRC8 polynomial: x^8 + x^7 + x^6 + x^4 + x^2 + 1
Value to enable planned polynomial: 0b1101_0101 (=0xD5)
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIVID_CRC_POLYNOMIAL_ENABLES</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_OCC_HEARTBEAT_TIME</id>
    <description>
      PROC_CHIP Attribute
        Time within which the OCC firmware must access the PMC or the OCC will be considered faulty whereby  FIRs and malfunction alerts will be produced . (binary in nanoseconds)
Consumer: OCC FW
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_OCC_HEARTBEAT_TIME</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SLEEP_WINKLE_REQUEST_TIMEOUT</id>
    <description>
      PROC_CHIP Attribute
        Time (binary in ns) that will be the threshold value for the PMC PORE request timeout.

Consumer: proc_pmc_init.C.  Will be translated to a DYNAMIC ATTRIBUTE for use by proc_pm..scominit  as a multiple of PM hang pulses.. Counter starts at 0, is increased with every tp_pmc_hang_pulse as long as PORE is busy and set the PMC local FIR bit 19 when count = threshold.
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SLEEP_WINKLE_REQUEST_TIMEOUT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PFET_POWERUP_CORE_DELAY0</id>
    <description>
      PROC_CHIP Attribute
        Delay (binary in nanoseconds) after a step in the Core power-up  PFET sequence.  Enabled per step by the vector defined in ATTR_PM_PFET_POWERUP_CORE_SEQUENCE_DELAY_SELECT
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PFET_POWERUP_CORE_DELAY0</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PFET_POWERUP_CORE_DELAY1</id>
    <description>
      PROC_CHIP Attribute
        Delay (binary in nanoseconds) after a step in the Core power-up  PFET sequence.  Enabled per step by the vector defined in ATTR_PM_PFET_POWERUP_CORE_SEQUENCE_DELAY_SELECT
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PFET_POWERUP_CORE_DELAY1</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PFET_POWERUP_CORE_DELAY0_VALUE</id>
    <description>
      PROC_CHIP Attribute
        Delay value 0  between any step in the Core power-up  PFET sequence.
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PFET_POWERUP_CORE_DELAY0_VALUE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PFET_POWERUP_CORE_DELAY1_VALUE</id>
    <description>
      PROC_CHIP Attribute
        Delay value 1  between any step in the Core power-up  PFET sequence.
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PFET_POWERUP_CORE_DELAY1_VALUE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PFET_POWERUP_CORE_SEQUENCE_DELAY_SELECT</id>
    <description>
      PROC_CHIP Attribute
        Binary vector where the most significant bits (0:11) identify the delay to be used for that step of the sequence.  Power up goes from 11, then 10, then 9,.... then 0.

0 in the bit position:  use ATTR_PM_PFET_POWERUP_CORE_DELAY0;

1 in the bit position:  use ATTR_PM_PFET_POWERUP_CORE_DELAY1
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PFET_POWERUP_CORE_SEQUENCE_DELAY_SELECT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PFET_POWERDOWN_CORE_DELAY0</id>
    <description>
      PROC_CHIP Attribute
        Delay (binary in nanoseconds) between a step in the Core power-down  PFET sequence.  Enabled per step by the vector defined in ATTR_PM_PFET_POWERDOWN_CORE_SEQUENCE_DELAY_SELECT
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PFET_POWERDOWN_CORE_DELAY0</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PFET_POWERDOWN_CORE_DELAY1</id>
    <description>
      PROC_CHIP Attribute
        Delay (binary in nanoseconds) between a step in the Core power-down  PFET sequence.  Enabled per step by the vector defined in ATTR_PM_PFET_POWERDOWN_CORE_SEQUENCE_DELAY_SELECT
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PFET_POWERDOWN_CORE_DELAY1</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PFET_POWERDOWN_CORE_DELAY0_VALUE</id>
    <description>
      PROC_CHIP Attribute
        Delay value 0  between any step in the Core power-up  PFET sequence.
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PFET_POWERDOWN_CORE_DELAY0_VALUE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PFET_POWERDOWN_CORE_DELAY1_VALUE</id>
    <description>
      PROC_CHIP Attribute
        Delay value 1  between any step in the Core power-up  PFET sequence.
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PFET_POWERDOWN_CORE_DELAY1_VALUE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PFET_POWERDOWN_CORE_SEQUENCE_DELAY_SELECT</id>
    <description>
      PROC_CHIP Attribute
        Binary vector where the most significant bits (0:11) identify the delay to be used for that step of the sequence.  Power up goes from 11, then 10, then 9,.... then 0.

0 in the bit position:  use ATTR_PM_PFET_POWERUP_CORE_DELAY0;

1 in the bit position:  use ATTR_PM_PFET_POWERUP_CORE_DELAY1
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PFET_POWERDOWN_CORE_SEQUENCE_DELAY_SELECT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PFET_POWERUP_ECO_DELAY0</id>
    <description>
      PROC_CHIP Attribute
        Delay (binary in nanoseconds) after a step in the ECO power-up  PFET sequence.  Enabled per step by the vector defined in ATTR_PM_PFET_POWERUP_ECO_SEQUENCE_DELAY_SELECT
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PFET_POWERUP_ECO_DELAY0</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PFET_POWERUP_ECO_DELAY1</id>
    <description>
      PROC_CHIP Attribute
        Delay (binary in nanoseconds) after a step in the ECO power-up  PFET sequence.  Enabled per step by the vector defined in ATTR_PM_PFET_POWERUP_ECO_SEQUENCE_DELAY_SELECT
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PFET_POWERUP_ECO_DELAY1</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PFET_POWERUP_ECO_DELAY0_VALUE</id>
    <description>
      PROC_CHIP Attribute
        Delay value 0  between any step in the ECO power-up  PFET sequence.
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PFET_POWERUP_ECO_DELAY0_VALUE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PFET_POWERUP_ECO_DELAY1_VALUE</id>
    <description>
      PROC_CHIP Attribute
        Delay value 1  between any step in the ECO power-up  PFET sequence.
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PFET_POWERUP_ECO_DELAY1_VALUE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PFET_POWERUP_ECO_SEQUENCE_DELAY_SELECT</id>
    <description>
      PROC_CHIP Attribute
        Binary vector where the most significant bits (0:11) identify the delay to be used for that step of the sequence.  Power up goes from 11, then 10, then 9,.... then 0.

0 in the bit position:  use ATTR_PM_PFET_POWERUP_ECO_DELAY0;

1 in the bit position:  use ATTR_PM_PFET_POWERUP_ECO_DELAY1
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PFET_POWERUP_ECO_SEQUENCE_DELAY_SELECT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PFET_POWERDOWN_ECO_DELAY0</id>
    <description>
      PROC_CHIP Attribute
        Delay (binary in nanoseconds) between a step in the ECO power-down  PFET sequence.  Enabled per step by the vector defined in ATTR_PM_PFET_POWERDOWN_ECO_SEQUENCE_DELAY_SELECT
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PFET_POWERDOWN_ECO_DELAY0</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PFET_POWERDOWN_ECO_DELAY1</id>
    <description>
      PROC_CHIP Attribute
        Delay (binary in nanoseconds) between a step in the ECO power-down  PFET sequence.  Enabled per step by the vector defined in ATTR_PM_PFET_POWERDOWN_ECO_SEQUENCE_DELAY_SELECT
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PFET_POWERDOWN_ECO_DELAY1</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PFET_POWERDOWN_ECO_DELAY0_VALUE</id>
    <description>
      PROC_CHIP Attribute
        Delay value 0  between any step in the ECO power-up  PFET sequence.
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PFET_POWERDOWN_ECO_DELAY0_VALUE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PFET_POWERDOWN_ECO_DELAY1_VALUE</id>
    <description>
      PROC_CHIP Attribute
        Delay value 1  between any step in the ECO power-up  PFET sequence.
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PFET_POWERDOWN_ECO_DELAY1_VALUE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PFET_POWERDOWN_ECO_SEQUENCE_DELAY_SELECT</id>
    <description>
      PROC_CHIP Attribute
        Binary vector where the most significant bits (0:11) identify the delay to be used for that step of the ECO power up sequence.  Power up goes from 11, then 10, then 9,.... then 0.  0 in the bit position:  use ATTR_PM_PFET_POWERUP_ECO_DELAY0;  1 in the bit position:  use ATTR_PM_PFET_POWERUP_ECO_DELAY1
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PFET_POWERDOWN_ECO_SEQUENCE_DELAY_SELECT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PSTATE0_FREQUENCY</id>
    <description>
      PROC_CHIP Attribute
        Defines the center point of the Pstate space in the frequency domain.  Binary in Khz.

Producer: proc_build_gpstate.C

Consumers: proc_pcbs_init.C, proc_pcbs_lpst_init.C,
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PSTATE0_FREQUENCY</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_IVRMS_ENABLED</id>
    <description>
      PROC_CHIP Attribute
        Indicates whether available internal voltage regulation macros (iVRMs) are to enabled.  This indicates that module VPD has valid #M keywords available.
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_IVRMS_ENABLED</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SAFE_PSTATE</id>
    <description>
      PROC_CHIP Attribute
        Safe Pstate

Valid Values:-128 thru 127

Producer: proc_pm_effective.C

DYNAMIC_ATTRIBUTE

Consumer: proc_pcbs_init.C

Establishes the Pstate that the core chiplet will take on if:
psafe less than or equal to PMSR[global_actual_pstate]
AND any of the following conditions are true:
Loss of OCC Heartbeat if occ_heartbeat_en is set
PMGP0[force_safe_mode] is set

If psafe > PMSR[global_actual_pstate], the  global_actual_pstate is forced.

The value of Psafe needs to be at or below the nominal Pstate to make sure safe operation of all chiplets.
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SAFE_PSTATE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_RESONANT_CLOCK_ENABLE</id>
    <description>
      PROC_CHIP Attribute
        Resonant Clock Enable
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_RESONANT_CLOCK_ENABLE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_RESONANT_CLOCK_FULL_CSB_PSTATE</id>
    <description>
      PROC_CHIP Attribute
        FCSB = Full Clock Sector Buffer (8b in terms of Pstate)
Defines the Pstate for the point at which clock sector buffers should be at full strength.  This is to support Vmin operation.

    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_RESONANT_CLOCK_FULL_CSB_PSTATE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_RESONANT_CLOCK_LFRLOW_PSTATE</id>
    <description>
      PROC_CHIP Attribute
        LFRLower = Low Frequency Resonant Lower.  Defines the Pstate for the lower end of the Low Frequency Resonant band
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_RESONANT_CLOCK_LFRLOW_PSTATE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_RESONANT_CLOCK_LFRUPPER_PSTATE</id>
    <description>
      PROC_CHIP Attribute
        LFRUpper = Low Frequency Resonant Upper. Defines the Pstate for the upper end of the Low Frequency Resonant band
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_RESONANT_CLOCK_LFRUPPER_PSTATE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_RESONANT_CLOCK_HFRLOW_PSTATE</id>
    <description>
      PROC_CHIP Attribute
        HFRLower = High Frequency Resonant Low. Defines the Pstate for the lower end of the High Frequency Resonant band
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_RESONANT_CLOCK_HFRLOW_PSTATE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_RESONANT_CLOCK_HFRHIGH_PSTATE</id>
    <description>
      PROC_CHIP Attribute
        HFRUpper = High Frequency Resonant Upper. Defines the Pstate for the upper end of the High Frequency Resonant band
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_RESONANT_CLOCK_HFRHIGH_PSTATE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIPSS_FRAME_SIZE</id>
    <description>
      PROC_CHIP Attribute
        Number of data bits per individual SPIPSS transaction (also referred to as frame) during chip select assertion

Supported values: 0x10 (16d),

Chip Select assertion duration is spi_frame_size + 2
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIPSS_FRAME_SIZE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIPSS_OUT_COUNT</id>
    <description>
      PROC_CHIP Attribute
        Number of bits sent out MOSI of the frame

Supported values: 0x000 to spi_frame_size.  Values beyond spi_frame_size are ignored.
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIPSS_OUT_COUNT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIPSS_IN_DELAY</id>
    <description>
      PROC_CHIP Attribute
        Number of SPI clocks after chip select to wait before capturing MISO input

Supported values: 0x000 to spi_frame_size.  Values beyond spi_frame_size result in the input never being captured
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIPSS_IN_DELAY</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIPSS_IN_COUNT</id>
    <description>
      PROC_CHIP Attribute
        Number of bits captured on MISO input

Supported values: 0x000 to spi_frame_size.  The actual number of bits captured is spi_frame_size - spi_in_delay
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIPSS_IN_COUNT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIPSS_CLOCK_POLARITY</id>
    <description>
      PROC_CHIP Attribute
        SPIPSS Clock Polarity  (CPOL=0 means that clk idle is deasserted, CPOH=1 means that clk idle is asserted)
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIPSS_CLOCK_POLARITY</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIPSS_CLOCK_PHASE</id>
    <description>
      PROC_CHIP Attribute
        SPIPSS clock phase (CPHA=0 means to change/sample values of data signals on first edge, otherwise on 2nd)
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIPSS_CLOCK_PHASE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIPSS_CLOCK_DIVIDER</id>
    <description>
      PROC_CHIP Attribute
        SPI clock speed divider to divide the nest_nclk/4 mesh clock, which results in a divider = (nest_freq/ (SPI_freq*8))-1
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIPSS_CLOCK_DIVIDER</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIPSS_INTER_FRAME_DELAY_SETTING</id>
    <description>
      PROC_CHIP Attribute

Delay is computed as:  (value * ~100ns_hang_pulse)  +0/-~100ns_hang_pulse time

0x00000: Wait 1 PSS Clock
0x00001 - 0x1FFFF: value = number of ~100ns_hang_pulses

For values greater than 0x00000, the actual delay is 1 PSS Clock + the time delay designated by the value defined. Max. delay at 0x1FFFF: 13.1ms + 1 PSSI clock cycle.

Producer: proc_pm_effective

Consumer: proc_pss_init
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIPSS_INTER_FRAME_DELAY_SETTING</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIPSS_INTER_FRAME_DELAY</id>
    <description>
      PROC_CHIP Attribute
        Delay between two frames of a P2S command as measured from the end of the last bit of the first frame until the chip select of the second frame.  (binary in nanoseconds)

Consumer: proc_pm_effective

Produces ATTR_PM_SPIPSS_INTER_FRAME_DELAY_SETTING
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIPSS_INTER_FRAME_DELAY</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PBAX_RCV_RESERV_TIMEOUT</id>
    <description>
      PROC_CHIP Attribute
        PBAX Data Timeout Divider
Divider for the 1us PBAX hang pulse.  A hang is detected after two divided hang pulses are received under the following conditions:
- Data Hi packet accepted and timeout waiting for Data Lo packet.
- Reservation aquired and timeout waiting for Data Hi packet.

00000 = Data Timeout is Disabled
00001 = divided hang pulse = PBAX hang pulse
00010 = divided hang pulse = PBAX hang pulse/2
00011 = divided hang pulse = PBAX hang pulse/3
. . .
11111  = divided hang pulse = PBAX hang pulse/31
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PBAX_RCV_RESERV_TIMEOUT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PBAX_SND_RETRY_COUNT_OVERCOMMIT_ENABLE</id>
    <description>
      PROC_CHIP Attribute
        PBAX Send Retry count overcommit
Mode bit to count overcommit retries for the send retry threshold when sending PBAX commands on the powerbus.
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PBAX_SND_RETRY_COUNT_OVERCOMMIT_ENABLE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PBAX_SND_RETRY_THRESHOLD</id>
    <description>
      PROC_CHIP Attribute
        PBAX Send Retry Threshold
Defines the maximum number of retry attempts by the Send Engine for any phase of the PBAX transaction set before the operation is dropped and status bit are set.  This does not count PowerBus overcommit retries unless snd_retry_count_overcom bit is set.

0x00 :  No Timeout
0x01 :  1 attempt
0x02 :   2 attempts
.etc.
0xFF :  255 attempts
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PBAX_SND_RETRY_THRESHOLD</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PBAX_SND_RESERV_TIMEOUT</id>
    <description>
      PROC_CHIP Attribute
        PBAX Send Reservation Timeout Divider
Divider for the 1us PBAX hang pulse.  A hang is detected after two divided hang pulses are received after attempting to acquire a reservation with the PBAX Receive engine before declaring a Send Reservation Timeout error.

00000 = Send Reservation Timeout is Disabled
00001 = divided hang pulse = PBAX hang pulse
00010 = divided hang pulse = PBAX hang pulse/2
00011 = divided hang pulse = PBAX hang pulse/3
. . .
11111  = divided hang pulse = PBAX hang pulse/31
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PBAX_SND_RESERV_TIMEOUT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPWUP_FSP</id>
    <description>
      EX_CHIPLET Attribute
        PBAX Send Reservation Timeout Divider
Divider for the 1us PBAX hang pulse.  A hang is detected after two divided hang pulses are received after attempting to acquire a reservation with the PBAX Receive engine before declaring a Send Reservation Timeout error.

00000 = Send Reservation Timeout is Disabled
00001 = divided hang pulse = PBAX hang pulse
00010 = divided hang pulse = PBAX hang pulse/2
00011 = divided hang pulse = PBAX hang pulse/3
. . .
11111  = divided hang pulse = PBAX hang pulse/31
        Arbitration Attribute for FSP special wakeups:  upon set, increment, upon clear, decrement;   hardware bit only cleared upon attribute being 0.
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPWUP_FSP</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPWUP_OCC</id>
    <description>
      EX_CHIPLET Attribute
        PBAX Send Reservation Timeout Divider
Divider for the 1us PBAX hang pulse.  A hang is detected after two divided hang pulses are received after attempting to acquire a reservation with the PBAX Receive engine before declaring a Send Reservation Timeout error.

00000 = Send Reservation Timeout is Disabled
00001 = divided hang pulse = PBAX hang pulse
00010 = divided hang pulse = PBAX hang pulse/2
00011 = divided hang pulse = PBAX hang pulse/3
. . .
11111  = divided hang pulse = PBAX hang pulse/31
        Arbitration Attribute for FSP special wakeups:  upon set, increment, upon clear, decrement;   hardware bit only cleared upon attribute being 0.
        Arbitration Attribute for OCC special wakeups:  upon set, increment, upon clear, decrement;   hardware bit only cleared upon attribute being 0.
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPWUP_OCC</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPWUP_PHYP</id>
    <description>
      EX_CHIPLET Attribute
        PBAX Send Reservation Timeout Divider
Divider for the 1us PBAX hang pulse.  A hang is detected after two divided hang pulses are received after attempting to acquire a reservation with the PBAX Receive engine before declaring a Send Reservation Timeout error.

00000 = Send Reservation Timeout is Disabled
00001 = divided hang pulse = PBAX hang pulse
00010 = divided hang pulse = PBAX hang pulse/2
00011 = divided hang pulse = PBAX hang pulse/3
. . .
11111  = divided hang pulse = PBAX hang pulse/31
        Arbitration Attribute for FSP special wakeups:  upon set, increment, upon clear, decrement;   hardware bit only cleared upon attribute being 0.
        Arbitration Attribute for OCC special wakeups:  upon set, increment, upon clear, decrement;   hardware bit only cleared upon attribute being 0.
        Arbitration Attribute for PHYP special wakeups:  upon set, increment, upon clear, decrement;   hardware bit only cleared upon attribute being 0.
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPWUP_PHYP</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<!-- End pm_attributes_all_hwp.xml -->


<!-- Support for pm_attributes_all_plat.xml -->

<attribute>
    <id>PROC_DCM_INSTALLED</id>
    <description>
      PROC_CHIP Attribute
This attribute is set to 1 if the target processor is part of a Dual Chip Module (DCM).

Used for enabling operations between the two chips for to voltage control based on 'interchip_mode' and the settings of PMIC0.

Consumer: proc_pm.scominit
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_DCM_INSTALLED</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_EXTERNAL_VRM_STEPSIZE</id>
    <description>
      PROC_CHIP Attribute
Step size (binary in microvolts) to take upon external VRM voltage transitions.  The value set here must take into account where internal VRMs are enabled or not as, when they are enabled, the step size must account for the tracking (eg PFET strength recalculation) for the step.

MRWB after system characterization

Consumer: proc_build_pstate_tables.C, proc_pmc_init.C -config
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_EXTERNAL_VRM_STEPSIZE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_EXTERNAL_VRM_STEPDELAY</id>
    <description>
      PROC_CHIP Attribute
Step delay (binary in microseconds) after a voltage change

Producer:  MRWB after system characterization


Consumer: proc_pmc_init -config
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_EXTERNAL_VRM_STEPDELAY</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SAFE_VOLTAGE</id>
    <description>
      PROC_CHIP Attribute

Voltage (binary in 5mv units) that is invoked upon the loss of the OCC Heartbeat.

Used to determine the Pstate to load into the hardware for automatic reaction upon the loss of the OCC heartbeat .  This value needs to be at or above that which supports the nominal frequency to make sure safe operation of all chiplets.

The value is translated to the Pstate space.

Consumer: proc_pm_effective.C

DYNAMIC_ATTRIBUTE: ATTR_PM_SAFE_PSTATE

Consumer: proc_pm.scominit
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SAFE_VOLTAGE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PSTATE_UNDERVOLTING_MINIMUM</id>
    <description>
      PROC_CHIP Attribute
Minimum frequency (binary in 5mv units) for which undervolting is allowed.  Will be internally rounded to the nearest ATTR_PROC_REFCLK_FREQUENCY / 8 value.

Consumer: OCC FW; OCC Lab Tools

Need to create a process for MRWB elements to get passed to OCC (FW or lab tools)
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PSTATE_UNDERVOLTING_MINIMUM</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PSTATE_UNDERVOLTING_MAXIMUM</id>
    <description>
      PROC_CHIP Attribute
Maximum frequency for which undervolting is allowed.  Will be internally rounded to the nearest ATTR_PROC_REFCLK_FREQUENCY / 8 value.

Consumer: OCC FW; OCC Lab Tools

Need to create a process for MRWB elements to get passed to OCC (FW or lab tools)
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PSTATE_UNDERVOLTING_MAXIMUM</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIVID_FREQUENCY</id>
    <description>
      PROC_CHIP Attribute
SPI Clock Frequency (binary in MHz)
Consumer: proc_pm_effective

Produces ATTR_PM_SPIVID_CLOCK_DIVIDER
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIVID_FREQUENCY</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIVID_PORT_ENABLE</id>
    <description>
      PROC_CHIP Attribute
Defines the configuration of the SPIVID ports from the target.  NONE means that no VRM is attached; PORTxNONRED means that the indicated port is used in a non-redundant configuration;  REDUNDANT means that all three are connected and considered redundant.
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIVID_PORT_ENABLE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SLEEP_ENTRY</id>
    <description>
      PROC_CHIP Attribute
Setting depends on di/dt charateristics of the system.

Set Assisted if power off serialization is needed and SLEEP_TYPE=Fast;  Set to Hardware if the system can handle the unrelated powering off between cores.  Hardware setting decreases entry latency

Producer: MRWB

Consumer:  proc_pm_init -config and proc_pcbs_init
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SLEEP_ENTRY</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SLEEP_EXIT</id>
    <description>
      PROC_CHIP Attribute
Setting depends on di/dt charateristics of the system and the setting of ATTR_PM_SLEEP_TYPE.

Set to Assisted if power on serialization is needed and SLEEP_TYPE=Fast;  Set to Hardware if the system can handle the unrelated powering off between cores.  Hardware setting decreases entry latency
Must be set to Assisted if ATTR_PM_SLEEP_TYPE=Deep as this necessary for restore.

Setting to Hardware is a test mode for Fast only.

Producer: MRWB

Consumer: proc_pm_init -config and proc_pcbs_init
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SLEEP_EXIT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SLEEP_TYPE</id>
    <description>
      PROC_CHIP Attribute
Sleep Power Off Select:
Selects which voltage level to place the Core domain PFETs upon Sleep entry. 0 = Vret (Fast Sleep Mode), 1 = Voff (Deep Sleep Mode)

Producer: MRWB

Consumer: proc_pm_init -config and proc_pcbs_init
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SLEEP_TYPE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_WINKLE_ENTRY</id>
    <description>
      PROC_CHIP Attribute
Setting depends on di/dt charateristics of the system.

Set Assisted if power off serialization is needed and WINKE_TYPE=Fast;  Set to Hardware if the system can handle the unrelated powering off between cores.  Hardware setting decreases entry latency

Producer: MRWB

Consumer:  proc_pm_init -config and proc_pcbs_init
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_WINKLE_ENTRY</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_WINKLE_EXIT</id>
    <description>
      PROC_CHIP Attribute
Setting depends on di/dt charateristics of the system and the setting of ATTR_PM_WINKE_TYPE.

Set to Assisted if power on serialization is needed and WINKE_TYPE=Fast;  Set to Hardware if the system can handle the unrelated powering off between cores.  Hardware setting decreases entry latency
Must be set to Assisted if ATTR_PM_WINKE_TYPE=Deep as this necessary for restore.

Setting to Hardware is a test mode for Fast only.

Producer: MRWB

Consumer:  proc_pm_effective and proc_pcbs_init.
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_WINKLE_EXIT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_WINKLE_TYPE</id>
    <description>
      PROC_CHIP Attribute
Winkle Power Off Select:
Selects which voltage level to place the Core and ECO domain PFETs upon Winkle entry. 0 = Vret (Fast Winkle Mode), 1 = Voff (Deep Winkle Mode)

Producer: MRWB

Consumer:  proc_pm_init -config and proc_pcbs_init
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_WINKLE_TYPE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SAFE_FREQUENCY</id>
    <description>
      PROC_CHIP Attribute
Safe Frequency (binary in MHz)

Indicates the frequency that the cores will be moved to in the event of the loss of the OCC Heartbead.  This value needs to be  at or below the nominal frequency to make sure safe operation of all chiplets.

The value is translated to the Pstate space.

Consumer: proc_pm_effective.C

DYNAMIC_ATTRIBUTE: ATTR_PM_SAFE_PSTATE

Consumer: proc_pcbs_init.C
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SAFE_FREQUENCY</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_RESONANT_CLOCK_FULL_CLOCK_SECTOR_BUFFER_FREQUENCY</id>
    <description>
      PROC_CHIP Attribute
Frequency (binary in MHz) for the point at which clock sector buffers should be at full strength.  This is to support Vmin operation.  Setting cannot overlap the Low or High bands.
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_RESONANT_CLOCK_FULL_CLOCK_SECTOR_BUFFER_FREQUENCY</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_RESONANT_CLOCK_LOW_BAND_LOWER_FREQUENCY</id>
    <description>
      PROC_CHIP Attribute
Frequency (binary in MHz)) for the lower end of the Low Frequency Resonant band
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_RESONANT_CLOCK_LOW_BAND_LOWER_FREQUENCY</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_RESONANT_CLOCK_LOW_BAND_UPPER_FREQUENCY</id>
    <description>
      PROC_CHIP Attribute
Frequency (binary in MHz) for the upper end of the Low Frequency Resonant band
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_RESONANT_CLOCK_LOW_BAND_UPPER_FREQUENCY</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_RESONANT_CLOCK_HIGH_BAND_LOWER_FREQUENCY</id>
    <description>
      PROC_CHIP Attribute
Frequency (binary in MHz) for the lower end of the High Frequency Resonant band
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_RESONANT_CLOCK_HIGH_BAND_LOWER_FREQUENCY</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_RESONANT_CLOCK_HIGH_BAND_UPPER_FREQUENCY</id>
    <description>
      PROC_CHIP Attribute
Frequency (binary in MHz)) for the upper end of the High Frequency Resonant band
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_RESONANT_CLOCK_HIGH_BAND_UPPER_FREQUENCY</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_SPIPSS_FREQUENCY</id>
    <description>
      PROC_CHIP Attribute
SPIPSS Clock Frequency (binary in MHz)

Valid range: 0.5MHz to 25MHz

Consumer: proc_pmc_init
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_SPIPSS_FREQUENCY</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_APSS_CHIP_SELECT</id>
    <description>
      PROC_CHIP Attribute
Defines which of the PSS chip selects that the APSS is connected
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_APSS_CHIP_SELECT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PBAX_NODEID</id>
    <description>
      PROC_CHIP Attribute
Receive PBAX Nodeid
Value that indicates this PBA's PBAX Node affinity.  This is matched to pbax_nodeid of the PMISC Address phase.
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PBAX_NODEID</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PBAX_CHIPID</id>
    <description>
      PROC_CHIP Attribute
Receive PBAX Chipid
Value that indicates this PBA's PBAX Chipid within the PBAX node.  Is matched to pbax_chipid of the Address phase if pbax_type=unicast.
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PBAX_CHIPID</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PM_PBAX_BRDCST_ID_VECTOR</id>
    <description>
      PROC_CHIP Attribute
Receive PBAX Broadcast Group
Vector that is indexed when decoded PMISC pbax_type=broadcast with the decoded PMISC pbax_chipid value.  If the bit in this vector at the decoded bit location is a 1, then this receive engine will participate in the broadcast operation.
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PM_PBAX_BRDCST_ID_VECTOR</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_R_LOADLINE</id>
    <description>
      SYSTEM Attribute
Impedance (binary microOhms) of the load line from a processor VRM to the Processor Module pins.  This value is applied to each processor instance.

Producer: MRWB (via the power subsystem design per system)

Consumers: proc_build_gpstate_table.C
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_R_LOADLINE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_R_DISTLOSS</id>
    <description>
      SYSTEM Attribute
Impedance (binary in microOhms) of the distribution loss the sense point to the circuit.  This value is applied to each processor instance.

Producer: MRWB (via the power subsystem design per system)

Consumers: proc_build_gpstate_table.C
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_R_DISTLOSS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_VRM_VOFFSET</id>
    <description>
      SYSTEM Attribute
Offset voltage (binary in microvolts) to apply to the VRM distribution to the processor module.  This value is applied to each processor instance.

Producer: MRWB (via the power subsystem design per system)

Consumers: proc_build_gpstate_table.C
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_VRM_VOFFSET</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_DPLL_DIVIDER</id>
    <description>
      SYSTEM Attribute
Feedback divider x forward divider setting for the DPLL

Producer: MRWB

Consumers: proc_build_gpstate_table.C
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_DPLL_DIVIDER</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>FREQ_CORE_MAX</id>
    <description>
      SYSTEM Attribute
Maximum frequency (binary in MHz) that any processor in the system will run.  Used to define the top end of the PState range in the frequency space.
From this, the ATTR_PROCPM_PSTATE0_FREQUENCY is computed using ATTR_SYSTEM_REFCLK_FREQUENCY to determine the step size.

Producer: MRWB (system design)

Consumers: proc_build_gpstate_table.C (among others)
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_FREQ_CORE_MAX</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<!-- End pm_attributes_all_plat.xml -->

<attribute>
    <id>OVERRIDE_MVPD_NOM_FREQ_MHZ</id>
   <description>Module VPD #V keyword Nominal Frequency in MHZ
consumer: p8_build_pstate_datablock, others
firmware notes: Used as override attribute for pstate procedure
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_OVERRIDE_MVPD_NOM_FREQ_MHZ</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>OVERRIDE_MVPD_V_NEST_NOM_VOLTAGE</id>
    <description>Module VPD #V keyword V-nest nominal voltage
consumer: p8_build_pstate_datablock, others
firmware notes: Used as override attribute for pstate procedure
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_OVERRIDE_MVPD_V_NEST_NOM_VOLTAGE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>OVERRIDE_MVPD_I_NEST_NOM_CURRENT</id>
    <description>Module VPD #V keyword I-nest nominal current
consumer: p8_build_pstate_datablock, others
firmware notes: Used as override attribute for pstate procedure</description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_OVERRIDE_MVPD_I_NEST_NOM_CURRENT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>OVERRIDE_MVPD_V_CS_NOM_VOLTAGE</id>
    <description>
    Module VPD #V keyword V-cs nominal voltage
consumer: p8_build_pstate_datablock, others
firmware notes: Used as override attribute for pstate procedure
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_OVERRIDE_MVPD_V_CS_NOM_VOLTAGE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>OVERRIDE_MVPD_I_CS_NOM_CURRENT</id>
    <description>
    Module VPD #V keyword I-cs nominal current
consumer: p8_build_pstate_datablock, others
firmware notes: Used as override attribute for pstate procedure
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_OVERRIDE_MVPD_I_CS_NOM_CURRENT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>OVERRIDE_MVPD_PS_FREQ_MHZ</id>
    <description>
    Module VPD #V keyword PowerSave Frequency in MHZ
consumer: p8_build_pstate_datablock, others
firmware notes: Used as override attribute for pstate procedure
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_OVERRIDE_MVPD_PS_FREQ_MHZ</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>OVERRIDE_MVPD_V_NEST_PS_VOLTAGE</id>
    <description>
    Module VPD #V keyword V-nest powersave voltage
consumer: p8_build_pstate_datablock, others
firmware notes: Used as override attribute for pstate procedure
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_OVERRIDE_MVPD_V_NEST_PS_VOLTAGE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>OVERRIDE_MVPD_I_NEST_PS_CURRENT</id>
    <description>
    Module VPD #V keyword I-nest powersave current
consumer: p8_build_pstate_datablock, others
firmware notes: Used as override attribute for pstate procedure
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_OVERRIDE_MVPD_I_NEST_PS_CURRENT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>OVERRIDE_MVPD_V_CS_PS_VOLTAGE</id>
    <description>
    Module VPD #V keyword V-cs powersave voltage
consumer: p8_build_pstate_datablock, others
firmware notes: Used as override attribute for pstate procedure
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_OVERRIDE_MVPD_V_CS_PS_VOLTAGE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>OVERRIDE_MVPD_I_CS_PS_CURRENT</id>
    <description>
    Module VPD #V keyword I-cs powersave current
consumer: p8_build_pstate_datablock, others
firmware notes: Used as override attribute for pstate procedure
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_OVERRIDE_MVPD_I_CS_PS_CURRENT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>OVERRIDE_MVPD_TURBO_FREQ_MHZ</id>
    <description>
    Module VPD #V keyword turbo frequency in MHZ
consumer: p8_build_pstate_datablock, others
firmware notes: Used as override attribute for pstate procedure
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_OVERRIDE_MVPD_TURBO_FREQ_MHZ</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>OVERRIDE_MVPD_V_NEST_TURBO_VOLTAGE</id>
    <description>
    Module VPD #V keyword V-nest turbo voltage
consumer: p8_build_pstate_datablock, others
firmware notes: Used as override attribute for pstate procedure
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_OVERRIDE_MVPD_V_NEST_TURBO_VOLTAGE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>OVERRIDE_MVPD_I_NEST_TURBO_CURRENT</id>
    <description>
    Module VPD #V keyword I-nest turbo current
consumer: p8_build_pstate_datablock, others
firmware notes: Used as override attribute for pstate procedure
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_OVERRIDE_MVPD_I_NEST_TURBO_CURRENT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>OVERRIDE_MVPD_V_CS_TURBO_VOLTAGE</id>
    <description>
    Module VPD #V keyword V-cs turbo voltage
consumer: p8_build_pstate_datablock, others
firmware notes: Used as override attribute for pstate procedure
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_OVERRIDE_MVPD_V_CS_TURBO_VOLTAGE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>OVERRIDE_MVPD_I_CS_TURBO_CURRENT</id>
    <description>
    Module VPD #V keyword I-cs turbo current
consumer: p8_build_pstate_datablock, others
firmware notes: Used as override attribute for pstate procedure
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_OVERRIDE_MVPD_I_CS_TURBO_CURRENT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>


<attribute>
    <id>OVERRIDE_MVPD_FVMIN_FREQ_MHZ</id>
    <description>
    Module VPD #V keyword fvmin frequency MHZ
consumer: p8_build_pstate_datablock, others
firmware notes: Used as override attribute for pstate procedure
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_OVERRIDE_MVPD_FVMIN_FREQ_MHZ</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>OVERRIDE_MVPD_V_NEST_FVMIN_VOLTAGE</id>
    <description>
    Module VPD #V keyword V-nest fvmin voltage
consumer: p8_build_pstate_datablock, others
firmware notes: Used as override attribute for pstate procedure
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_OVERRIDE_MVPD_V_NEST_FVMIN_VOLTAGE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>OVERRIDE_MVPD_I_NEST_FVMIN_CURRENT</id>
    <description>
    Module VPD #V keyword I-nest fvmin current
consumer: p8_build_pstate_datablock, others
firmware notes: Used as override attribute for pstate procedure
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_OVERRIDE_MVPD_I_NEST_FVMIN_CURRENT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>OVERRIDE_MVPD_V_CS_FVMIN_VOLTAGE</id>
    <description>
    Module VPD #V keyword V-cs fvmin voltage
consumer: p8_build_pstate_datablock, others
firmware notes: Used as override attribute for pstate procedure
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_OVERRIDE_MVPD_V_CS_FVMIN_VOLTAGE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>OVERRIDE_MVPD_I_CS_FVMIN_CURRENT</id>
    <description>
    Module VPD #V keyword I-cs fvmin current
consumer: p8_build_pstate_datablock, others
firmware notes: Used as override attribute for pstate procedure
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_OVERRIDE_MVPD_I_CS_FVMIN_CURRENT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>OVERRIDE_MVPD_LAB_FREQ_MHZ</id>
    <description>
    Module VPD #V keyword lab frequency MHZ
consumer: p8_build_pstate_datablock, others
firmware notes: Used as override attribute for pstate procedure
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_OVERRIDE_MVPD_LAB_FREQ_MHZ</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>OVERRIDE_MVPD_V_NEST_LAB_VOLTAGE</id>
    <description>
    Module VPD #V keyword V-nest lab voltage
consumer: p8_build_pstate_datablock, others
firmware notes: Used as override attribute for pstate procedure
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_OVERRIDE_MVPD_V_NEST_LAB_VOLTAGE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>OVERRIDE_MVPD_I_NEST_LAB_CURRENT</id>
    <description>
    Module VPD #V keyword I-nest lab current
consumer: p8_build_pstate_datablock, others
firmware notes: Used as override attribute for pstate procedure
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_OVERRIDE_MVPD_I_NEST_LAB_CURRENT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>OVERRIDE_MVPD_V_CS_LAB_VOLTAGE</id>
    <description>
    Module VPD #V keyword V-cs lab voltage
consumer: p8_build_pstate_datablock, others
firmware notes: Used as override attribute for pstate procedure
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_OVERRIDE_MVPD_V_CS_LAB_VOLTAGE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>OVERRIDE_MVPD_I_CS_LAB_CURRENT</id>
    <description>
    Module VPD #V keyword I-cs lab current
consumer: p8_build_pstate_datablock, others
firmware notes: Used as override attribute for pstate procedure
    </description>
    <simpleType>
        <uint32_t></uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_OVERRIDE_MVPD_I_CS_LAB_CURRENT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
  <id>PROC_PCIE_IOP_CONFIG</id>
  <description>PCIE IOP lane configuration
      creator: platform
      consumer: proc_pcie_scominit
      firmware notes:
        Encoded PCIE IOP lane configuration
  </description>
  <simpleType><uint8_t></uint8_t></simpleType>
  <persistency>non-volatile</persistency>
  <readable/>
  <writeable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_PCIE_IOP_CONFIG</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
  <id>PROC_PCIE_IOP_SWAP</id>
  <description>PCIE IOP swap configuration
      creator: platform
      consumer: proc_pcie_scominit
      firmware notes:
        Encoded PCIE IOP swap configuration
        Array index: IOP number (0:1)
  </description>
  <simpleType>
      <uint8_t></uint8_t>
      <array>2</array>
  </simpleType>
  <persistency>non-volatile</persistency>
  <readable/>
  <writeable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_PCIE_IOP_SWAP</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
  <id>PROC_PCIE_PHB_ACTIVE</id>
  <description>PCIE PHB valid mask
      creator: platform
      consumer: proc_pcie_scominit
      firmware notes:
        Bit mask defining set of active/valid PHBs
        bit0=PHB0, bit1=PHB1, bit2=PHB2
  </description>
  <simpleType><uint8_t></uint8_t></simpleType>
  <persistency>non-volatile</persistency>
  <readable/>
  <writeable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_PCIE_PHB_ACTIVE</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
  <id>PROC_PCIE_IOP_G3_PLL_CONTROL0</id>
  <description>
      creator: platform (MRW)
      consumer: proc_pcie_scominit
      firmware notes:
        PCIe Gen3 PLL Control Register 0.
        ATUNE/CPISEL.
        Array index: IOP number(0:1)
  </description>
  <simpleType>
      <uint32_t></uint32_t>
      <array>2</array>
  </simpleType>
  <persistency>non-volatile</persistency>
  <readable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_PCIE_IOP_G3_PLL_CONTROL0</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
  <id>PROC_PCIE_IOP_G2_PLL_CONTROL0</id>
  <description>
      creator: platform (MRW)
      consumer: proc_pcie_scominit
      firmware notes:
        PCIe Gen2/Gen1 PLL Control Register 0.
        ATUNE/CPISEL.
        Array index: IOP number(0:1)
  </description>
  <simpleType>
      <uint32_t></uint32_t>
      <array>2</array>
  </simpleType>
  <persistency>non-volatile</persistency>
  <readable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_PCIE_IOP_G2_PLL_CONTROL0</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
  <id>PROC_PCIE_IOP_PLL_GLOBAL_CONTROL0</id>
  <description>
      creator: platform (MRW)
      consumer: proc_pcie_scominit
      notes:
        PCIe PLL Global Control Register 0.
        REFISRC/REFISINK.
        Array index: IOP number (0:1)
  </description>
  <simpleType>
      <uint32_t></uint32_t>
      <array>2</array>
  </simpleType>
  <persistency>non-volatile</persistency>
  <readable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_PCIE_IOP_PLL_GLOBAL_CONTROL0</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
  <id>PROC_PCIE_IOP_PLL_GLOBAL_CONTROL1</id>
  <description>
      creator: platform (MRW)
      consumer: proc_pcie_scominit
      notes:
        PCIe PLL Global Control Register 1.
	ENBGDOCPSRC/ENBGDOCAMP/REFVREG.
        Array index: IOP number (0:1)
  </description>
  <simpleType>
      <uint32_t></uint32_t>
      <array>2</array>
  </simpleType>
  <persistency>non-volatile</persistency>
  <readable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_PCIE_IOP_PLL_GLOBAL_CONTROL1</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
  <id>PROC_PCIE_IOP_PCS_CONTROL0</id>
  <description>
      creator: platform (MRW)
      consumer: proc_pcie_scominit
      notes:
        PCIe PCS Control Register 0.
        BITLOCKTIME/ADDDREMDELTA_810_B/STARTUPDELTA_810_B/ADDDREMDELTA_810_A/
        STARTUPDELTA_A/RXREJECTHANDLING/EQCOMLETERESPONSE.
        Array index: IOP number (0:1)
  </description>
  <simpleType>
      <uint32_t></uint32_t>
      <array>2</array>
  </simpleType>
  <persistency>non-volatile</persistency>
  <readable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_PCIE_IOP_PCS_CONTROL0</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
  <id>PROC_PCIE_IOP_PCS_CONTROL1</id>
  <description>
      creator: platform (MRW)
      consumer: proc_pcie_scominit
      notes:
        PCIe PCS Control Register 1.
	RXSIGDETSETTING/ADDDREMDELTA_128130_B/STARTUPDELTA_128130_B/
        ADDDREMDELTA_128130_A/STARTUPDELTA_128130_A.
        Array index: IOP number (0:1)
  </description>
  <simpleType>
      <uint32_t></uint32_t>
      <array>2</array>
  </simpleType>
  <persistency>non-volatile</persistency>
  <readable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_PCIE_IOP_PCS_CONTROL1</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
  <id>PROC_PCIE_IOP_TX_FIFO_OFFSET</id>
  <description>
      creator: platform (MRW)
      consumer: proc_pcie_scominit
      notes:
        PCIe TX FIFO Offset Register.
	G3OFFSET/G2OFFSET/G1OFFSET.
        First array index: IOP number (0:1)
        Second array index: Lane number (0:15)
  </description>
  <simpleType>
      <uint32_t></uint32_t>
      <array>2,16</array>
  </simpleType>
  <persistency>non-volatile</persistency>
  <readable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_PCIE_IOP_TX_FIFO_OFFSET</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
  <id>PROC_PCIE_IOP_TX_RCVRDETCNTL</id>
  <description>
      creator: platform (MRW)
      consumer: proc_pcie_scominit
      notes:
        PCIe TX Receiver Detect Control Register.
        VREFSEL/RCVRDETCNT/DETDRVC/PH1WAIT.
        First array index: IOP number (0:1)
        Second array index: Lane number (0:15)
  </description>
  <simpleType>
      <uint32_t></uint32_t>
      <array>2,16</array>
  </simpleType>
  <persistency>non-volatile</persistency>
  <readable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_PCIE_IOP_TX_RCVRDETCNTL</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
  <id>PROC_PCIE_IOP_TX_BWLOSS1</id>
  <description>
      creator: platform (MRW)
      consumer: proc_pcie_scominit
      notes:
        PCIe TX Bandwidth Loss Coefficient Register.
        GEN3BWCOEFF/GEN2BWCOEFF/GEN1BWCOEFF.
        First array index: IOP number (0:1)
        Second array index: Lane number (0:15)
  </description>
  <simpleType>
      <uint32_t></uint32_t>
      <array>2,16</array>
  </simpleType>
  <persistency>non-volatile</persistency>
  <readable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_PCIE_IOP_TX_BWLOSS1</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
  <id>PROC_PCIE_IOP_RX_VGA_CONTROL2</id>
  <description>
      creator: platform (MRW)
      consumer: proc_pcie_scominit
      notes:
        PCIe RX VGA Control Register 2.
        GAIN2/GAIN1.
        First array index: IOP number (0:1)
        Second array index: Lane number (0:15)
  </description>
  <simpleType>
      <uint32_t></uint32_t>
      <array>2,16</array>
  </simpleType>
  <persistency>non-volatile</persistency>
  <readable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_PCIE_IOP_RX_VGA_CONTROL2</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
  <id>PROC_PCIE_IOP_RX_PEAK</id>
  <description>
      creator: platform (MRW)
      consumer: proc_pcie_scominit
      notes:
        PCIe RX Receiver Peaking Value Register.
	PEAK1/PEAK2/PEAK3.
        First array index: IOP number (0:1)
        Second array index: Lane number (0:15)
  </description>
  <simpleType>
      <uint32_t></uint32_t>
      <array>2,16</array>
  </simpleType>
  <persistency>non-volatile</persistency>
  <readable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_PCIE_IOP_RX_PEAK</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
  <id>PROC_PCIE_IOP_RX_SDL</id>
  <description>
      creator: platform (MRW)
      consumer: proc_pcie_scominit
      notes:
        PCIe RX Signal Detect Level Register.
        SDLVL3/SDLVL2/SDLVL1.
        First array index: IOP number (0:1)
        Second array index: Lane number (0:15)
  </description>
  <simpleType>
      <uint32_t></uint32_t>
      <array>2,16</array>
  </simpleType>
  <persistency>non-volatile</persistency>
  <readable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_PCIE_IOP_RX_SDL</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
  <id>PROC_PCIE_IOP_ZCAL_CONTROL</id>
  <description>
      creator: platform (MRW)
      consumer: proc_pcie_scominit
      notes:
        PCIe ZCAL Control Register.
        CMPEVALDLY.
        Array index: IOP number (0:1)
  </description>
  <simpleType>
      <uint32_t></uint32_t>
      <array>2</array>
  </simpleType>
  <persistency>non-volatile</persistency>
  <readable/>
  <hwpfToHbAttrMap>
      <id>ATTR_PROC_PCIE_IOP_ZCAL_CONTROL</id>
      <macro>DIRECT</macro>
  </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>VMEM_ID</id>
    <description>Voltage Memory Rail Manager ID.  Currently HB only needs
        to configured the Vmem voltage rail manger during the IPL.  The ID
        is an arbitary value and needed as correlation token between HB and
        HWSV.  It will be generated by the genHwsvMrwXml.pl.
    </description>
    <simpleType>
        <uint16_t>
            <default>0</default>
        </uint16_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
</attribute>

<!--    Add attributes for sbe_config_update    -->

<attribute>
<id>NEST_FREQ_MHZ</id>
<description>
    Nest frequency in MHz
    Default should be 2000 MHz per Greg Still
</description>
    <simpleType>
        <uint32_t>
            <default>2000</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_NEST_FREQ_MHZ</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>CHIP_REGIONS_TO_ENABLE</id>
    <description>
      Called to get data to customize an IPL or SLW image with data indicating
        which chip regions the SBE should enable
      The data is in the format of the Module VPD PG (Partial Good Vector)
        keyword which is an 32 entry array of 16bit words, each word
        represents a chiplet and a defined set of bits within the word
        represents regions that are good. The 16 bit word is embedded within
        a 64bit word as described in the MVPD spec to reflect the clock
        controller region register layout:
          bits 0:3 are reserved -> set to 0
          bits 4:19 are the 16 bit data word
          bits 20:63 are reserved -> set to 0
      A platform needs to return data indicating the chip regions to enable,
      this may not be just the MVPD partial-good data, it may also not enable
      other chips and chiplets it has decided are non-functional - this is
      why it is not a standard MVPD query.
    </description>
    <simpleType>
        <uint64_t></uint64_t>
        <array>32</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_CHIP_REGIONS_TO_ENABLE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_NX_ENABLE</id>
    <description>
      NX partial good control
      creator: platform
      firmware notes:
        must track ATTR_CHIP_REGIONS_TO_ENABLE
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_NX_ENABLE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>BOOT_FREQ_MHZ</id>
    <description>
       Boot frequency in MHZ.  Default is 50% of nominal.
    </description>
    <simpleType>
        <uint32_t>
            <default>1500</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_BOOT_FREQ_MHZ</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_PCIE_ENABLE</id>
    <description>
      PCIE partial good control
      creator: platform
      firmware notes:
        must track ATTR_CHIP_REGIONS_TO_ENABLE
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_PCIE_ENABLE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EX_GARD_BITS</id>
    <description>
      Vector to communicate the guarded EX chiplets to SBE
			One Guard bit per EX chiplet, bit location aligned to chiplet ID
      (bit 16: EX00, bit 17: EX01, bit 18: EX02 ... bit 31: EX15)
			Guarded EX chiplets are marked by a '1'.
    </description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EX_GARD_BITS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_L3_ENABLE</id>
    <description>
      L3 partial good control
      creator: platform
      firmware notes:
        must track ATTR_CHIP_REGIONS_TO_ENABLE
    </description>
    <simpleType>
        <uint8_t></uint8_t>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_L3_ENABLE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
<id>PIB_I2C_REFCLOCK</id>
<description>
    i2c reference clock for the system.
    default is 0x15  per Andreas Koenig
</description>
    <simpleType>
        <uint32_t>
            <default>0x15</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PIB_I2C_REFCLOCK</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_ADU_UNTRUSTED_BAR_BASE_ADDR</id>
    <description>
      ADU Untrusted BAR base address (secure mode)
      creator: platform
      firmware notes:
        64-bit address representing BAR RA
    </description>
    <simpleType>
        <uint64_t></uint64_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_ADU_UNTRUSTED_BAR_BASE_ADDR</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
<id>PIB_I2C_NEST_PLL</id>
<description>
    i2c pll for the system
    default is 0x0177 per Andreas Koenig.
</description>
    <simpleType>
        <uint32_t>
            <default>0x0177</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PIB_I2C_NEST_PLL</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_ADU_UNTRUSTED_BAR_SIZE</id>
    <description>
      ADU Untrusted BAR size (secure mode)
      creator: platform
      firmware notes:
        mask applied to RA 14:43
    </description>
    <simpleType>
        <uint64_t></uint64_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_ADU_UNTRUSTED_BAR_SIZE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
<id>SBE_IMAGE_OFFSET</id>
<description>
    HostBoot image for SBE, offset to account for ECC
    Default is calculated from Hostboot base image of 0x3ece000
</description>
    <simpleType>
        <uint32_t>
            <default>0xffef0000</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_SBE_IMAGE_OFFSET</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_PSI_UNTRUSTED_BAR0_BASE_ADDR</id>
    <description>
      PSI Untrusted BAR0 base address (secure mode)
      creator: platform
      firmware notes:
        64-bit address representing BAR RA
    </description>
    <simpleType>
        <uint64_t></uint64_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_PSI_UNTRUSTED_BAR0_BASE_ADDR</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
<id>BOOT_VOLTAGE</id>
<description>
    Boot Voltage for system.
    0:2   -> port enables (3b - system design based:
        port 0 for non-redundant systems (100); all ports for non-redundant (111))
    3     -> Unused
     - current recommended default = 1000b
    4:7   -> phase enables (4b - defined by the system power design)
    - current recommended default = 0000b
    8:15  -> VDD voltage (1B in VRM-11 encoded form - 6.25mV increments)
        note: VPD is in 5mV increments
    - current recommended default   =   0x52
    16:23 -> VCS voltage (1B in VRM-11 encoded form - 6.25mV increments)
        note: VPD is in 5mV increments
    -current recommended default    =   0x4a
    24:31 -> Unused                 =   0x00
</description>
    <simpleType>
        <uint32_t>
            <default>0x80524a00</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_BOOT_VOLTAGE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_PSI_UNTRUSTED_BAR0_SIZE</id>
    <description>
      PSI Untrusted BAR0 size (secure mode)
      creator: platform
      firmware notes:
        mask applied to RA 14:43
    </description>
    <simpleType>
        <uint64_t></uint64_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_PSI_UNTRUSTED_BAR0_SIZE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_PSI_UNTRUSTED_BAR1_BASE_ADDR</id>
    <description>
      PSI Untrusted BAR1 base address (secure mode)
      creator: platform
      firmware notes:
        64-bit address representing BAR RA
    </description>
    <simpleType>
        <uint64_t></uint64_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_PSI_UNTRUSTED_BAR1_BASE_ADDR</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_PSI_UNTRUSTED_BAR1_SIZE</id>
    <description>
      PSI Untrusted BAR1 size (secure mode)
      creator: platform
      firmware notes:
        mask applied to RA 14:43
    </description>
    <simpleType>
        <uint64_t></uint64_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_PSI_UNTRUSTED_BAR1_SIZE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<!-- ===== Attributes supporting memory_attributes.xml HWPF Attributes ===== -->

<attribute>
    <id>MSS_VOLT</id>
    <description>DRAM Voltage. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_VOLT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_FREQ</id>
    <description>Frequency of memory channel in MHz. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_FREQ</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_DIMM_MFG_ID_CODE</id>
    <description>DIMM Manufacturer ID Code. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
        <array>2,2</array><!-- [drop][port] -->
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_DIMM_MFG_ID_CODE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DIMM_RANKS_CONFIGED</id>
    <description>DIMM ranks configured. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2,2</array><!-- [drop][port] -->
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DIMM_RANKS_CONFIGED</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_NUM_RANKS_PER_DIMM</id>
    <description>Number of ranks per DIMM. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2,2</array><!-- [drop][port] -->
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_NUM_RANKS_PER_DIMM</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DIMM_TYPE</id>
    <description>Type of DIMM. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DIMM_TYPE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_WIDTH</id>
    <description>DRAM Device Width. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_WIDTH</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_GEN</id>
    <description>DRAM Generation. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_GEN</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_PRIMARY_RANK_GROUP0</id>
    <description>Primary RankGroup0. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_PRIMARY_RANK_GROUP0</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_PRIMARY_RANK_GROUP1</id>
    <description>Primary RankGroup1. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_PRIMARY_RANK_GROUP1</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_PRIMARY_RANK_GROUP2</id>
    <description>Primary RankGroup2. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_PRIMARY_RANK_GROUP2</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_PRIMARY_RANK_GROUP3</id>
    <description>Primary RankGroup3. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_PRIMARY_RANK_GROUP3</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_SECONDARY_RANK_GROUP0</id>
    <description>Secondary RankGroup0. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_SECONDARY_RANK_GROUP0</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_SECONDARY_RANK_GROUP1</id>
    <description>Secondary RankGroup1. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_SECONDARY_RANK_GROUP1</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_SECONDARY_RANK_GROUP2</id>
    <description>Secondary RankGroup2. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_SECONDARY_RANK_GROUP2</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_SECONDARY_RANK_GROUP3</id>
    <description>Secondary RankGroup3. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_SECONDARY_RANK_GROUP3</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_TERTIARY_RANK_GROUP0</id>
    <description>Tertiary RankGroup0. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_TERTIARY_RANK_GROUP0</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_TERTIARY_RANK_GROUP1</id>
    <description>Tertiary RankGroup1. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_TERTIARY_RANK_GROUP1</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_TERTIARY_RANK_GROUP2</id>
    <description>Tertiary RankGroup2. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_TERTIARY_RANK_GROUP2</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_TERTIARY_RANK_GROUP3</id>
    <description>Tertiary RankGroup3. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_TERTIARY_RANK_GROUP3</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_QUATERNARY_RANK_GROUP0</id>
    <description>Quaternary RankGroup0. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_QUATERNARY_RANK_GROUP0</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_QUATERNARY_RANK_GROUP1</id>
    <description>Quaternary RankGroup1. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_QUATERNARY_RANK_GROUP1</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_QUATERNARY_RANK_GROUP2</id>
    <description>Quaternary RankGroup2. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_QUATERNARY_RANK_GROUP2</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_QUATERNARY_RANK_GROUP3</id>
    <description>Quaternary RankGroup3. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_QUATERNARY_RANK_GROUP3</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_ODT_RD</id>
    <description>Rank Read ODT. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2,2,4</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_ODT_RD</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_ODT_WR</id>
    <description>Rank Write ODT. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2,2,4</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_ODT_WR</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_RON</id>
    <description>DRAM Ron. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2,2</array><!-- [drop][port] -->
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_RON</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_RTT_NOM</id>
    <description>DRAM Rtt_Nom. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2,2,4</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_RTT_NOM</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_RTT_WR</id>
    <description>DRAM Rtt_WR. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2,2,4</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_RTT_WR</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_WR_VREF</id>
    <description>DRAM Write Vref. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_WR_VREF</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_WRDDR4_VREF</id>
    <description>DRAM Write Vref for DDR4. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_WRDDR4_VREF</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_WR_VREF_SCHMOO</id>
    <description>Enables for which VREF to use on the WR Schmoo. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_WR_VREF_SCHMOO</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_WRDDR4_VREF_SCHMOO</id>
    <description>Enables for which VREF to use on the WR Schmoo for DDR4. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_WRDDR4_VREF_SCHMOO</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_DRV_IMP_DQ_DQS</id>
    <description>Centaur DQ and DQS Drive Impedance. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_DRV_IMP_DQ_DQS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_DRV_IMP_ADDR</id>
    <description>Centaur Address Drive Impedance. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_DRV_IMP_ADDR</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_DRV_IMP_CNTL</id>
    <description>Centaur Control Drive Impedance. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array> 
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_DRV_IMP_CNTL</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_DRV_IMP_CLK</id>
    <description>Centaur Clock Drive Impedance. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_DRV_IMP_CLK</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_DRV_IMP_SPCKE</id>
    <description>Centaur Spare Clock Drive Impedance. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_DRV_IMP_SPCKE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_DRV_IMP_DQ_DQS_SCHMOO</id>
    <description>Enables for which impedance values can be used and tested in a timing test. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_DRV_IMP_DQ_DQS_SCHMOO</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_DRV_IMP_CLK_SCHMOO</id>
    <description>Enables for which impedance values can be used and tested in a timing test. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_DRV_IMP_CLK_SCHMOO</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_DRV_IMP_SPCKE_SCHMOO</id>
    <description>Enables for which impedance values can be used and tested in a timing test. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_DRV_IMP_SPCKE_SCHMOO</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_DRV_IMP_CNTL_SCHMOO</id>
    <description>Enables for which impedance values can be used and tested in a timing test. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_DRV_IMP_CNTL_SCHMOO</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_RCV_IMP_DQ_DQS</id>
    <description>Centaur DQ and DQS Receiver Impedance. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_RCV_IMP_DQ_DQS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_RCV_IMP_DQ_DQS_SCHMOO</id>
    <description>Enables for which impedance values can be used and tested in a timing test. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_RCV_IMP_DQ_DQS_SCHMOO</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_SLEW_RATE_DQ_DQS</id>
    <description>Centaur DQ and DQS Slew Rate. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_SLEW_RATE_DQ_DQS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_SLEW_RATE_ADDR</id>
    <description>Centaur Address Slew Rate. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_SLEW_RATE_ADDR</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_SLEW_RATE_CLK</id>
    <description>Centaur Clock Slew Rate. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_SLEW_RATE_CLK</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_SLEW_RATE_SPCKE</id>
    <description>Centaur Spare Clock Slew Rate. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_SLEW_RATE_SPCKE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_SLEW_RATE_CNTL</id>
    <description>Centaur Control Slew Rate. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_SLEW_RATE_CNTL</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_SLEW_RATE_DQ_DQS_SCHMOO</id>
    <description>Slew Rates that can be selected during timing adjustments. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_SLEW_RATE_DQ_DQS_SCHMOO</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_SLEW_RATE_CLK_SCHMOO</id>
    <description>Slew Rates that can be selected during timing adjustments. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_SLEW_RATE_CLK_SCHMOO</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_SLEW_RATE_SPCKE_SCHMOO</id>
    <description>Slew Rates that can be selected during timing adjustments. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_SLEW_RATE_SPCKE_SCHMOO</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_SLEW_RATE_ADDR_SCHMOO</id>
    <description>Slew Rates that can be selected during timing adjustments. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_SLEW_RATE_ADDR_SCHMOO</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_SLEW_RATE_CNTL_SCHMOO</id>
    <description>Slew Rates that can be selected during timing adjustments. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_SLEW_RATE_CNTL_SCHMOO</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_RD_VREF</id>
    <description>Centaur Read Vref. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_RD_VREF</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_RD_VREF_SCHMOO</id>
    <description>Enables for which VREF value can be used in timing adjustments. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_RD_VREF_SCHMOO</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DIMM_SIZE</id>
    <description>DIMM Size. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2,2</array><!-- [drop][port] -->
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DIMM_SIZE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_BANKS</id>
    <description>Number of DRAM banks. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_BANKS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_ROWS</id>
    <description>Number of DRAM rows. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_ROWS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_COLS</id>
    <description>Number of DRAM columns. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_COLS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_DENSITY</id>
    <description>DRAM Density. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_DENSITY</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_TRCD</id>
    <description>DRAM RAS to CAS Delay. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_TRCD</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_TRRD</id>
    <description>DRAM Row ACT to Row ACT Delay. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_TRRD</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_TRP</id>
    <description>DRAM Row Precharge Delay. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_TRP</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_TRAS</id>
    <description>DRAM ACT to Precharge Delay. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_TRAS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_TRC</id>
    <description>DRAM ACT to ACT/Refresh Delay. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_TRC</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_TRFI</id>
    <description>Refresh Interval. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_TRFI</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_TRFC</id>
    <description>DRAM Refresh Recovery Delay. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_TRFC</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_TWTR</id>
    <description>DRAM Internal Write to Read Delay. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_TWTR</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_TRTP</id>
    <description>DRAM Internal Read to Precharge Delay. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_TRTP</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_TFAW</id>
    <description>DRAM Four ACT Window Delay. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_TFAW</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_BL</id>
    <description>DRAM Burst Length. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_BL</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_CL</id>
    <description>DRAM CAS Latency. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_CL</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_AL</id>
    <description>DRAM Additive Latency. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_AL</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_CWL</id>
    <description>DRAM CAS Write Latency. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_CWL</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_RBT</id>
    <description>DRAM Read Burst Type. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_RBT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_TM</id>
    <description>DRAM Test Mode. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_TM</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_DLL_RESET</id>
    <description>DRAM DLL Reset. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_DLL_RESET</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_WR</id>
    <description>DRAM Write Recovery. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_WR</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_DLL_PPD</id>
    <description>DRAM DLL Precharge PD. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_DLL_PPD</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_DLL_ENABLE</id>
    <description>DRAM DLL Enable. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_DLL_ENABLE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_TDQS</id>
    <description>DRAM TDQS. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_TDQS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_WR_LVL_ENABLE</id>
    <description>DRAM Write Level Enable. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_WR_LVL_ENABLE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_OUTPUT_BUFFER</id>
    <description>DRAM output buffer. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_OUTPUT_BUFFER</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_PASR</id>
    <description>DRAM Partial Array Self-Refresh. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_PASR</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_ASR</id>
    <description>DRAM Auto Self-Refresh. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_ASR</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DRAM_SRT</id>
    <description>DRAM Self-Refresh Temperature Range. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DRAM_SRT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_MPR_LOC</id>
    <description>Multi Purpose Register Location. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_MPR_LOC</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_MPR_MODE</id>
    <description>Multi Purpose Register Mode. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_MPR_MODE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DIMM_RCD_CNTL_WORD_0_15</id>
    <description>DIMM RCD Control Word. Initialized and used by HWPs.</description>
    <simpleType>
        <uint64_t>
            <default>0</default>
        </uint64_t>
        <array>2,2</array><!-- [drop][port] -->
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DIMM_RCD_CNTL_WORD_0_15</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DIMM_RCD_IBT</id>
    <description>DIMM RCD IBT. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
        <array>2,2</array><!-- [drop][port] -->
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DIMM_RCD_IBT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DIMM_RCD_MIRROR_MODE</id>
    <description>DIMM RCD Mirror mode. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2,2</array><!-- [drop][port] -->
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DIMM_RCD_MIRROR_MODE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_SCHMOO_MODE</id>
    <description>Specifies the schmoo mode to use during draminit_train_adv. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_SCHMOO_MODE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_SCHMOO_ADDR_MODE</id>
    <description>Specifies the schmoo mode to use during draminit_train_adv. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_SCHMOO_ADDR_MODE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_SCHMOO_TEST_VALID</id>
    <description>Specifies the schmoo test to run during draminit_train_adv. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_SCHMOO_TEST_VALID</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_SCHMOO_PARAM_VALID</id>
    <description>Specifies the schmoo parameters to use during draminit_train_adv. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_SCHMOO_PARAM_VALID</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_SCHMOO_WR_EYE_MIN_MARGIN</id>
    <description>Specifies the schmoo minimum margin to use during draminit_train_adv. Used to signal possible SI issues in memory.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_SCHMOO_WR_EYE_MIN_MARGIN</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_SCHMOO_RD_EYE_MIN_MARGIN</id>
    <description>Specifies the schmoo minimum margin to use during draminit_train_adv. Used to signal possible SI issues in memory.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_SCHMOO_RD_EYE_MIN_MARGIN</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_SCHMOO_DQS_CLK_MIN_MARGIN</id>
    <description>Specifies the schmoo minimum margin to use during draminit_train_adv. Used to signal possible SI issues in memory.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_SCHMOO_DQS_CLK_MIN_MARGIN</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_SCHMOO_RD_GATE_MIN_MARGIN</id>
    <description>Specifies the schmoo minimum margin to use during draminit_train_adv. Used to signal possible SI issues in memory.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_SCHMOO_RD_GATE_MIN_MARGIN</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_SCHMOO_ADDR_CMD_MIN_MARGIN</id>
    <description>Specifies the schmoo minimum margin to use during draminit_train_adv. Used to signal possible SI issues in memory.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_SCHMOO_ADDR_CMD_MIN_MARGIN</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_MEMCAL_INTERVAL</id>
    <description>Specifies the memcal interval in clocks. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_MEMCAL_INTERVAL</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_ZQCAL_INTERVAL</id>
    <description>Specifies the zqcal interval in clocks. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_ZQCAL_INTERVAL</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_IBM_TYPE</id>
    <description>Specifies the memory topology type. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2,2</array><!-- [drop][port] -->
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_IBM_TYPE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_NUM_DROPS_PER_PORT</id>
    <description>Specifies the number of DIMM dimensions that are valid per port. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_NUM_DROPS_PER_PORT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_STACK_TYPE</id>
    <description>Specifies the DRAM package type. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2,2</array><!-- [drop][port] -->
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_STACK_TYPE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_NUM_MASTER_RANKS_PER_DIMM</id>
    <description>Specifies the number of master ranks per DIMM. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2,2</array><!-- [drop][port] -->
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_NUM_MASTER_RANKS_PER_DIMM</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_NUM_PACKAGES_PER_RANK</id>
    <description>Specifies the number of DRAM packages per rank. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2,2</array><!-- [drop][port] -->
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_NUM_PACKAGES_PER_RANK</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_NUM_DIES_PER_PACKAGE</id>
    <description>Specifies the number of DRAM dies per package. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2,2</array><!-- [drop][port] -->
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_NUM_DIES_PER_PACKAGE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_MEM_THROTTLE_NUMERATOR_PER_MBA</id>
    <description>DIMM throttle numerator. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_MEM_THROTTLE_NUMERATOR_PER_MBA</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_MEM_THROTTLE_DENOMINATOR</id>
    <description>DIMM throttle denominator. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_MEM_THROTTLE_DENOMINATOR</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_MEM_THROTTLE_NUMERATOR_PER_CHIP</id>
    <description>This is the throttle numerator setting for cfg_nm_n_per_chip. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_MEM_THROTTLE_NUMERATOR_PER_CHIP</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_MEM_WATT_TARGET</id>
    <description>Channel total memory watts. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_MEM_WATT_TARGET</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_POWER_SLOPE</id>
    <description>DIMM Power slope value. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
        <array>2,2</array><!-- [drop][port] -->
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_POWER_SLOPE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_POWER_SLOPE2</id>
    <description>DIMM Power slope value. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
        <array>2,2</array><!-- [drop][port] -->
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_POWER_SLOPE2</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_POWER_INT</id>
    <description>DIMM Power intercept value. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
        <array>2,2</array><!-- [drop][port] -->
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_POWER_INT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_POWER_INT2</id>
    <description>DIMM Power intercept value. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
        <array>2,2</array><!-- [drop][port] -->
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_POWER_INT2</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_DIMM_MAXBANDWIDTH_GBS</id>
    <description>DIMM Max Bandwidth in GBs. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
        <array>2,2</array><!-- [drop][port] -->
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_DIMM_MAXBANDWIDTH_GBS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_DIMM_MAXBANDWIDTH_MRS</id>
    <description>DIMM Max Bandwidth in MRs. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
        <array>2,2</array><!-- [drop][port] -->
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_DIMM_MAXBANDWIDTH_MRS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_CHANNEL_MAXBANDWIDTH_GBS</id>
    <description>Channel Max Bandwidth in GBs. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_CHANNEL_MAXBANDWIDTH_GBS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_CHANNEL_PAIR_MAXBANDWIDTH_GBS</id>
    <description>Channel Pair Max Bandwidth in GBs. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_CHANNEL_PAIR_MAXBANDWIDTH_GBS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_CHANNEL_MAXBANDWIDTH_MRS</id>
    <description>Channel Max Bandwidth MRs. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_CHANNEL_MAXBANDWIDTH_MRS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_CHANNEL_PAIR_MAXBANDWIDTH_MRS</id>
    <description>Channel Pair Max Bandwidth MRs. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_CHANNEL_PAIR_MAXBANDWIDTH_MRS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_DIMM_MAXPOWER</id>
    <description>DIMM Max Power output. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
        <array>2,2</array><!-- [drop][port] -->
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_DIMM_MAXPOWER</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_CHANNEL_MAXPOWER</id>
    <description>Channel Max Power output. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_CHANNEL_MAXPOWER</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_CHANNEL_PAIR_MAXPOWER</id>
    <description>Channel Pair Max Power output. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_CHANNEL_PAIR_MAXPOWER</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_RUNTIME_MEM_THROTTLE_NUMERATOR_PER_MBA</id>
    <description>Runtime throttle numerator setting for cfg_nm_n_per_mba. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_RUNTIME_MEM_THROTTLE_NUMERATOR_PER_MBA</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_RUNTIME_MEM_THROTTLE_DENOMINATOR</id>
    <description>Runtime throttle denominator setting for cfg_nm_m. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_RUNTIME_MEM_THROTTLE_DENOMINATOR</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_RUNTIME_MEM_THROTTLE_NUMERATOR_PER_CHIP</id>
    <description>Runtime throttle numerator setting for cfg_nm_n_per_chip. Initialized and used by HWPs.</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_RUNTIME_MEM_THROTTLE_NUMERATOR_PER_CHIP</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_INTERLEAVE_ENABLE</id>
    <description>Used in the setting of groups.  It is a bit vector.  If the value  BITWISE_AND  1 = 1 then groups of 1 are enabled with special checkerboard modes needed, if the value  BITWISE_AND  2 = 2, then groups of 2 are possible; if value  BITWISE_AND  4, the groups of 4 are possible; if value  BITWISE_AND  8, the groups of 8 are possible.  If no groups can formed according to this input, then an error will be thrown.</description>
    <simpleType>
        <uint8_t>
            <default>0xff</default>
        </uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_INTERLEAVE_ENABLE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_MCA_HASH_MODE</id>
    <description>sets up the centaur hash mode policy. Mode values are 0, 1, and 2.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_MCA_HASH_MODE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_MBA_ADDR_INTERLEAVE_BIT</id>
    <description>sets the Centaur address bits used to interleave addresses between MBA01 and MBA23. valid values are 23 through 32.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_MBA_ADDR_INTERLEAVE_BIT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_MBA_CACHELINE_INTERLEAVE_MODE</id>
    <description>centaur interleave mode. 1 = 256-BIT, 0 = 128-BIT.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_MBA_CACHELINE_INTERLEAVE_MODE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_CACHE_ENABLE</id>
    <description>
        Specifies if a Memory Buffer chip L4 cache is enabled or disabled
        For good memory buffer chips, L4 is enabled
        Firmware can set to disabled for a particular chip if the cache is
          not functional
        1 = enabled, 0 = disabled.
    </description>
    <simpleType>
        <uint8_t>
            <default>1</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_CACHE_ENABLE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_PREFETCH_ENABLE</id>
    <description>Prefteching enable. 1 = enable, 0 = disable.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_PREFETCH_ENABLE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_CLEANER_ENABLE</id>
    <description>L4 cleaner enable. 1 = enable, 0 = disable.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_CLEANER_ENABLE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_LAB_OVERRIDE_FOR_MEM_PLL</id>
    <description>override the default Centaur MEM PLL settings with user-specified scan chain data. 1 = ON, 0 = OFF.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_LAB_OVERRIDE_FOR_MEM_PLL</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_MEM_MC_IN_GROUP</id>
    <description>A 8 bit vector that would be a designation of which MC are involved in the group. Initialized and used by HWPs.</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>8</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_MEM_MC_IN_GROUP</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_MCS_GROUP_32</id>
    <description>Data Structure from eff grouping to setup bars to help determine different groups
   Non- Mirroring [0-7] 0 -- MCS size //1-- No of MCS/group //2-- Total group size //3 -- Base address// 4-11 - MCS ID number// 12 --Alter.Bar //13 - A.Group Size // 14 - A.Base address
 //  Mirroring      [8-15] 0 -- MCS size //1-- No of MCS/group //2-- Total group size //3 -- Base address// 4-11 - MCS ID number// 12 --Alter.Bar //13 - A.Group Size // 14 - A.Base address
Measured in GB</description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
        <array>16,16</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_MCS_GROUP_32</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_EFF_DIMM_FUNCTIONAL_VECTOR</id>
    <description>A bit vector (per Dean's request) specifying if a DIMM is functional.  DIMM attributes, such as SIZE, are qualified by this bit vector.  The attribute ANDed 0x80 means port 0, DIMM 0 is functional, 0x40 means port 0, DIMM 1 is functional.  0x08 means port 1, DIMM 0 is functional and 0x04 means port 1 DIMM 1 is functional.  A fully populated system would have the value of 0xCC. Used in various locations and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value. creator: mss_eff_cnfg consumer: various firmware notes: none
This factors in functionality</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_EFF_DIMM_FUNCTIONAL_VECTOR</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_CAL_STEP_ENABLE</id>
    <description>A bit vector denoting valid cal steps to run during dram_init_train. [0] EXT_ZQCAL
[1] WR_LEVEL
[2] DQS_ALIGN
[3] RDCLK_ALIGN
[4] READ_CTR
[5] WRITE_CTR
[6] COARSE_WR
[7] COARSE_RD
bits6:7  will be consumed together to form COARSE_LVL. </description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_CAL_STEP_ENABLE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_MEM_IPL_COMPLETE</id>
    <description>A numerical number indicating if the memory procedures are complete.  written by mss_setup_bars when the bars are now functional in the processor.  </description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_MEM_IPL_COMPLETE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_SLEW_RATE_DATA</id>
    <description>The 4 bit result of running the slew calibration algorithm at various rates and impedances</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2, 4, 4</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_SLEW_RATE_DATA</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_SLEW_RATE_ADR</id>
    <description>The 4 bit result of running the slew calibration algorithm at various rates and impedances</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2, 4, 4</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_SLEW_RATE_ADR</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_ECID</id>
    <description>Bits 0 to 63 of the ECID in array entry 0 and bits 64 to 127 in ECID array entry 1
Created from running the mss_get_cen_ecid.C</description>
    <simpleType>
        <uint64_t>
            <default>0</default>
        </uint64_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_ECID</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_ALLOW_SINGLE_PORT</id>
    <description>When this value is true, then mss_eff config will allow a single port to have one dimm and will allow ports to have different sizes.  Used in eff_config</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_ALLOW_SINGLE_PORT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<!-- TODO RTC 59048. These phase rotator attributes need to come from CDIMM VPD. For now
     they are setup by the mss_eff_config_termination HWP -->

<attribute>
    <id>EFF_CEN_PHASE_ROT_M0_CLK_P0</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M0_CLK_P0</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M0_CLK_P1</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M0_CLK_P1</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M1_CLK_P0</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M1_CLK_P0</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M1_CLK_P1</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M1_CLK_P1</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M_CMD_A0</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M_CMD_A0</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M_CMD_A1</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M_CMD_A1</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M_CMD_A2</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M_CMD_A2</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M_CMD_A3</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M_CMD_A3</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M_CMD_A4</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M_CMD_A4</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M_CMD_A5</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M_CMD_A5</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M_CMD_A6</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M_CMD_A6</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M_CMD_A7</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M_CMD_A7</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M_CMD_A8</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M_CMD_A8</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M_CMD_A9</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M_CMD_A9</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M_CMD_A10</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M_CMD_A10</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M_CMD_A11</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M_CMD_A11</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M_CMD_A12</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M_CMD_A12</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M_CMD_A13</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M_CMD_A13</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M_CMD_A14</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M_CMD_A14</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M_CMD_A15</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M_CMD_A15</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M_CMD_BA0</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M_CMD_BA0</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M_CMD_BA1</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M_CMD_BA1</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M_CMD_BA2</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M_CMD_BA2</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M_CMD_CASN</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M_CMD_CASN</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M_CMD_RASN</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M_CMD_RASN</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M_CMD_WEN</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M_CMD_WEN</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M_PAR</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M_PAR</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M_ACTN</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M_ACTN</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M0_CNTL_CKE0</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M0_CNTL_CKE0</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M0_CNTL_CKE1</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M0_CNTL_CKE1</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M0_CNTL_CKE2</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M0_CNTL_CKE2</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M0_CNTL_CKE3</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M0_CNTL_CKE3</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M0_CNTL_CSN0</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M0_CNTL_CSN0</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M0_CNTL_CSN1</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M0_CNTL_CSN1</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M0_CNTL_CSN2</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M0_CNTL_CSN2</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M0_CNTL_CSN3</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M0_CNTL_CSN3</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M0_CNTL_ODT0</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M0_CNTL_ODT0</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M0_CNTL_ODT1</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M0_CNTL_ODT1</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M1_CNTL_CKE0</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M1_CNTL_CKE0</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M1_CNTL_CKE1</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M1_CNTL_CKE1</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M1_CNTL_CKE2</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M1_CNTL_CKE2</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M1_CNTL_CKE3</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M1_CNTL_CKE3</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M1_CNTL_CSN0</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M1_CNTL_CSN0</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M1_CNTL_CSN1</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M1_CNTL_CSN1</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M1_CNTL_CSN2</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M1_CNTL_CSN2</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M1_CNTL_CSN3</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M1_CNTL_CSN3</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M1_CNTL_ODT0</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M1_CNTL_ODT0</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CEN_PHASE_ROT_M1_CNTL_ODT1</id>
    <description>Phase rotator value that comes from termination on the CDIMM VPD</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CEN_PHASE_ROT_M1_CNTL_ODT1</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_DQS_SWIZZLE_TYPE</id>
    <description>DQS Swizzle type is set by the platform to describe what kind of DQS connection is being used for register acceses. Type 0 is normal, type 1 is for systems with wiring like glacier 1.  Additional types maybe defined if new boards have even different DQS swizzle features</description>
    <simpleType>
        <uint8_t><default>0</default></uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_DQS_SWIZZLE_TYPE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>MSS_MCS_GROUP</id>
    <description>Data Structure from eff grouping to setup bars to help determine different groups
   Non- Mirroring [0-7] 0 -- MCS size //1-- No of MCS/group //2-- Total group size //3 -- Base address// 4-11 - MCS ID number// 12 --Alter.Bar //13 - A.Group Size // 14 - A.Base address
 //  Mirroring      [8-15] 0 -- MCS size //1-- No of MCS/group //2-- Total group size //3 -- Base address// 4-11 - MCS ID number// 12 --Alter.Bar //13 - A.Group Size // 14 - A.Base address
Measured in GB</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>16,16</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_MSS_MCS_GROUP</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_CKE_MAP</id>
    <description>Rank to CKE map. Used in various locations and is computed in mss_eff_cnfg_cke_map. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.   creator: mss_eff_cnfg_cke_map consumer: various firmware notes: none</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2,2,4</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_CKE_MAP</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_SPCKE_MAP</id>
    <description>Rank to Spare CKE map. Used in various locations and is computed in mss_eff_cnfg_cke_map. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.   creator: mss_eff_cnfg_cke_map consumer: various firmware notes: none</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2,2,4</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_SPCKE_MAP</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>EFF_DIMM_SPARE</id>
    <description>Spare DRAM availability. Used in various locations and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.   creator: mss_eff_cnfg consumer: various firmware notes: load from spd</description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2,2,4</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EFF_DIMM_SPARE</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<!-- ===== End Attributes supporting memory_attributes.xml HWPF Attributes ===== -->

<attribute>
    <id>EI_BUS_TX_LANE_INVERT</id>
    <description>
      This attribute represents the polarity of a differential wire pair on the DMI and A buses.
      creator: platform (generated based on MRW data)
      See defintion in common_attributes.xml for more information.
    </description>
    <simpleType>
      <uint32_t>
        <default>0</default>
      </uint32_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_EI_BUS_TX_LANE_INVERT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_PERV_BNDY_PLL_DATA</id>
    <description>Ring image for perv_bndy_pll ring containing filter plls and xb_pll,nest_pll
      creator: platform
      firmware notes:
    </description>
    <simpleType>
        <uint8_t>
            <default>
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x20,0x01,0xA0,0x00,0x70,0x00,0x80,0x45,0x45,
                0x90,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x01,
                0xA0,0x00,0x70,0x00,0x80,0x45,0x45,0x90,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x20,0x00,0x60,
                0x00,0x80,0x51,0xA5,0x90,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x80,0x00,0x80,0x01,0xC0,0x00,0x01,
                0x4B,0x07,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
            </default>
        </uint8_t>
        <array>128</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_PERV_BNDY_PLL_DATA</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_PB_BNDY_DMIPLL_DATA</id>
    <description>Ring image for pb_bndy_dmipll ring
      creator: platform
      firmware notes:
    </description>
    <simpleType>
        <uint8_t>
            <default>
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x3f,0x44,0x11,0x00,0x00,0x00,0x7e,0x88,0x22,0x00,
                0x00,0x00,0xfd,0x10,0x44,0x00,0x00,0x01,0xfa,0x20,
                0x88,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x40,0x00,0x40,0x00,0xe0,0x00,0x00,0xa5,0x83,0xa0,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00
            </default>
        </uint8_t>
        <array>192</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_PB_BNDY_DMIPLL_DATA</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_PB_BNDY_DMIPLL_FOR_DCCAL_DATA</id>
    <description>Ring image for pb_bndy_dmipll ring for DC cal
      creator: platform
      firmware notes:
    </description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>192</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_PB_BNDY_DMIPLL_FOR_DCCAL_DATA</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_AB_BNDY_PLL_DATA</id>
    <description>Ring image for ab_bndy_pll ring
      creator: platform
      firmware notes:
    </description>
    <simpleType>
        <uint8_t>
            <default>
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3f,0x44,
                0x11,0x00,0x00,0x00,0x7e,0x88,0x22,0x00,0x00,0x00,
                0xfd,0x10,0x44,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x10,0x00,0x10,0x00,0x38,0x00,0x00,0x2b,
                0xa0,0xe8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
            </default>
        </uint8_t>
        <array>80</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_AB_BNDY_PLL_DATA</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_AB_BNDY_PLL_FOR_DCCAL_DATA</id>
    <description>Ring image for ab_bndy_pll ring
      creator: platform
      firmware notes:
    </description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>80</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_AB_BNDY_PLL_FOR_DCCAL_DATA</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_PCI_BNDY_PLL_DATA</id>
    <description>Ring image for pci_bndy_pll ring
      creator: platform
      firmware notes:
    </description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>80</array>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_PCI_BNDY_PLL_DATA</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_PERV_BNDY_PLL_LENGTH</id>
    <description>Length of data in ring image for perv_bndy_pll ring containing filter plls and xb_pll,nest_pll
      creator: platform
      firmware notes:
    </description>
    <simpleType>
        <uint32_t>
            <default>0x0000035d</default>
        </uint32_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_PERV_BNDY_PLL_LENGTH</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_PB_BNDY_DMIPLL_LENGTH</id>
    <description>Length of data in ring image for pb_bndy_dmipll ring
      creator: platform
      firmware notes:
    </description>
    <simpleType>
        <uint32_t>
            <default>0x4d2</default>
        </uint32_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_PB_BNDY_DMIPLL_LENGTH</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_AB_BNDY_PLL_LENGTH</id>
    <description>Length of data in ring image for ab_bndy_pll ring
      creator: platform
      firmware notes:
    </description>
    <simpleType>
        <uint32_t>
            <default>0x00000218</default>
        </uint32_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_AB_BNDY_PLL_LENGTH</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_PCI_BNDY_PLL_LENGTH</id>
    <description>Length of data in ring image for pci_bndy_pll ring
      creator: platform
      firmware notes:
    </description>
    <simpleType>
        <uint32_t>
            <default>80</default>
        </uint32_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_PCI_BNDY_PLL_LENGTH</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_PERV_BNDY_PLL_FLUSH</id>
    <description>Ring flush image for perv_bndy_pll ring containing filter plls and xb_pll,nest_pll
      creator: platform
      firmware notes:
    </description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>128</array>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_PERV_BNDY_PLL_FLUSH</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_PB_BNDY_DMIPLL_FLUSH</id>
    <description>Ring flush image for pb_bndy_dmipll ring
      creator: platform
      firmware notes:
    </description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>192</array>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_PB_BNDY_DMIPLL_FLUSH</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_AB_BNDY_PLL_FLUSH</id>
    <description>Ring flush image for ab_bndy_pll ring
      creator: platform
      firmware notes:
    </description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>80</array>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_AB_BNDY_PLL_FLUSH</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_PCI_BNDY_PLL_FLUSH</id>
    <description>Ring flush image for pci_bndy_pll ring
      creator: platform
      firmware notes:
    </description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>80</array>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_PCI_BNDY_PLL_FLUSH</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_PERV_BNDY_PLL_CHIPLET_ID</id>
    <description>Chiplet ID for ring image for perv_bndy_pll ring containing filter plls and xb_pll,nest_pll
      creator: platform
      firmware notes:
    </description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_PERV_BNDY_PLL_CHIPLET_ID</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_PB_BNDY_DMIPLL_CHIPLET_ID</id>
    <description>Chiplet ID for ring image for pb_bndy_dmipll ring
      creator: platform
      firmware notes:
    </description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_PB_BNDY_DMIPLL_CHIPLET_ID</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_AB_BNDY_PLL_CHIPLET_ID</id>
    <description>Chiplet ID for ring image for ab_bndy_pll ring
      creator: platform
      firmware notes:
    </description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_AB_BNDY_PLL_CHIPLET_ID</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_PCI_BNDY_PLL_CHIPLET_ID</id>
    <description>Chiplet ID for ring image for pci_bndy_pll ring
      creator: platform
      firmware notes:
    </description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_PCI_BNDY_PLL_CHIPLET_ID</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_PERV_BNDY_PLL_SCAN_SELECT</id>
    <description>Scan select for ring image for perv_bndy_pll ring containing filter plls and xb_pll,nest_pll
      creator: platform
      firmware notes:
    </description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_PERV_BNDY_PLL_SCAN_SELECT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_PB_BNDY_DMIPLL_SCAN_SELECT</id>
    <description>Scan select for ring image for pb_bndy_dmipll ring
      creator: platform
      firmware notes:
    </description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_PB_BNDY_DMIPLL_SCAN_SELECT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_AB_BNDY_PLL_SCAN_SELECT</id>
    <description>Scan select for ring image for ab_bndy_pll ring
      creator: platform
      firmware notes:
    </description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_AB_BNDY_PLL_SCAN_SELECT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PROC_PCI_BNDY_PLL_SCAN_SELECT</id>
    <description>Scan select for ring image for pci_bndy_pll ring
      creator: platform
      firmware notes:
    </description>
    <simpleType>
        <uint32_t>
            <default>0</default>
        </uint32_t>
    </simpleType>
    <persistency>volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PROC_PCI_BNDY_PLL_SCAN_SELECT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<!-- ===== Supporting poreve_memory_attributes.xml ===== -->

<attribute>
    <id>SBE_SEEPROM_I2C_ADDRESS_BYTES</id>
    <description>
      The number of address bytes required to address the SEEPROM memory
      device that contains SBE IPL code.  This will vary by device based on
      the device capacity, and must be either 1, 2, 3 or 4.
    </description>
    <simpleType>
        <uint8_t>
            <default>4</default>
        </uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_SBE_SEEPROM_I2C_ADDRESS_BYTES</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>SBE_SEEPROM_I2C_DEVICE_ADDRESS</id>
    <description>
      A 2-element array containing the I2C device address of the primary (0)
      and secondary (1) SEEPROM devices containing SBE IPL code.
      Provided by the Machine Readable Workbook
    </description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_SBE_SEEPROM_I2C_DEVICE_ADDRESS</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>SBE_SEEPROM_I2C_PORT</id>
    <description>
      A 2-element array containing the I2C controller port number of the
      primary (0) and secondary (1) SEEPROM devices containing SBE IPL code.
      Provided by the Machine Readable Workbook
    </description>
    <simpleType>
        <uint8_t>
            <default>0</default>
        </uint8_t>
        <array>2</array>
    </simpleType>
    <persistency>volatile-zeroed</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_SBE_SEEPROM_I2C_PORT</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<attribute>
    <id>PNOR_I2C_ADDRESS_BYTES</id>
    <description>
      The number of address bytes required to address the PNOR memory device
      via the pseudo-I2C (LPC, ECCAX) controller.  This will vary by device
      based on the device capacity, and must be either 0, 1, 2, 3 or 4.

      This attribute will be set to 0 for chips with no PNOR attached
      (PoreVe will never run on these chips).

      Provided by the Machine Readable Workbook
    </description>
    <simpleType>
        <uint8_t>
            <default>4</default>
        </uint8_t>
    </simpleType>
    <persistency>non-volatile</persistency>
    <readable/>
    <writeable/>
    <hwpfToHbAttrMap>
        <id>ATTR_PNOR_I2C_ADDRESS_BYTES</id>
        <macro>DIRECT</macro>
    </hwpfToHbAttrMap>
</attribute>

<!-- ===== End supporting poreve_memory_attributes.xml ===== -->


</attributes>
