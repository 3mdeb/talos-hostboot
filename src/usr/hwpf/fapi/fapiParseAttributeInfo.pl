#!/usr/bin/perl

#
# Usage:
# fapiParseAttributeInfo.pl <filename1> <filename2> .... <filenameN>

use strict;

my $numArgs = $#ARGV + 1;
#print $numArgs, "\n";

if ($numArgs < 1)
{
    print ("Usage: fapiParseAttributeInfo.pl <filename1> <filename2> .... <filenameN>\n");
    print ("  This perl script will parse attribute XML files,\n");
    print ("  pull out the attribute IDs/types and create a header file\n");
    print ("  fapiAttributeIds.H containing the information.\n");
    exit(1);
}



# use module
use XML::Simple;
#use Data::Dumper;

#open output file for writing
open(OUTFILE, ">fapiAttributeIds.H");
print OUTFILE "// fapiAttributeIds.H\n";
print OUTFILE "// This file is generated by perl script fapiParseAttributeInfo.pl\n\n";
print OUTFILE "#ifndef FAPIATTRIBUTEIDS_H_\n";
print OUTFILE "#define FAPIATTRIBUTEIDS_H_\n\n";
print OUTFILE "namespace fapi\n";
print OUTFILE "{\n\n";
print OUTFILE "\/**\n";
print OUTFILE " * \@brief Enumeration of attribute IDs\n";
print OUTFILE " *\/\n";
print OUTFILE "enum AttributeId\n";
print OUTFILE "{\n";

# create object
my $xml = new XML::Simple (KeyAttr=>[]);

#for each Hwp Attribute XML file
my $infile;
foreach $infile(@ARGV)
{
    #print filename
    #print $ifile, "\n\n";

    # read XML file
    my $attributes = $xml->XMLin($infile);

    # print output
    #print Dumper($attributes);
    #print "\n";

    # print attribute id to file
    my $attr;
    foreach $attr (@{$attributes->{attribute}})
    {
        if ($attr->{id})
        {
            print OUTFILE "    ", $attr->{id}, ",\n";
        }
        else
        {
            print ("fapiParseAttributeInfo.pl ERROR. Attribute ID missing\n");
            exit(1);
        }
    };
}

print OUTFILE "};\n\n";

print OUTFILE "\/**\n";
print OUTFILE " * \@brief Typedefs for the attribute value types\n";
print OUTFILE " *\/\n";

#for each Hwp Attribute XML file
foreach $infile(@ARGV)
{
    # read XML file
    my $attributes = $xml->XMLin($infile);

    # print attribute id to file
    my $attr;
    foreach $attr (@{$attributes->{attribute}})
    {
        print OUTFILE "typedef ";

        if ($attr->{valueType} eq 'uint8')
        {
            if ($attr->{array})
            {
                print OUTFILE "uint8_t * ";
            }
            else
            {
                print OUTFILE "uint8_t ";
            }
        }
        elsif ($attr->{valueType} eq 'uint32')
        {
            if ($attr->{array})
            {
                print OUTFILE "uint32_t * ";
            }
            else
            {
                print OUTFILE "uint32_t ";
            }
        }
        elsif ($attr->{valueType} eq 'uint64')
        {
            if ($attr->{array})
            {
                print OUTFILE "uint64_t * ";
            }
            else
            {
                print OUTFILE "uint64_t ";
            }
        }
        elsif ($attr->{valueType} eq 'string')
        {
            print OUTFILE "char * ";
        }
        else
        {
            print ("fapiParseAttributeInfo.pl ERROR. valueType not recognized: ");
            print $attr->{valueType}, "\n";
            exit(1);
        }

        print OUTFILE $attr->{id}, "_Type;\n";
    };
}

print OUTFILE "\n}\n\n";
print OUTFILE "#endif\n";

#close output file
close(OUTFILE);
