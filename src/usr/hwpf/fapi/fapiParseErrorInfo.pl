#!/usr/bin/perl

#
# Purpose:  This perl script will parse HWP Error XML files,
# pull out the error Return Codes and create a header file fapiHwpReturnCodes.H
# containing an enumeration of them. 
#
# Author: CamVan Nguyen
# Last Updated: 06/03/2011
#
# Version: 1.0
#
# Change Log **********************************************************
#
#  Flag  Track#    Userid    Date      Description
#  ----  --------  --------  --------  -----------
#                  camvanng  06/03/11  Created
#                  mjjones   06/06/11  Minor updates for integration
#                  mjjones   06/10/11  Added "use strict;"
#                  mjjones   07/05/11  Take output dir as parameter
#
# End Change Log ******************************************************

#
# Usage:
# fapiParseErrorInfo.pl <output dir> <filename1> <filename2> ...

use strict;

#------------------------------------------------------------------------------
# Print Command Line Help
#------------------------------------------------------------------------------
my $numArgs = $#ARGV + 1;
if ($numArgs < 2)
{
    print ("Usage: fapiParseErrorInfo.pl <output dir> <filename1> <filename2> ...\n");
    print ("  This perl script will parse HWP Error XML files and add an\n");
    print ("  enumeration of return codes to a file called fapiHwpReturnCodes.H\n");
    exit(1);
}

#------------------------------------------------------------------------------
# Specify perl modules to use
#------------------------------------------------------------------------------
use XML::Simple;
my $xml = new XML::Simple (KeyAttr=>[]);

# Uncomment to enable debug output
#use Data::Dumper;

#------------------------------------------------------------------------------
# Open output file for writing
#------------------------------------------------------------------------------
my $outputFile = $ARGV[0];
$outputFile .= "/";
$outputFile .= "fapiHwpReturnCodes.H";
open(OUTFILE, ">", $outputFile);

#------------------------------------------------------------------------------
# Print Start of file information
#------------------------------------------------------------------------------
print OUTFILE "// fapiHwpReturnCodes.H\n";
print OUTFILE "// This file is generated by perl script fapiParseErrorInfo.pl\n\n";
print OUTFILE "#ifndef FAPIHWPRETURNCODES_H_\n";
print OUTFILE "#define FAPIHWPRETURNCODES_H_\n\n";
print OUTFILE "namespace fapi\n";
print OUTFILE "{\n\n";
print OUTFILE "/**\n";
print OUTFILE " * \@brief Enumeration of HWP return codes\n";
print OUTFILE " *\/\n";
print OUTFILE "enum HwpReturnCode\n";
print OUTFILE "{\n";

#------------------------------------------------------------------------------
# For each XML file
#------------------------------------------------------------------------------
foreach my $argnum (1 .. $#ARGV)
{
    my $infile = $ARGV[$argnum];

    # read XML file
    my $errors = $xml->XMLin($infile);

    # Uncomment to get debug output of all attributes
    #print "\nFile: ", $infile, "\n", Dumper($errors), "\n";

    #--------------------------------------------------------------------------
    # For each Attribute
    #--------------------------------------------------------------------------
    foreach my $err (@{$errors->{hwpError}})
    {
        #--------------------------------------------------------------------------
        # Print the return code
        #--------------------------------------------------------------------------
        if ($err->{id})
        {
            print OUTFILE "    ", $err->{id}, ",\n";
        }
        else
        {
            print ("fapiParseErrorInfo.pl ERROR. ID missing\n");
            exit(1);
        }
    };
}

#------------------------------------------------------------------------------
# Print End of file information
#------------------------------------------------------------------------------
print OUTFILE "};\n\n";
print OUTFILE "}\n\n";
print OUTFILE "#endif\n";

#------------------------------------------------------------------------------
# Close output file
#------------------------------------------------------------------------------
close(OUTFILE);
