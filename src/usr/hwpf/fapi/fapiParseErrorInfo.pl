#!/usr/bin/perl

#
# Usage:
# fapiParseErrorInfo.pl <filename1> <filename2> .... <filenameN>

use strict;

my $numArgs = $#ARGV + 1;
#print $numArgs, "\n";

if ($numArgs < 1)
{
    print ("Usage: fapiParseErrorInfo.pl <filename1> <filename2> .... <filenameN>\n");
    print ("  This perl script will parse HWP Error XML files,\n");
    print ("  pull out the error Return Codes and create a header file\n");
    print ("  hwp/fapiHwpReturnCodes.H containing an enumeration of them.\n");
    exit(1);
}



# use module
use XML::Simple;
#use Data::Dumper;

#open output file for writing
open(OUTFILE, ">fapiHwpReturnCodes.H");
print OUTFILE "// fapiHwpReturnCodes.H\n";
print OUTFILE "// This file is generated by perl script fapiParseErrorInfo.pl\n\n";
print OUTFILE "#ifndef FAPIHWPRETURNCODES_H_\n";
print OUTFILE "#define FAPIHWPRETURNCODES_H_\n\n";
print OUTFILE "namespace fapi\n";
print OUTFILE "{\n\n";
print OUTFILE "/**\n";
print OUTFILE " * \@brief Enumeration of HWP return codes\n";
print OUTFILE " *\/\n";
print OUTFILE "enum HwpReturnCode\n";
print OUTFILE "{\n";

# create object
my $xml = new XML::Simple (KeyAttr=>[]);
my $infile;

#for each Hwp Attribute XML file
foreach $infile(@ARGV)
{
    #print filename
    #print $ifile, "\n\n";

    # read XML file
    my $errors = $xml->XMLin($infile);

    # print output
    #print Dumper($errors);
    #print "\n";

    # print return code to file
    my $err;
    foreach $err (@{$errors->{hwpError}})
    {
        if ($err->{id})
        {
            print OUTFILE "    ", $err->{id}, ",\n";
        }
        else
        {
            print ("fapiParseErrorInfo.pl ERROR. ID missing\n");
            exit(1);
        }
    };
}

print OUTFILE "};\n\n";
print OUTFILE "}\n\n";
print OUTFILE "#endif\n";

#close output file
close(OUTFILE);
