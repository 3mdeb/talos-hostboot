#!/usr/bin/perl
#  IBM_PROLOG_BEGIN_TAG
#  This is an automatically generated prolog.
#
#  $Source: src/usr/hwpf/plat/fapiCreateHwpErrorTags.pl $
#
#  IBM CONFIDENTIAL
#
#  COPYRIGHT International Business Machines Corp. 2011
#
#  p1
#
#  Object Code Only (OCO) source materials
#  Licensed Internal Code Source Materials
#  IBM HostBoot Licensed Internal Code
#
#  The source code for this program is not published or other-
#  wise divested of its trade secrets, irrespective of what has
#  been deposited with the U.S. Copyright Office.
#
#  Origin: 30
#
#  IBM_PROLOG_END

#
# Purpose:  This perl script will parse HWP Error XML files and create required
#           HostBoot ReasonCodes and Error Log Tags. It creates file
#           fapiHwpReasonCodes.H:
#
# Author: Mike Jones
#

use strict;

#------------------------------------------------------------------------------
# Print Command Line Help
#------------------------------------------------------------------------------
my $numArgs = $#ARGV + 1;
if ($numArgs < 2)
{
    print ("Usage: fapiCreateHwpErrorTags.pl <output dir> <filename1> <filename2> ...\n");
    print ("  This perl script will parse HWP Error XML files and create\n");
    print ("  required HostBoot ReasonCodes and Error Log tags\n");
    exit(1);
}

#------------------------------------------------------------------------------
# Specify perl modules to use
#------------------------------------------------------------------------------
use XML::Simple;
my $xml = new XML::Simple (KeyAttr=>[]);

# Uncomment to enable debug output
#use Data::Dumper;

#------------------------------------------------------------------------------
# Open output files for writing
#------------------------------------------------------------------------------
my $rcFile = $ARGV[0];
$rcFile .= "/";
$rcFile .= "fapiHwpReasonCodes.H";
open(TGFILE, ">", $rcFile);

#------------------------------------------------------------------------------
# Print start of file information
#------------------------------------------------------------------------------
print TGFILE "// fapiHwpReasonCodes.H\n";
print TGFILE "// This file is generated by perl script fapiCreateHwpErrorTags.pl\n\n";
print TGFILE "#ifndef FAPIHWPREASONCODES_H_\n";
print TGFILE "#define FAPIHWPREASONCODES_H_\n\n";
print TGFILE "#include <fapiHwpReturnCodes.H>\n\n";
print TGFILE "namespace fapi\n";
print TGFILE "{\n\n";
print TGFILE "enum hwpReasonCode\n";
print TGFILE "{\n";

#------------------------------------------------------------------------------
# For each XML file
#------------------------------------------------------------------------------
foreach my $argnum (1 .. $#ARGV)
{
    #--------------------------------------------------------------------------
    # Read XML file
    #--------------------------------------------------------------------------
    my $infile = $ARGV[$argnum];
    my $errors = $xml->XMLin($infile);

    # Uncomment to get debug output of all errors
    #print "\nFile: ", $infile, "\n", Dumper($errors), "\n";

    #--------------------------------------------------------------------------
    # For each Error
    #--------------------------------------------------------------------------
    foreach my $err (@{$errors->{hwpError}})
    {
        #----------------------------------------------------------------------
        # Check that expected fields are present
        #----------------------------------------------------------------------
        if (! exists $err->{rc})
        {
            print ("fapiParseErrorInfo.pl ERROR. rc missing\n");
            exit(1);
        }

        if (! exists $err->{description})
        {
            print ("fapiParseErrorInfo.pl ERROR. description missing\n");
            exit(1);
        }

        #----------------------------------------------------------------------
        # Print the ReasonCode
        #----------------------------------------------------------------------
        print TGFILE "    __$err->{rc} = HWPF_COMP_ID | $err->{rc},\n";
    }
}

#------------------------------------------------------------------------------
# Print end of reason code enumeration and fapi namespace
#------------------------------------------------------------------------------
print TGFILE "};\n\n";
print TGFILE "}\n\n";

#------------------------------------------------------------------------------
# For each XML file
#------------------------------------------------------------------------------
foreach my $argnum (1 .. $#ARGV)
{
    #--------------------------------------------------------------------------
    # Read XML file
    #--------------------------------------------------------------------------
    my $infile = $ARGV[$argnum];
    my $errors = $xml->XMLin($infile);

    #--------------------------------------------------------------------------
    # For each Error
    #--------------------------------------------------------------------------
    foreach my $err (@{$errors->{hwpError}})
    {
        #----------------------------------------------------------------------
        # Print the Error Log tag
        #----------------------------------------------------------------------
        print TGFILE "/*\@\n";
        print TGFILE " * \@errortype\n";
        print TGFILE " * \@moduleid     MOD_HWP_RC_TO_ERRL\n";
        print TGFILE " * \@reasoncode   __$err->{rc}\n";
        print TGFILE " * \@devdesc      $err->{description}\n";
        print TGFILE " */\n\n";
    }
}

#------------------------------------------------------------------------------
# Print end of file information
#------------------------------------------------------------------------------
print TGFILE "#endif\n";

#------------------------------------------------------------------------------
# Close output files
#------------------------------------------------------------------------------
close(TGFILE);

