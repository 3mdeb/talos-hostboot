#-- $Id: sample.initfile,v 1.1 2011/07/13 16:03:44 andrewg Exp $
#-- CHANGE HISTORY:
#--------------------------------------------------------------------------------
#-- Version:|Author: | Date:  | Comment:
#-- --------|--------|--------|--------------------------------------------------
#--     0.01|andrewg |05/24/11|Created sample file
#-- --------|--------|--------|--------------------------------------------------
#--------------------------------------------------------------------------------
# End of revision history
#--------------------------------------------------------------------------------

#--Master list of variables that can be used in this file is at:
#--<Attribute Definition Location>

SyntaxVersion = 1

#-- -----------------------------------------------------------------------------
#--******************************************************************************
#-- -----------------------------------------------------------------------------
#--
#-- Defines
#--
#-- -----------------------------------------------------------------------------
#--******************************************************************************
#-- -----------------------------------------------------------------------------

define def_equal_test     =  (ATTR_SCRATCH_UINT32_1 == ATTR_SCRATCH_UINT32_2);
define def_not_equal_test =  (ATTR_SCRATCH_UINT64_1 != ATTR_SCRATCH_UINT64_2);


#--******************************************************************************
#-- Basic SCOM
#--******************************************************************************
scom 0x0000000013010002              {
  scom_data                 ;
  0x0000000000000181        ;
}

#--******************************************************************************
#-- Basic SCOM with Expression and Attribute
#--******************************************************************************

scom 0x0000000013030007              {
  scom_data,            expr                 ;
  0x0000000000000182,   ATTR_SCRATCH_UINT8_1 == ATTR_SCRATCH_UINT8_2    ;
}

#--******************************************************************************
#-- Basic SCOM with Array In Middle
#--******************************************************************************

scom 0x000000000006002(B,C)        {
  scom_data             ;
  0x0000000000000183    ;
}

#--******************************************************************************
#-- Basic SCOM with define used
#--******************************************************************************

scom 0x000000000006800b              {
  scom_data,            expr                 ;
  0x0000000000000184,   def_equal_test       ;
}

#--******************************************************************************
#-- Basic SCOM with a single bit set
#--******************************************************************************

scom 0x000000000006800c              {
    bits ,                    scom_data        ;
    23   ,                    0b1              ;
}

#--******************************************************************************
#-- Basic SCOM with bits
#--******************************************************************************

scom 0x0000000013013283              {
    bits ,                    scom_data        ;
    0:11 ,                    0b001111001001   ;
    12   ,                    0b1              ;
    13   ,                    0b1              ;
    14:59, 0b0000001100000110010000000000010000010010000000 ;
}

#--******************************************************************************
#-- Complext SCOM with Bit Support, define, and attributes
#--******************************************************************************

scom 0x0000000013013284              {
    bits ,                    scom_data,        expr                                  ;
    0:11 ,                    0b001111001001,   any                                   ;
    12   ,                    0b1,              def_equal_test                        ;
    12   ,                    0b0,              def_not_equal_test                    ;
    13   ,                    0b1,              ATTR_SCRATCH_UINT8_1 > ATTR_SCRATCH_UINT8_2   ;
    14:59, 0b0000001100000110010000000000010000010010000000, ATTR_SCRATCH_UINT64_1 == ATTR_SCRATCH_UINT64_2 ;
}

#--******************************************************************************
#-- Complex SCOM with Bit Support, and logical operators
#--******************************************************************************

scom 0x0000000013013285              {
    bits ,                    scom_data,        expr                                  ;
    12   ,                    0b1,              def_equal_test && def_not_equal_test  ;
    12   ,                    0b0,              def_equal_test || def_not_equal_test  ;
    14   ,                    0b1,              ATTR_SCRATCH_UINT32_1 < ATTR_SCRATCH_UINT32_2   ;
    15   ,                    0b1,              ATTR_SCRATCH_UINT32_1 > ATTR_SCRATCH_UINT32_2   ;
    16   ,                    0b1,              ATTR_SCRATCH_UINT32_1 >= ATTR_SCRATCH_UINT32_2  ;
    17   ,                    0b1,              ATTR_SCRATCH_UINT32_1 <= ATTR_SCRATCH_UINT32_2  ;
    18   ,                    0b1,              ATTR_SCRATCH_UINT32_1 == ATTR_SCRATCH_UINT32_2  ;
    19   ,                    0b1,              ATTR_SCRATCH_UINT32_1 != ATTR_SCRATCH_UINT32_2  ;
    20   ,                    0b1,              (ATTR_SCRATCH_UINT32_1 + ATTR_SCRATCH_UINT32_2) == 4 ;
    21:59, 0b000000110000011001000000000001000001001, ATTR_SCRATCH_UINT8_1 == ATTR_SCRATCH_UINT8_2 ;
}

#--******************************************************************************
#-- SCOM with 'ec' column - Use scratch for now since all attributes work
#--******************************************************************************

scom 0x0000000013013286              {
  scom_data,            ATTR_SCRATCH_UINT32_1        ;
  0x0000000000000192,   1       ;
}

#--******************************************************************************
#-- Basic SCOM with an array
#--******************************************************************************
scom 0x0000000013013287              {
  scom_data,            expr                 ;
  0x0000000000000182,   ATTR_SCRATCH_UINT8_ARRAY_1[2] == ATTR_SCRATCH_UINT8_1    ;
}

#--******************************************************************************
#-- SCOM with 'ec' & expr column - Use scratch for now since all attributes work
#--******************************************************************************
scom 0x0000000013013288              {
  scom_data,            ATTR_SCRATCH_UINT32_1        expr;
  0x0000000000000192,   3,                           ATTR_SCRATCH_UINT8_ARRAY_1[2] == ATTR_SCRATCH_UINT8_1;
}

#--******************************************************************************
#-- Complex SCOM with Bit Support, logical operators and 'ec' column
#--******************************************************************************
scom 0x0000000013013289              {
  bits ,                    scom_data        ATTR_SCRATCH_UINT32_1        expr;
  23   ,                    0b1,             any,                         ATTR_SCRATCH_UINT8_ARRAY_1[2] == ATTR_SCRATCH_UINT8_1;
  23   ,                    0b0,             1,                           any;
}

