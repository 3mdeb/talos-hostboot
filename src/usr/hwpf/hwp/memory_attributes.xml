<!-- IBM_PROLOG_BEGIN_TAG                                                   -->
<!-- This is an automatically generated prolog.                             -->
<!--                                                                        -->
<!-- $Source: src/usr/hwpf/hwp/memory_attributes.xml $                      -->
<!--                                                                        -->
<!-- IBM CONFIDENTIAL                                                       -->
<!--                                                                        -->
<!-- COPYRIGHT International Business Machines Corp. 2012                   -->
<!--                                                                        -->
<!-- p1                                                                     -->
<!--                                                                        -->
<!-- Object Code Only (OCO) source materials                                -->
<!-- Licensed Internal Code Source Materials                                -->
<!-- IBM HostBoot Licensed Internal Code                                    -->
<!--                                                                        -->
<!-- The source code for this program is not published or otherwise         -->
<!-- divested of its trade secrets, irrespective of what has been           -->
<!-- deposited with the U.S. Copyright Office.                              -->
<!--                                                                        -->
<!-- Origin: 30                                                             -->
<!--                                                                        -->
<!-- IBM_PROLOG_END_TAG                                                     -->
<attributes>
<!-- DO NOT EDIT THIS FILE DIRECTLY PLEASE UPDATE THE ODS FILE AND FOLLOW THE INSTRUCTION TAB -->
<!-- PLEASE SEE MARK BELLOWS (BELLOWS.IBM.COM) OR OTHERS ON MEMORY TEAM FOR HELP -->
<!-- *********************************************************************** -->

<attribute>
    <id>ATTR_MSS_VOLT</id>
    <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
    <description>DRAM Voltage, each voltage rail would need to have a value.  Computed in mss_volt C code - in millivolts
creator: mss_volt
consumer: mss_eff_cnfg, others
firmware notes: none</description>
    <valueType>uint32</valueType>
    <writeable/>
    <odmVisable/>
</attribute>

<attribute>
    <id>ATTR_MSS_FREQ</id>
    <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
    <description>Frequency of this memory channel in MHz, comprising of three DIMMs.  Computed in mss_freq
creator: mss_freq
consumer: mss_eff_cnfg, others
firmware notes: none</description>
    <valueType>uint32</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <persistRuntime/>
</attribute>

<attribute>
    <id>ATTR_MSS_DIMM_MFG_ID_CODE</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Manufacturer ID Code RCD: bits(31:16), Module: bits(15:0)</description>
    <valueType>uint32</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2 2</array>
</attribute>

<attribute>
    <id>ATTR_EFF_DIMM_RANKS_CONFIGED</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Bit wise representation of master ranks in each DIMM that are used for reads and writes. Used in various locations and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
Dimensions are [port][dimm]  A/B=Mba_0 C/D=Mba_1 There are only two DIMM ranks: DIMM0 and DIMM1 where DIMM0 is the furthest from the centaur.
creator: mss_eff_cnfg
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2 2</array>
    <persistRuntime/>
</attribute>

<attribute>
    <id>ATTR_EFF_NUM_RANKS_PER_DIMM</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Number of ranks in each DIMM. Used in various locations and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
values are 0,1,2, 4 up to 32
creator: mss_eff_cnfg
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2 2</array>
    <persistRuntime/>
</attribute>

<attribute>
    <id>ATTR_EFF_DIMM_TYPE</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Type of DIMM: CDIMM, RDIMM, UDIMM, LRDIMM. Used in various locations and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>CDIMM = 0, RDIMM = 1, UDIMM = 2, LRDIMM = 3</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <persistRuntime/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_WIDTH</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>DRAM Device Width: X4, X8, X16, X32. Used in various locations and is computed in mss_eff_cnfg.
creator: mss_eff_cnfg
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>X4 = 4, X8 = 8, X16 = 16, X32 = 32</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_GEN</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Generation of memory: DDR3, DDR4. Used in various locations and is computed in mss_eff_cnfg.
creator: mss_eff_cnfg
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>EMPTY = 0, DDR3 = 1, DDR4 = 2</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_PRIMARY_RANK_GROUP0</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_rank_group
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>INVALID = 255</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2</array>
</attribute>

<attribute>
    <id>ATTR_EFF_PRIMARY_RANK_GROUP1</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_rank_group
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>INVALID = 255</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2</array>
</attribute>

<attribute>
    <id>ATTR_EFF_PRIMARY_RANK_GROUP2</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_rank_group
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>INVALID = 255</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2</array>
</attribute>

<attribute>
    <id>ATTR_EFF_PRIMARY_RANK_GROUP3</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_rank_group
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>INVALID = 255</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2</array>
</attribute>

<attribute>
    <id>ATTR_EFF_SECONDARY_RANK_GROUP0</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_rank_group
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>INVALID = 255</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2</array>
</attribute>

<attribute>
    <id>ATTR_EFF_SECONDARY_RANK_GROUP1</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_rank_group
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>INVALID = 255</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2</array>
</attribute>

<attribute>
    <id>ATTR_EFF_SECONDARY_RANK_GROUP2</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_rank_group
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>INVALID = 255</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2</array>
</attribute>

<attribute>
    <id>ATTR_EFF_SECONDARY_RANK_GROUP3</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_rank_group
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>INVALID = 255</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2</array>
</attribute>

<attribute>
    <id>ATTR_EFF_TERTIARY_RANK_GROUP0</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_rank_group
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>INVALID = 255</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2</array>
</attribute>

<attribute>
    <id>ATTR_EFF_TERTIARY_RANK_GROUP1</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_rank_group
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>INVALID = 255</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2</array>
</attribute>

<attribute>
    <id>ATTR_EFF_TERTIARY_RANK_GROUP2</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_rank_group
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>INVALID = 255</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2</array>
</attribute>

<attribute>
    <id>ATTR_EFF_TERTIARY_RANK_GROUP3</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_rank_group
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>INVALID = 255</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2</array>
</attribute>

<attribute>
    <id>ATTR_EFF_QUATERNARY_RANK_GROUP0</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_rank_group
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>INVALID = 255</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2</array>
</attribute>

<attribute>
    <id>ATTR_EFF_QUATERNARY_RANK_GROUP1</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_rank_group
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>INVALID = 255</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2</array>
</attribute>

<attribute>
    <id>ATTR_EFF_QUATERNARY_RANK_GROUP2</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_rank_group
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>INVALID = 255</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2</array>
</attribute>

<attribute>
    <id>ATTR_EFF_QUATERNARY_RANK_GROUP3</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>RankGroup. Used in various locations and is computed in mss_eff_cnfg_rank_group. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_rank_group
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>INVALID = 255</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2</array>
</attribute>

<attribute>
    <id>ATTR_EFF_ODT_RD</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Read ODT. Used in various locations and is computed in mss_eff_cnfg_termination. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_termination
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2 2 4</array>
</attribute>

<attribute>
    <id>ATTR_EFF_ODT_WR</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Write ODT. Used in various locations and is computed in mss_eff_cnfg_termination. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_termination
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2 2 4</array>
</attribute>

<attribute>
    <id>ATTR_EFF_CKE_MAP</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Rank to CKE map. Used in various locations and is computed in mss_eff_cnfg_cke. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.   creator: mss_eff_cnfg_cke consumer: various firmware notes: none</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2 2 4</array>
</attribute>

<attribute>
    <id>ATTR_EFF_DIMM_SPARE</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Spare DRAM availability. Used in various locations and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.   creator: mss_eff_cnfg consumer: various firmware notes: load from spd</description>
    <valueType>uint8</valueType>
    <enum>NO_SPARE = 0, LOW_NIBBLE = 1, HIGH_NIBBLE = 2, FULL_BYTE = 3</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2 2 4</array>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_RON</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>DRAM Ron. Used in various locations and is computed in mss_eff_cnfg_termination. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_termination
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>OHM34 = 34, OHM40 = 40</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2 2</array>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_RTT_NOM</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>DRAM Rtt_Nom. Used in various locations and is computed in mss_eff_cnfg_termination. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_termination
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>DISABLE = 0, OHM20 = 20, OHM30 = 30, OHM34 = 34, OHM40 = 40, OHM48 = 48, OHM60 = 60, OHM80 = 80, OHM120 = 120, OHM240 = 240</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2 2 4</array>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_RTT_WR</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>DRAM Rtt_WR. Used in various locations and is computed in mss_eff_cnfg_termination. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_termination
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>DISABLE = 0, OHM60 = 60, OHM120 = 120</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2 2 4</array>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_WR_VREF</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>DRAM Write Vref. Used in various locations and is computed in mss_eff_cnfg_termination. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_termination
consumer: various
firmware notes: none</description>
    <valueType>uint32</valueType>
    <enum>VDD420 = 420, VDD425 = 425, VDD430 = 430, VDD435 = 435, VDD440 = 440, VDD445 = 445, VDD450 = 450, VDD455 = 455, VDD460 = 460, VDD465 = 465, VDD470 = 470, VDD475 = 475, VDD480 = 480, VDD485 = 485, VDD490 = 490, VDD495 = 495, VDD500 = 500, VDD505 = 505, VDD510 = 510, VDD515 = 515, VDD520 = 520, VDD525 = 525, VDD530 = 530, VDD535 = 535, VDD540 = 540, VDD545 = 545, VDD550 = 550, VDD555 = 555, VDD560 = 560, VDD565 = 565, VDD570 = 570, VDD575 = 575</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_CEN_DRV_IMP_DQ_DQS</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Centaur DQ and DQS Drive Impedance Used in various locations and is computed in mss_eff_cnfg_termination. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_termination
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>OHM24 = 24, OHM30 = 30, OHM34 = 34, OHM40 = 40</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_CEN_DRV_IMP_CMD</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Centaur Command Drive Impedance Used in various locations and is computed in mss_eff_cnfg_termination. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_termination
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>OHM15 = 15, OHM20 = 20, OHM30 = 30, OHM40 = 40</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_CEN_DRV_IMP_CNTL</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Centaur Control Drive Impedance Used in various locations and is computed in mss_eff_cnfg_termination. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_termination
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>OHM15 = 15, OHM20 = 20, OHM30 = 30, OHM40 = 40</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_CEN_RCV_IMP_DQ_DQS</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Centaur DQ and DQS Receiver Impedance Used in various locations and is computed in mss_eff_cnfg_termination. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_termination
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>OHM15 = 15, OHM20 = 20, OHM30 = 30, OHM40 = 40, OHM48 = 48, OHM60 = 60,  OHM80 = 80, OHM120 = 120, OHM160 = 160, OHM240 = 240</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_CEN_SLEW_RATE_DQ_DQS</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Centaur DQ and DQS Slew Rate Used in various locations and is computed in mss_eff_cnfg_termination. Slowest slew rate is 0, incrementing by one. The lower the number the slower the slew rate the higher the faster. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_termination
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_CEN_SLEW_RATE_CMD</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Centaur Command Slew Rate Used in various locations and is computed in mss_eff_cnfg_termination. Slowest slew rate is 0, incrementing by one. The lower the number the slower the slew rate the higher the faster. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_termination
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_CEN_SLEW_RATE_CNTL</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Centaur Control Slew Rate Used in various locations and is computed in mss_eff_cnfg_termination. Slowest slew rate is 0, incrementing by one. The lower the number the slower the slew rate the higher the faster. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_termination
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_CEN_RD_VREF</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Centaur Read Vref. Used in various locations and is computed in mss_eff_cnfg_termination. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.
creator: mss_eff_cnfg_termination
consumer: various
firmware notes: none</description>
    <valueType>uint32</valueType>
    <enum>VDD40375 = 40375, VDD41750 = 41750, VDD43125 = 43125, VDD44500 = 44500, VDD45875 = 45875, VDD47250 = 47250, VDD48625 = 48625, VDD50000 = 50000, VDD51375 = 51375, VDD52750 = 52750, VDD54125 = 54125, VDD55500 = 55500, VDD56875 = 56875, VDD58250 = 58250, VDD59625 = 59625, VDD61000 = 61000, VDD60375 = 60375, VDD61750 = 61750, VDD63125 = 63125, VDD64500 = 64500, VDD65875 = 65875, VDD67250 = 67250, VDD68625 = 68625, VDD70000 = 70000, VDD71375 = 71375, VDD72750 = 72750, VDD74125 = 74125, VDD75500 = 75500, VDD76875 = 76875, VDD78250 = 78250, VDD79625 = 79625, VDD81000 = 81000</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DIMM_SIZE</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>DIMM Size.  Used in various locations and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2 2</array>
    <persistRuntime/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_BANKS</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Number of DRAM banks.  Used in various locations and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_ROWS</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Number of DRAM rows.  Used in various locations and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_COLS</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Number of DRAM columns.  Used in various locations and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_DENSITY</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>DRAM Density.  Used in various locations and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_TRCD</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>RAS to CAS Delay.  Used in various locations and is computed in mss_eff_cnfg_timing. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg_timing
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_TRRD</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Row ACT to Row ACT Delay.  Used in various locations and is computed in mss_eff_cnfg_timing. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg_timing
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_TRP</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Row Precharge Delay.  Used in various locations and is computed in mss_eff_cnfg_timing. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg_timing
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_TRAS</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>ACT to Precharge Delay.  Used in various locations and is computed in mss_eff_cnfg_timing. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg_timing
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_TRC</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>ACT to ACT/Refresh Delay.  Used in various locations and is computed in mss_eff_cnfg_timing. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg_timing
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_TRFI</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Refresh Interval. Used in various locations and is computed in mss_eff_cnfg_timing. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  In unit clock.
creator: mss_eff_cnfg_timing
consumer: various
firmware notes: none</description>
    <valueType>uint32</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_TRFC</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Refresh Recovery Delay. Used in various locations and is computed in mss_eff_cnfg_timing. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  In unit clock.
creator: mss_eff_cnfg_timing
consumer: various
firmware notes: none</description>
    <valueType>uint32</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_TWTR</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Internal Write to Read Delay. Used in various locations and is computed in mss_eff_cnfg_timing. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg_timing
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_TRTP</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Internal Read to Precharge Delay. Used in various locations and is computed in mss_eff_cnfg_timing. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg_timing
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_TFAW</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Four ACT Window Delay. Used in various locations and is computed in mss_eff_cnfg_timing. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg_timing
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_BL</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Burst Length.  Used in various locations and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>BL8 = 0, OTF = 1, BC4 = 2</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_CL</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>CAS Latency.  Used in various locations and is computed in mss_eff_cnfg_timing. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg_timing
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_AL</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Additive Latency.  Used in various locations and is computed in mss_eff_cnfg_timing. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg_timing
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>DISABLE = 0, CL_MINUS_1 = 1, CL_MINUS_2 = 2</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_CWL</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>CAS Write Latency.  Used in various locations and is computed in mss_eff_cnfg_timing. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg_timing
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_RBT</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Read Burst Type.  Used in various locations and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>SEQUENTIAL = 0, INTERLEAVE = 1</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_TM</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Test Mode.  Used in various locations and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>NORMAL= 0, TEST = 1</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_DLL_RESET</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>DLL Reset.  Used in various locations and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>NO = 0, YES = 1</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_WR</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Write Recovery.  Used in various locations and is computed in mss_eff_cnfg_timing. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg_timing
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_DLL_PPD</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>DLL Precharge PD.  Used in various locations and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>SLOWEXIT = 0, FASTEXIT = 1</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_DLL_ENABLE</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>DLL Enable.  Used in various locations and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>ENABLE = 0, DISABLE = 1</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_TDQS</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>TDQS. Used in various locations and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>DISABLE = 0, ENABLE = 1</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_WR_LVL_ENABLE</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Write Level Enable. Used in various locations and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>DISABLE = 0, ENABLE = 1</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_OUTPUT_BUFFER</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>DRAM Qoff. Enables or disables DRAM output. Used in various locations and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>ENABLE = 0, DISABLE = 1</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_PASR</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Partial Array Self-Refresh. Used in various locations and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>FULL = 0, FIRST_HALF = 1, FIRST_QUARTER = 2, FIRST_EIGHTH = 3, LAST_THREE_FOURTH = 4, LAST_HALF = 5, LAST_QUARTER = 6, LAST_EIGHTH = 7</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_ASR</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Auto Self-Refresh. Used in various locations and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>SRT = 0, ASR = 1</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DRAM_SRT</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Self-Refresh Temperature Range. Used in various locations and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>NORMAL = 0, EXTEND = 1</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_MPR_LOC</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Multi Purpose Register Location. Used in various locations and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_MPR_MODE</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Multi Purpose Register Mode. Used in various locations and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg
consumer: various
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>DISABLE = 0, ENABLE = 1</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_DIMM_RCD_CNTL_WORD_0_15</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>RCD Control Word. Used in mss_dram_init and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg
consumer: mss_dram_init
firmware notes: none</description>
    <valueType>uint64</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2 2</array>
</attribute>

<attribute>
    <id>ATTR_EFF_DIMM_RCD_IBT</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>RCD IBT. Used in mss_dram_init and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg
consumer: mss_dram_init
firmware notes: none</description>
    <valueType>uint32</valueType>
    <enum>IBT_OFF = 0, IBT_100 = 100, IBT_150 = 150, IBT_200 = 200, IBT_300 = 300</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2 2</array>
</attribute>

<attribute>
    <id>ATTR_EFF_DIMM_RCD_MIRROR_MODE</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>RCD IBT. Used in mss_dram_init and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value.
creator: mss_eff_cnfg
consumer: mss_dram_init
firmware notes: none</description>
    <valueType>uint8</valueType>
    <enum>IBT_BACK_OFF = 0, IBT_BACK_ON = 1</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2 2</array>
</attribute>

<attribute>
    <id>ATTR_EFF_SCHMOO_MODE</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Specifies the schmoo mode to use during draminit_train_adv.</description>
    <valueType>uint8</valueType>
    <enum>FAST = 0, ONE_SLOW = 1, QUARTER_SLOW = 2, HALF_SLOW = 3, FULL_SLOW = 4, ONE_CHAR = 5, QUARTER_CHAR = 6, HALF_CHAR = 7, FULL_CHAR = 8</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_SCHMOO_TEST_VALID</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Specifies the schmoo test to run during draminit_train_adv. Bit wise.</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_SCHMOO_PARAM_VALID</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Specifies the schmoo parameters to use during draminit_train_adv. Bit wise.</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_SCHMOO_WR_EYE_MIN_MARGIN</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Specifies the schmoo minimum margin to use during draminit_train_adv. Used to signal possible SI issues in memory.</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_SCHMOO_RD_EYE_MIN_MARGIN</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Specifies the schmoo minimum margin to use during draminit_train_adv. Used to signal possible SI issues in memory.</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_SCHMOO_DQS_CLK_MIN_MARGIN</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Specifies the schmoo minimum margin to use during draminit_train_adv. Used to signal possible SI issues in memory.</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_SCHMOO_RD_GATE_MIN_MARGIN</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Specifies the schmoo minimum margin to use during draminit_train_adv. Used to signal possible SI issues in memory.</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_SCHMOO_ADDR_CMD_MIN_MARGIN</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Specifies the schmoo minimum margin to use during draminit_train_adv. Used to signal possible SI issues in memory.</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_MEMCAL_INTERVAL</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Specifies the memcal interval in clocks.</description>
    <valueType>uint32</valueType>
    <enum>DISABLE = 0</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_ZQCAL_INTERVAL</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Specifies the zqcal interval in clocks.</description>
    <valueType>uint32</valueType>
    <enum>DISABLE = 0</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_IBM_TYPE</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Specifies the memory topology type. See centaur workbook.</description>
    <valueType>uint8</valueType>
    <enum>UNDEFINED = 0, TYPE_1A = 1, TYPE_1B = 2, TYPE_1C = 3, TYPE_2A = 4, TYPE_2B = 5, TYPE_2C = 6, TYPE_3A = 7, TYPE_3B = 8, TYPE_3C = 9, TYPE_4A = 10, TYPE_4B = 11, TYPE_4C = 12, TYPE_5A = 13, TYPE_5B = 14, TYPE_5C = 15, TYPE_5D = 16, TYPE_6A = 17, TYPE_6B = 18, TYPE_6C = 19, TYPE_7A = 20, TYPE_7B = 21, TYPE_7C = 22, TYPE_8A = 23, TYPE_8B = 24, TYPE_8C = 25</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2 2</array>
</attribute>

<attribute>
    <id>ATTR_EFF_NUM_DROPS_PER_PORT</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Specifies the number of DIMM dimensions that are valid per port. </description>
    <valueType>uint8</valueType>
    <enum>EMPTY = 0, SINGLE = 1, DUAL = 2</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_EFF_STACK_TYPE</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Specifies the DRAM package type.</description>
    <valueType>uint8</valueType>
    <enum>NONE = 0, DDP_QDP = 1, STACK_3DS = 2</enum>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2 2</array>
</attribute>

<attribute>
    <id>ATTR_EFF_NUM_MASTER_RANKS_PER_DIMM</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Specifies the number of master ranks per DIMM.</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2 2</array>
</attribute>

<attribute>
    <id>ATTR_EFF_NUM_PACKAGES_PER_RANK</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Specifies the number of DRAM packages per rank.</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2 2</array>
</attribute>

<attribute>
    <id>ATTR_EFF_NUM_DIES_PER_PACKAGE</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Specifies the number of DRAM dies per package.</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2 2</array>
</attribute>

<attribute>
    <id>ATTR_MSS_THROTTLE_NUMERATOR</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Each DIMM can have a throttle amount.  This is the numerator
creator: mss_eff_cnfg
consumer: mc_config
firmware notes: none</description>
    <valueType>uint32</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2 2</array>
    <persistRuntime/>
</attribute>

<attribute>
    <id>ATTR_MSS_THROTTLE_DENOMINATOR</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Each DIMM can have a throttle amount.  This is the denominator
creator: mss_eff_cnfg
consumer: mc_config
firmware notes: none</description>
    <valueType>uint32</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2 2</array>
    <persistRuntime/>
</attribute>

<attribute>
    <id>ATTR_MSS_THROTTLE_CHANNEL_NUMERATOR</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>This is a channel throttle amount
this is the numerator
creator: mss_eff_cnfg
consumer: mc config
firmware notes:none</description>
    <valueType>uint32</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2</array>
    <persistRuntime/>
</attribute>

<attribute>
    <id>ATTR_MSS_THROTTLE_CHANNEL_DENOMINATOR</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>This is a channel throttle amount
this is the denominator
creator: mss_eff_cnfg
consumer: mc config
firmware notes:none</description>
    <valueType>uint32</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2</array>
    <persistRuntime/>
</attribute>

<attribute>
    <id>ATTR_MSS_WATT_TARGET</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Total memory watts upper limit for this memory channel. Used to compute the throttles on the channel and/or dimms
creator: unknown
consumer: mss_eff_config
firmware notes: none</description>
    <valueType>uint32</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2</array>
    <persistRuntime/>
</attribute>

<attribute>
    <id>ATTR_MSS_POWER_SLOPE</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Power slope value for dimm in double drop config</description>
    <valueType>uint32</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2 2</array>
    <persistRuntime/>
</attribute>

<attribute>
    <id>ATTR_MSS_POWER_INT</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Power intercept value for dimm in double drop config</description>
    <valueType>uint32</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2 2</array>
    <persistRuntime/>
</attribute>

<attribute>
    <id>ATTR_MSS_DIMM_MAXBANDWIDTH_GBS</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>DIMM Max Bandwidth in GBs output from thermal procedures</description>
    <valueType>uint32</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2 2</array>
    <persistRuntime/>
</attribute>

<attribute>
    <id>ATTR_MSS_DIMM_MAXBANDWIDTH_MRS</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>DIMM Max Bandwidth in MRs output from thermal procedures</description>
    <valueType>uint32</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2 2</array>
    <persistRuntime/>
</attribute>

<attribute>
    <id>ATTR_MSS_CHANNEL_MAXBANDWIDTH_GBS</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Channel Max Bandwidth in GBs output from thermal procedures</description>
    <valueType>uint32</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2</array>
    <persistRuntime/>
</attribute>

<attribute>
    <id>ATTR_MSS_CHANNEL_MAXBANDWIDTH_MRS</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Channel Max Bandwidth MRs output from thermal procedures</description>
    <valueType>uint32</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2</array>
    <persistRuntime/>
</attribute>

<attribute>
    <id>ATTR_MSS_DIMM_MAXPOWER</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>DIMM Max Power output from thermal procedures</description>
    <valueType>uint32</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2 2</array>
    <persistRuntime/>
</attribute>

<attribute>
    <id>ATTR_MSS_CHANNEL_MAXPOWER</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>Channel Max Power output from thermal procedures</description>
    <valueType>uint32</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array> 2</array>
    <persistRuntime/>
</attribute>

<attribute>
    <id>ATTR_MSS_INTERLEAVE_ENABLE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>Used in the setting of groups.  It is a bit vector.  If the value  BITWISE_AND  1 = 1 then groups of 1 are enabled with special checkerboard modes needed, if the value  BITWISE_AND  2 = 2, then groups of 2 are possible; if value  BITWISE_AND  4, the groups of 4 are possible; if value  BITWISE_AND  8, the groups of 8 are possible.  If no groups can formed according to this input, then an error will be thrown.</description>
    <valueType>uint8</valueType>
    <platInit/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_MSS_MEMSIZE_MBA</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>At the MBA level, how much memory is available</description>
    <valueType>uint64</valueType>
    <writeable/>
    <odmVisable/>
    <persistRuntime/>
</attribute>

<attribute>
    <id>ATTR_MSS_MCA_HASH_MODE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>This dial sets up the centaur hash mode policy..   See Centaur workbook chapter 5.
Hash modes values are 0,1 and 2. Used in the intifile </description>
    <valueType>uint8</valueType>
    <platInit/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_MSS_MBA_ADDR_INTERLEAVE_BIT</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>This dial sets the Centaur address bits used to interleave addresses between MBA01 and MBA23.  Valid values are 23 through 32.  See Centaur Spec Chapter 5 for details.   Used in the intifile </description>
    <valueType>uint8</valueType>
    <platInit/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_MSS_MBA_CACHELINE_INTERLEAVE_MODE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>Value of on or off.  On is 256 bit interleave.  Off, the translation is on 128  bit interleave mode.  See centaur workbook chapter 5.</description>
    <valueType>uint8</valueType>
    <enum>OFF = 0, ON = 1</enum>
    <platInit/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_MSS_CACHE_ENABLE</id>
    <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
    <description>Value of on or off.  Determines if the L4 is enabled or not. See chapter 6 of the Centaur Workbook.</description>
    <valueType>uint8</valueType>
    <enum>OFF = 0, ON = 1</enum>
    <platInit/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_MSS_PREFETCH_ENABLE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>Value of on or off.  Determines if prefetching enabled or not. See chapter 7 of the Centaur Workbook.</description>
    <valueType>uint8</valueType>
    <enum>OFF = 0, ON = 1</enum>
    <platInit/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_MSS_CLEANER_ENABLE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>Value of on or off.  Determines if the cleaner of the L4 cache (write modified entries to memory on idle cycles)  enabled or not. See chapter 7 of the Centaur Workbook.</description>
    <valueType>uint8</valueType>
    <enum>OFF = 0, ON = 1</enum>
    <platInit/>
    <odmVisable/>
    <odmChangeable/>
</attribute>

<attribute>
    <id>ATTR_MSS_LAB_OVERRIDE_FOR_MEM_PLL</id>
    <targetType>TARGET_TYPE_MEMBUF_CHIP</targetType>
    <description>Tell the cen_mem_pll_setup procedure to override the default Centaur MEM PLL settings with user-specified scan chain data.
creator: lab user
consumer: cen_mem_pll_setup
firmware notes: none</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
</attribute>

<attribute>
    <id>ATTR_MSS_MEM_MC_IN_GROUP</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>A 8 bit vector that would be a designation of which MC are involved in the group. So the bits would represent MC0,MC1,MC2,MC3,MC4,MC5,MC6,MC7-what is grouped into the first would go into [0], the 2nd group into entry [1] and so on. set in the mss_setup_bars</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array>8</array>
    <persistRuntime/>
</attribute>

<attribute>
    <id>ATTR_MSS_MCS_GROUP_32</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>Data Structure from eff grouping to setup bars to help determine different groups
   Non- Mirroring [0-7] 0 -- MCS size //1-- No of MCS/group //2-- Total group size //3 -- Base address// 4-11 - MCS ID number// 12 --Alter.Bar //13 - A.Group Size // 14 - A.Base address
 //  Mirroring      [8-15] 0 -- MCS size //1-- No of MCS/group //2-- Total group size //3 -- Base address// 4-11 - MCS ID number// 12 --Alter.Bar //13 - A.Group Size // 14 - A.Base address
Measured in GB</description>
    <valueType>uint32</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array>16 16</array>
</attribute>

<attribute>
    <id>ATTR_MSS_MCS_GROUP</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>Data Structure from eff grouping to setup bars to help determine different groups
   Non- Mirroring [0-7] 0 -- MCS size //1-- No of MCS/group //2-- Total group size //3 -- Base address// 4-11 - MCS ID number// 12 --Alter.Bar //13 - A.Group Size // 14 - A.Base address
 //  Mirroring      [8-15] 0 -- MCS size //1-- No of MCS/group //2-- Total group size //3 -- Base address// 4-11 - MCS ID number// 12 --Alter.Bar //13 - A.Group Size // 14 - A.Base address
Measured in GB - THIS ATTRIBUTE WILL EVENTUALLY BE OBSOLETE.  USE MSS_MCS_GROUP_32</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <array>16 16</array>
</attribute>

<attribute>
    <id>ATTR_MSS_EFF_DIMM_FUNCTIONAL_VECTOR</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>A bit vector (per Dean's request) specifying if a DIMM is functional.  DIMM attributes, such as SIZE, are qualified by this bit vector.  The attribute ANDed 0x80 means port 0, DIMM 0 is functional, 0x40 means port 0, DIMM 1 is functional.  0x08 means port 1, DIMM 0 is functional and 0x04 means port 1 DIMM 1 is functional.  A fully populated system would have the value of 0xCC. Used in various locations and is computed in mss_eff_cnfg. Can be overwritten by ODM vendors if done from the PNOR or odm_eff_cnfg.  Each memory channel will have a value. creator: mss_eff_cnfg consumer: various firmware notes: none
This factors in functionality</description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <persistRuntime/>
</attribute>

<attribute>
    <id>ATTR_MSS_CAL_STEP_ENABLE</id>
    <targetType>TARGET_TYPE_MBA_CHIPLET</targetType>
    <description>A bit vector denoting valid cal steps to run during dram_init_train. [0] EXT_ZQCAL
[1] WR_LEVEL
[2] DQS_ALIGN
[3] RDCLK_ALIGN
[4] READ_CTR
[5] WRITE_CTR
[6] COARSE_WR
[7] COARSE_RD
bits6:7  will be consumed together to form COARSE_LVL. </description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <persistRuntime/>
</attribute>

<attribute>
    <id>ATTR_MSS_MEM_IPL_COMPLETE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>A numerical number indicating if the memory procedures are complete.  written by mss_setup_bars when the bars are now functional in the processor.  </description>
    <valueType>uint8</valueType>
    <writeable/>
    <odmVisable/>
    <odmChangeable/>
    <persistRuntime/>
</attribute>

<!-- DO NOT EDIT THIS FILE DIRECTLY PLEASE UPDATE THE ODS FILE AND FOLLOW THE INSTRUCTION TAB -->
<!-- PLEASE SEE MARK BELLOWS (BELLOWS.IBM.COM) OR OTHERS ON MEMORY TEAM FOR HELP -->
</attributes>
