<!-- IBM_PROLOG_BEGIN_TAG                                                   -->
<!-- This is an automatically generated prolog.                             -->
<!--                                                                        -->
<!-- $Source: src/usr/hwpf/hwp/runtime_attributes/pm_attributes_all_plat.xml $ -->
<!--                                                                        -->
<!-- IBM CONFIDENTIAL                                                       -->
<!--                                                                        -->
<!-- COPYRIGHT International Business Machines Corp. 2012                   -->
<!--                                                                        -->
<!-- p1                                                                     -->
<!--                                                                        -->
<!-- Object Code Only (OCO) source materials                                -->
<!-- Licensed Internal Code Source Materials                                -->
<!-- IBM HostBoot Licensed Internal Code                                    -->
<!--                                                                        -->
<!-- The source code for this program is not published or otherwise         -->
<!-- divested of its trade secrets, irrespective of what has been           -->
<!-- deposited with the U.S. Copyright Office.                              -->
<!--                                                                        -->
<!-- Origin: 30                                                             -->
<!--                                                                        -->
<!-- IBM_PROLOG_END_TAG                                                     -->
<!--
    XML file specifying Power Management HWPF attributes.
    These attributes are initialized by the platform.
-->

<attributes>
<!-- *********************************************************************** -->

<attribute>
    <id>ATTR_PROC_DCM_INSTALLED</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
This attribute is set to 1 if the target processor is part of a Dual Chip Module (DCM).

Used for enabling operations between the two chips for to voltage control based on 'interchip_mode' and the settings of PMIC0.

Consumer: proc_pm.scominit
    </description>
    <valueType>uint8</valueType>
    <enum>TRUE = 1, FALSE = 0</enum>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PM_EXTERNAL_VRM_STEPSIZE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
Step size (binary in microvolts) to take upon external VRM voltage transitions.  The value set here must take into account where internal VRMs are enabled or not as, when they are enabled, the step size must account for the tracking (eg PFET strength recalculation) for the step.

MRWB after system characterization

Consumer: proc_build_pstate_tables.C, proc_pmc_init.C -config
    </description>
    <valueType>uint32</valueType>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PM_EXTERNAL_VRM_STEPDELAY</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
Step delay (binary in microseconds) after a voltage change

Producer:  MRWB after system characterization


Consumer: proc_pmc_init -config
    </description>
    <valueType>uint32</valueType>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PM_SAFE_VOLTAGE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>

Voltage (binary in 5mv units) that is invoked upon the loss of the OCC Heartbeat.

Used to determine the Pstate to load into the hardware for automatic reaction upon the loss of the OCC heartbeat .  This value needs to be at or above that which supports the nominal frequency to make sure safe operation of all chiplets.

The value is translated to the Pstate space.

Consumer: proc_pm_effective.C

DYNAMIC_ATTRIBUTE: ATTR_PM_SAFE_PSTATE

Consumer: proc_pm.scominit 
    </description>
    <valueType>uint8</valueType>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PM_PSTATE_UNDERVOLTING_MINIMUM</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
Minimum frequency (binary in 5mv units) for which undervolting is allowed.  Will be internally rounded to the nearest ATTR_PROC_REFCLK_FREQUENCY / 8 value.

Consumer: OCC FW; OCC Lab Tools

Need to create a process for MRWB elements to get passed to OCC (FW or lab tools)
    </description>
    <valueType>uint8</valueType>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PM_PSTATE_UNDERVOLTING_MAXIMUM</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
Maximum frequency for which undervolting is allowed.  Will be internally rounded to the nearest ATTR_PROC_REFCLK_FREQUENCY / 8 value.

Consumer: OCC FW; OCC Lab Tools

Need to create a process for MRWB elements to get passed to OCC (FW or lab tools)
    </description>
    <valueType>uint8</valueType>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PM_SPIVID_FREQUENCY</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
SPI Clock Frequency (binary in MHz)
Consumer: proc_pm_effective

Produces ATTR_PM_SPIVID_CLOCK_DIVIDER
    </description>
    <valueType>uint32</valueType>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PM_SPIVID_PORT_ENABLE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
Defines the configuration of the SPIVID ports from the target.  NONE means that no VRM is attached; PORTxNONRED means that the indicated port is used in a non-redundant configuration;  REDUNDANT means that all three are connected and considered redundant.
    </description>
    <valueType>uint8</valueType>
    <enum>NONE=0b000, PORT0NONRED=0b100,  PORT1NONRED=0b010, PORT2NONRED=0b001,REDUNDANT=0b111</enum>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PM_SLEEP_ENTRY</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
Setting depends on di/dt charateristics of the system.

Set Assisted if power off serialization is needed and SLEEP_TYPE=Fast;  Set to Hardware if the system can handle the unrelated powering off between cores.  Hardware setting decreases entry latency

Producer: MRWB

Consumer:  proc_pm_init -config and proc_pcbs_init
    </description>
    <valueType>uint8</valueType>
    <enum>HARDWARE=0, ASSISTED=1</enum>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PM_SLEEP_EXIT</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
Setting depends on di/dt charateristics of the system and the setting of ATTR_PM_SLEEP_TYPE.

Set to Assisted if power on serialization is needed and SLEEP_TYPE=Fast;  Set to Hardware if the system can handle the unrelated powering off between cores.  Hardware setting decreases entry latency
Must be set to Assisted if ATTR_PM_SLEEP_TYPE=Deep as this necessary for restore.

Setting to Hardware is a test mode for Fast only.

Producer: MRWB

Consumer: proc_pm_init -config and proc_pcbs_init
    </description>
    <valueType>uint8</valueType>
    <enum>HARDWARE=0, ASSISTED=1</enum>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PM_SLEEP_TYPE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
Sleep Power Off Select:
Selects which voltage level to place the Core domain PFETs upon Sleep entry. 0 = Vret (Fast Sleep Mode), 1 = Voff (Deep Sleep Mode)

Producer: MRWB

Consumer: proc_pm_init -config and proc_pcbs_init
    </description>
    <valueType>uint8</valueType>
    <enum>FAST=0, DEEP=1</enum>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PM_WINKLE_ENTRY</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
Setting depends on di/dt charateristics of the system.

Set Assisted if power off serialization is needed and WINKE_TYPE=Fast;  Set to Hardware if the system can handle the unrelated powering off between cores.  Hardware setting decreases entry latency

Producer: MRWB

Consumer:  proc_pm_init -config and proc_pcbs_init
    </description>
    <valueType>uint8</valueType>
    <enum>HARDWARE=0, ASSISTED=1</enum>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PM_WINKLE_EXIT</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
Setting depends on di/dt charateristics of the system and the setting of ATTR_PM_WINKE_TYPE.

Set to Assisted if power on serialization is needed and WINKE_TYPE=Fast;  Set to Hardware if the system can handle the unrelated powering off between cores.  Hardware setting decreases entry latency
Must be set to Assisted if ATTR_PM_WINKE_TYPE=Deep as this necessary for restore.

Setting to Hardware is a test mode for Fast only.

Producer: MRWB

Consumer:  proc_pm_effective and proc_pcbs_init.
    </description>
    <valueType>uint8</valueType>
    <enum>HARDWARE=0, ASSISTED=1</enum>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PM_WINKLE_TYPE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
Winkle Power Off Select:
Selects which voltage level to place the Core and ECO domain PFETs upon Winkle entry. 0 = Vret (Fast Winkle Mode), 1 = Voff (Deep Winkle Mode)

Producer: MRWB

Consumer:  proc_pm_init -config and proc_pcbs_init
    </description>
    <valueType>uint8</valueType>
    <enum>FAST=0, DEEP=1</enum>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PM_SAFE_FREQUENCY</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
Safe Frequency (binary in MHz)

Indicates the frequency that the cores will be moved to in the event of the loss of the OCC Heartbead.  This value needs to be  at or below the nominal frequency to make sure safe operation of all chiplets.

The value is translated to the Pstate space.

Consumer: proc_pm_effective.C

DYNAMIC_ATTRIBUTE: ATTR_PM_SAFE_PSTATE

Consumer: proc_pcbs_init.C  
    </description>
    <valueType>uint32</valueType>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PM_RESONANT_CLOCK_FULL_CLOCK_SECTOR_BUFFER_FREQUENCY</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
Frequency (binary in MHz) for the point at which clock sector buffers should be at full strength.  This is to support Vmin operation.  Setting cannot overlap the Low or High bands.
    </description>
    <valueType>uint32</valueType>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PM_RESONANT_CLOCK_LOW_BAND_LOWER_FREQUENCY</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
Frequency (binary in MHz)) for the lower end of the Low Frequency Resonant band
    </description>
    <valueType>uint32</valueType>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PM_RESONANT_CLOCK_LOW_BAND_UPPER_FREQUENCY</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
Frequency (binary in MHz) for the upper end of the Low Frequency Resonant band
    </description>
    <valueType>uint32</valueType>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PM_RESONANT_CLOCK_HIGH_BAND_LOWER_FREQUENCY</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
Frequency (binary in MHz) for the lower end of the High Frequency Resonant band
    </description>
    <valueType>uint32</valueType>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PM_RESONANT_CLOCK_HIGH_BAND_UPPER_FREQUENCY</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
Frequency (binary in MHz)) for the upper end of the High Frequency Resonant band
    </description>
    <valueType>uint32</valueType>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PM_SPIPSS_FREQUENCY</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
SPIPSS Clock Frequency (binary in MHz)

Valid range: 0.5MHz to 25MHz

Consumer: proc_pmc_init
    </description>
    <valueType>uint32</valueType>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PM_APSS_CHIP_SELECT</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
Defines which of the PSS chip selects that the APSS is connected
    </description>
    <valueType>uint8</valueType>
    <enum>NONE=0xFF, CS0=0x00, CS1=0x01</enum>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PM_PBAX_NODEID</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
Receive PBAX Nodeid
Value that indicates this PBA's PBAX Node affinity.  This is matched to pbax_nodeid of the PMISC Address phase.
    </description>
    <valueType>uint8</valueType>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PM_PBAX_CHIPID</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
Receive PBAX Chipid
Value that indicates this PBA's PBAX Chipid within the PBAX node.  Is matched to pbax_chipid of the Address phase if pbax_type=unicast.
    </description>
    <valueType>uint8</valueType>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PM_PBAX_BRDCST_ID_VECTOR</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
Receive PBAX Broadcast Group
Vector that is indexed when decoded PMISC pbax_type=broadcast with the decoded PMISC pbax_chipid value.  If the bit in this vector at the decoded bit location is a 1, then this receive engine will participate in the broadcast operation.
    </description>
    <valueType>uint8</valueType>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PROC_R_LOADLINE</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
Impedance (binary microOhms) of the load line from a processor VRM to the Processor Module pins.  This value is applied to each processor instance.

Producer: MRWB (via the power subsystem design per system)

Consumers: proc_build_gpstate_table.C
    </description>
    <valueType>uint32</valueType>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PROC_R_DISTLOSS</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
Impedance (binary in microOhms) of the distribution loss the sense point to the circuit.  This value is applied to each processor instance.

Producer: MRWB (via the power subsystem design per system)

Consumers: proc_build_gpstate_table.C
    </description>
    <valueType>uint32</valueType>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PROC_VRM_VOFFSET</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
Offset voltage (binary in microvolts) to apply to the VRM distribution to the processor module.  This value is applied to each processor instance.

Producer: MRWB (via the power subsystem design per system)

Consumers: proc_build_gpstate_table.C
    </description>
    <valueType>uint32</valueType>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_PROC_DPLL_DIVIDER</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
Feedback divider x forward divider setting for the DPLL

Producer: MRWB

Consumers: proc_build_gpstate_table.C
    </description>
    <valueType>uint8</valueType>
    <platInit/>
</attribute>

<attribute>
    <id>ATTR_FREQ_CORE_MAX</id>
    <targetType>TARGET_TYPE_SYSTEM</targetType>
    <description>
Maximum frequency (binary in MHz) that any processor in the system will run.  Used to define the top end of the PState range in the frequency space.
From this, the ATTR_PROCPM_PSTATE0_FREQUENCY is computed using ATTR_SYSTEM_REFCLK_FREQUENCY to determine the step size.

Producer: MRWB (system design)

Consumers: proc_build_gpstate_table.C (among others)
    </description>
    <valueType>uint32</valueType>
    <platInit/>
</attribute>

</attributes>
