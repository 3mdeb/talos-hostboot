<!-- IBM_PROLOG_BEGIN_TAG                                                   -->
<!-- This is an automatically generated prolog.                             -->
<!--                                                                        -->
<!-- $Source: src/import/chips/p9/procedures/xml/attribute_info/p9_pm_hwp_attributes.xml $ -->
<!--                                                                        -->
<!-- OpenPOWER HostBoot Project                                             -->
<!--                                                                        -->
<!-- Contributors Listed Below - COPYRIGHT 2015,2016                        -->
<!-- [+] International Business Machines Corp.                              -->
<!--                                                                        -->
<!--                                                                        -->
<!-- Licensed under the Apache License, Version 2.0 (the "License");        -->
<!-- you may not use this file except in compliance with the License.       -->
<!-- You may obtain a copy of the License at                                -->
<!--                                                                        -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                         -->
<!--                                                                        -->
<!-- Unless required by applicable law or agreed to in writing, software    -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,      -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        -->
<!-- implied. See the License for the specific language governing           -->
<!-- permissions and limitations under the License.                         -->
<!--                                                                        -->
<!-- IBM_PROLOG_END_TAG                                                     -->
<!--
    XML file specifying Power Management HWPF attributes.
    These attributes are initialized to zero by the platform and set to a
    meaningful value by a HWP
-->

<attributes>
  <attribute>
    <id>ATTR_PM_SPIPSS_FRAME_SIZE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
      Number of data bits per individual SPIPSS transaction
      (also referred to as frame) during chip select assertion.
      Supported values: 0x20 (32d)
      Chip Select assertion duration is frame_size + 2
    </description>
    <valueType>uint8</valueType>
    <writeable/>
  </attribute>

  <attribute>
    <id>ATTR_PM_SPIPSS_IN_DELAY</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
      Number of SPI clocks after chip select to wait before capturing
      MISO input.
      Supported values: 0x000 to spi_frame_size.
      Values beyond spi_frame_size result in the input not being captured
    </description>
    <valueType>uint8</valueType>
    <writeable/>
  </attribute>

  <attribute>
    <id>ATTR_PM_SPIPSS_CLOCK_POLARITY</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
      SPIPSS Clock Polarity
      CPOL=0 means that clk idle is deasserted,
      CPOH=1 means that clk idle is asserted
    </description>
    <valueType>uint8</valueType>
    <enum>CPOL=0, CPOH=1</enum>
    <writeable/>
  </attribute>

  <attribute>
    <id>ATTR_PM_SPIPSS_CLOCK_PHASE</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
      SPIPSS clock phase
      CPHA=0 means to change/sample values of data signals on first edge,
      otherwise on 2nd
    </description>
    <valueType>uint8</valueType>
    <enum>FIRSTEDGE=0, SECONDEDGE=1</enum>
    <writeable/>
  </attribute>

  <attribute>
    <id>ATTR_PM_SPIPSS_CLOCK_DIVIDER</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
      SPI clock speed divider to divide the nest_nclk/4 mesh clock,
      which results in a divider = ((nest_freq / (SPI_freq*8)) - 1)
    </description>
    <valueType>uint16</valueType>
    <writeable/>
  </attribute>

  <attribute>
    <id>ATTR_PM_SPIPSS_INTER_FRAME_DELAY_SETTING</id>
    <targetType>TARGET_TYPE_PROC_CHIP</targetType>
    <description>
      Delay is computed as:
      (value * ~100ns_hang_pulse) +0/-~100ns_hang_pulse time
      0x00000: Wait 1 PSS Clock
      0x00001 - 0x1FFFF: value = number of ~100ns_hang_pulses
      For values greater than 0x00000, the actual delay is 1 PSS Clock +
      the time delay designated by the value defined.
      Max. delay at 0x1FFFF: 13.1ms + 1 PSSI clock cycle.
    </description>
    <valueType>uint32</valueType>
    <writeable/>
  </attribute>

</attributes>
