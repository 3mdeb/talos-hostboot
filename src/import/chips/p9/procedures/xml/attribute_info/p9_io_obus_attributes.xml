<!-- IBM_PROLOG_BEGIN_TAG                                                   -->
<!-- This is an automatically generated prolog.                             -->
<!--                                                                        -->
<!-- $Source: src/import/chips/p9/procedures/xml/attribute_info/p9_io_obus_attributes.xml $ -->
<!--                                                                        -->
<!-- OpenPOWER HostBoot Project                                             -->
<!--                                                                        -->
<!-- Contributors Listed Below - COPYRIGHT 2015,2019                        -->
<!-- [+] International Business Machines Corp.                              -->
<!--                                                                        -->
<!--                                                                        -->
<!-- Licensed under the Apache License, Version 2.0 (the "License");        -->
<!-- you may not use this file except in compliance with the License.       -->
<!-- You may obtain a copy of the License at                                -->
<!--                                                                        -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                         -->
<!--                                                                        -->
<!-- Unless required by applicable law or agreed to in writing, software    -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,      -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        -->
<!-- implied. See the License for the specific language governing           -->
<!-- permissions and limitations under the License.                         -->
<!--                                                                        -->
<!-- IBM_PROLOG_END_TAG                                                     -->
<attributes>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_IO_OBUS_DCCAL_FLAGS</id>
  <targetType>TARGET_TYPE_OBUS</targetType>
  <description>
    Flags to indicate if rx / tx dccal has been run.
  </description>
  <valueType>uint8</valueType>
  <enum>
    NONE = 0x0,
    TX = 0x1,
    RX = 0x2
  </enum>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_IO_OBUS_PAT_A_DETECT_RUN</id>
  <targetType>TARGET_TYPE_OBUS</targetType>
  <description>
    Marks whether pattern A detection routine has been run on this
    endpoint
  </description>
  <valueType>uint8</valueType>
  <enum>
    FALSE = 0x0,
    TRUE = 0x1
  </enum>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_IO_OBUS_PAT_A_DETECT_RX_AMP_VALUE</id>
  <targetType>TARGET_TYPE_OBUS</targetType>
  <description>
    Set RX AMP value for pattern A detection.
  </description>
  <valueType>uint8</valueType>
  <platInit/>
  <default>35</default>
  <overrideOnly/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_IO_OBUS_PAT_A_CAPTURE</id>
  <targetType>TARGET_TYPE_OBUS</targetType>
  <description>
    Pattern A data pattern collected on this endpoint
  </description>
  <valueType>uint32</valueType>
  <array>24</array>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_IO_OBUS_TRAIN_FOR_RECOVERY</id>
  <targetType>TARGET_TYPE_OBUS</targetType>
  <description>
    Indicates that all future training actions will occur for
    runtime link recovery.
  </description>
  <valueType>uint8</valueType>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_IO_OBUS_LANE_PDWN</id>
  <targetType>TARGET_TYPE_OBUS</targetType>
  <description>
    Per-lane powerdown state
  </description>
  <valueType>uint32</valueType>
  <writeable/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_IO_O_DEBUG</id>
  <targetType>TARGET_TYPE_OBUS</targetType>
  <description>
    Indicate if debug data should be taken pre / post linktraining.
  </description>
  <valueType>uint8</valueType>
  <enum>
    FALSE = 0x0,
    TRUE = 0x1
  </enum>
  <initToZero/>
  <platInit/>
  <overrideOnly/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_IO_O_MFG_CHK</id>
  <targetType>TARGET_TYPE_OBUS</targetType>
  <description>
    Indicate if manufcaturing tests should be taken pre / post linktraining.
  </description>
  <valueType>uint8</valueType>
  <enum>
    FALSE = 0x0,
    TRUE = 0x1
  </enum>
  <initToZero/>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_IO_O_MFG_MIN_EYE_WIDTH</id>
  <targetType>TARGET_TYPE_OBUS</targetType>
  <description>
    Minimum eye width to allow passing through manufacturing.
  </description>
  <valueType>uint8</valueType>
  <initToZero/>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_IO_OBUS_TX_MARGIN_RATIO</id>
  <targetType>TARGET_TYPE_OBUS</targetType>
  <description>
    Value to select amount of margin to be applied.
  </description>
  <valueType>uint8</valueType>
  <initToZero/>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_IO_OBUS_TX_FFE_PRECURSOR</id>
  <targetType>TARGET_TYPE_OBUS</targetType>
  <description>
    Value to select amount of tx ffe precusor to apply.
  </description>
  <valueType>uint8</valueType>
  <initToZero/>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_IO_OBUS_TX_FFE_POSTCURSOR</id>
  <targetType>TARGET_TYPE_OBUS</targetType>
  <description>
    Value to select amount of tx ffe postcusor to apply.
  </description>
  <valueType>uint8</valueType>
  <initToZero/>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_IO_OLLFIR_MASK</id>
  <targetType>TARGET_TYPE_OBUS</targetType>
  <description>
    This attribute provides a place for Hostboot to save off the IO_OLLFIR_MASK.
    During IPL time Hostboot wants to change the value of the FIR but it will
    write the value back during Hostboot Runtime (HBRT). Hostboot will need to
    wait to save the values until after p9_chiplet_scominit is called because that
    HWP sets the fir masks we want to save off. Values will need to restored
    after the PEER_TARGET values have been updated in HBRT
  </description>
  <valueType>uint64</valueType>
  <initToZero/>
  <writeable/>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_IO_PB_IOOFIR_MASK</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    This attribute provides a place for Hostboot to save off the PB_IOOFIR_MASK.
    During IPL time Hostboot wants to change the value of the FIR but it will
    write the value back during Hostboot Runtime (HBRT). Hostboot will need to
    wait to save the values until after p9_chiplet_scominit is called because that
    HWP sets the fir masks we want to save off. Values will need to restored
    after the PEER_TARGET values have been updated in HBRT
  </description>
  <valueType>uint64</valueType>
  <initToZero/>
  <writeable/>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_IO_O_CHANNEL_TYPE</id>
  <targetType>TARGET_TYPE_OBUS</targetType>
  <description>
    Indicates if the Obus channel is a board or a cable
  </description>
  <valueType>uint8</valueType>
  <enum>
    BOARD = 0x0,
    CABLE = 0x1
  </enum>
  <initToZero/>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_IO_O_MFG_STRESS_PR_OFFSET_EVEN</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    This attribute provides an a way to stress the SMP Abus Even Lanes
    in Manufacturing. By applying a phase rotator offset we can further
    stress the phy.  This is a 6-bit 2's complement value that would be
    right justified in the 8 bit UINT attribute value.
  </description>
  <valueType>uint8</valueType>
  <initToZero/>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_IO_O_MFG_STRESS_PR_OFFSET_ODD</id>
  <targetType>TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    This attribute provides an a way to stress the SMP Abus Odd Lanes
    in Manufacturing. By applying a phase rotator offset we can further
    stress the phy.  This is a 6-bit 2's complement value that would be
    right justified in the 8 bit UINT attribute value.
  </description>
  <valueType>uint8</valueType>
  <initToZero/>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_IO_O_MNFG_ERROR_THRESHOLD</id>
  <targetType>TARGET_TYPE_SYSTEM</targetType>
  <description>
    When in MNFG mode, we want to change the CRC/ECC thresholds and FIR
    masks.  This is put into place for our longer manufacturing test runs.
  </description>
  <valueType>uint8</valueType>
  <enum>
    NONE = 0x0,
    CORNER_MODE = 0x1,
    RELIABILITY_MODE = 0x2
  </enum>
  <initToZero/>
  <platInit/>
</attribute>
<!-- ********************************************************************** -->
</attributes>
