//  IBM_PROLOG_BEGIN_TAG
//  This is an automatically generated prolog.
//
//  $Source: src/include/usr/hwpf/plat/fapiPlatReasonCodes.H $
//
//  IBM CONFIDENTIAL
//
//  COPYRIGHT International Business Machines Corp. 2011
//
//  p1
//
//  Object Code Only (OCO) source materials
//  Licensed Internal Code Source Materials
//  IBM HostBoot Licensed Internal Code
//
//  The source code for this program is not published or other-
//  wise divested of its trade secrets, irrespective of what has
//  been deposited with the U.S. Copyright Office.
//
//  Origin: 30
//
//  IBM_PROLOG_END
#ifndef FAPIPLATREASONCODES_H_
#define FAPIPLATREASONCODES_H_

#include <hbotcompid.H>

namespace fapi
{
    /**
     * @brief Defines the HWPF::PLAT error log module IDs
     */
    enum hwpfModuleId
    {
        // FAPI generated errors
        MOD_FAPI_RC_TO_ERRL                        = 0x01,

        // HWP generated errors
        MOD_HWP_RC_TO_ERRL                         = 0x02,

        // PLAT generated errors
        MOD_FAPI_GET_CHILD_CHIPLETS                = 0x03,
        MOD_FAPI_GET_PARENT_CHIP                   = 0x04,
        MOD_PLAT_ATTR_SVC_CREATE_ATTR_ACCESS_ERROR = 0x05,
        MOD_HANDLE_ECMD_BUF_RC                     = 0x06,
        MOD_VERIFY_CFAM_ACCESS_TARGET              = 0x07,
        MOD_ATTR_BASE_ADDR_GET                     = 0x08,
        MOD_ATTR_DQ_MAP_GET                        = 0x09,
        MOD_GET_CFAM_CHIP_TARGET                   = 0x0A,

    };

    /**
     * @brief Defines the HWPF::PLAT error log reason codes
     */
    enum hwpfReasonCode
    {
        // FAPI generated errors (must match fapiReturnCodes.H)
        RC_INVALID_ATTR_GET           = HWPF_COMP_ID | 0x01,

        // HWP generated errors
        RC_HWP_GENERATED_ERROR        = HWPF_COMP_ID | 0x0f,

        // PLAT Errors generated by HostBoot code
        RC_INVALID_REQUEST            = HWPF_COMP_ID | 0x10,
        RC_UNSUPPORTED_REQUEST        = HWPF_COMP_ID | 0x11,
        RC_NO_SINGLE_PARENT           = HWPF_COMP_ID | 0x12,
        RC_FAILED_TO_ACCESS_ATTRIBUTE = HWPF_COMP_ID | 0x13,
        RC_ECMD_OPERATION_FAILURE     = HWPF_COMP_ID | 0x14,
        RC_CFAM_ACCESS_ON_PROC_ERR    = HWPF_COMP_ID | 0x15,
        RC_ATTR_BASE_BAD_PARAM        = HWPF_COMP_ID | 0x16,
        RC_INVALID_NUM_PARENT_CHIP    = HWPF_COMP_ID | 0x17,
    };

    /**
     * @brief Defines the HWPF::PLAT (Hostboot) error log user detail data
     *        sections
     */
    enum hwpfUserDetailDataSubSection
    {
        HWPF_UDT_HWP_RCVALUE = 1,
        HWPF_UDT_HWP_TARGET = 2,
        HWPF_UDT_HWP_ECMDDBB = 3,
        HWPF_UDT_HWP_DATA = 4,
    };
};

// HostBoot ErrorLog tags for FAPI errors (see fapiReturnCodes.H)
/*@
 * @errortype
 * @moduleid     MOD_FAPI_RC_TO_ERRL
 * @reasoncode   RC_INVALID_ATTR_GET
 * @devdesc      InitFile HW Procedure requested an invalid attribute
 */

#endif
